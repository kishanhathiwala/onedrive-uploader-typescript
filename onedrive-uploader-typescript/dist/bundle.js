/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={4585:(e,t,a)=>{"use strict";a.r(t),a.d(t,{AllowedHostsValidator:()=>_,AnonymousAuthenticationProvider:()=>T,ApiError:()=>w,BackingStoreFactorySingleton:()=>l,BackingStoreParseNodeFactory:()=>c,BackingStoreSerializationWriterProxyFactory:()=>m,BaseBearerTokenAuthenticationProvider:()=>E,DateOnly:()=>C,Duration:()=>R,HttpMethod:()=>I,InMemoryBackingStore:()=>d,InMemoryBackingStoreFactory:()=>s,NativeResponseHandler:()=>P,NativeResponseWrapper:()=>M,ParseNodeFactoryRegistry:()=>r,ParseNodeProxyFactory:()=>i,RequestInformation:()=>O,SerializationWriterFactoryRegistry:()=>o,SerializationWriterProxyFactory:()=>n,TimeOnly:()=>k,enableBackingStoreForParseNodeFactory:()=>v,enableBackingStoreForSerializationWriterFactory:()=>f,formatSegment:()=>b,getPathParameters:()=>D,registerDefaultDeserializer:()=>h,registerDefaultSerializer:()=>u,toFirstCharacterUpper:()=>x,validateProtocol:()=>S});class r{constructor(){this.contentTypeAssociatedFactories=new Map}getValidContentType(){throw new Error("The registry supports multiple content types. Get the registered factory instead.")}getRootParseNode(e,t){if(!e)throw new Error("content type cannot be undefined or empty");if(!t)throw new Error("content cannot be undefined or empty");const a=e.split(";")[0];let r=this.contentTypeAssociatedFactories.get(a);if(r)return r.getRootParseNode(a,t);const i=a.replace(/[^/]+\+/gi,"");if(r=this.contentTypeAssociatedFactories.get(i),r)return r.getRootParseNode(i,t);throw new Error(`Content type ${i} does not have a factory registered to be parsed`)}}r.defaultInstance=new r;class i{constructor(e,t,a){if(this._concrete=e,this._onBefore=t,this._onAfter=a,!e)throw new Error("_concrete cannot be undefined")}getValidContentType(){return this._concrete.getValidContentType()}getRootParseNode(e,t){const a=this._concrete.getRootParseNode(e,t),r=a.onBeforeAssignFieldValues,i=a.onAfterAssignFieldValues;return a.onBeforeAssignFieldValues=e=>{this._onBefore&&this._onBefore(e),r&&r(e)},a.onAfterAssignFieldValues=e=>{this._onAfter&&this._onAfter(e),i&&i(e)},a}}class o{constructor(){this.contentTypeAssociatedFactories=new Map}getValidContentType(){throw new Error("The registry supports multiple content types. Get the registered factory instead.")}getSerializationWriter(e){if(!e)throw new Error("content type cannot be undefined or empty");const t=e.split(";")[0];let a=this.contentTypeAssociatedFactories.get(t);if(a)return a.getSerializationWriter(t);const r=t.replace(/[^/]+\+/gi,"");if(a=this.contentTypeAssociatedFactories.get(r),a)return a.getSerializationWriter(r);throw new Error(`Content type ${r} does not have a factory registered to be serialized`)}}o.defaultInstance=new o;class n{constructor(e,t,a,r){if(this._concrete=e,this._onBefore=t,this._onAfter=a,this._onStart=r,!e)throw new Error("_concrete cannot be undefined")}getValidContentType(){return this._concrete.getValidContentType()}getSerializationWriter(e){const t=this._concrete.getSerializationWriter(e),a=t.onBeforeObjectSerialization,r=t.onAfterObjectSerialization,i=t.onStartObjectSerialization;return t.onBeforeObjectSerialization=e=>{this._onBefore&&this._onBefore(e),a&&a(e)},t.onAfterObjectSerialization=e=>{this._onAfter&&this._onAfter(e),r&&r(e)},t.onStartObjectSerialization=(e,t)=>{this._onStart&&this._onStart(e,t),i&&i(e,t)},t}}var p=a(2259);class d{constructor(){this.subscriptions=new Map,this.store=new Map,this.returnOnlyChangedValues=!1,this._initializationCompleted=!0}get(e){const t=this.store.get(e);if(t&&(this.returnOnlyChangedValues&&t.changed||!this.returnOnlyChangedValues))return t.value}set(e,t){const a=this.store.get(e),r=null==a?void 0:a.value;a?(a.value=t,a.changed=this.initializationCompleted):this.store.set(e,{changed:this.initializationCompleted,value:t}),this.subscriptions.forEach((a=>{a(e,r,t)}))}enumerate(){let e=[...this.store.entries()];return this.returnOnlyChangedValues&&(e=e.filter((([e,t])=>t.changed))),e.map((([e,t])=>({key:e,value:t})))}enumerateKeysForValuesChangedToNull(){const e=[];for(const[t,a]of this.store)a.changed&&!a.value&&e.push(t);return e}subscribe(e,t){if(!e)throw new Error("callback cannot be undefined");return t=null!=t?t:(0,p.Z)(),this.subscriptions.set(t,e),t}unsubscribe(e){this.subscriptions.delete(e)}clear(){this.store.clear()}set initializationCompleted(e){this._initializationCompleted=e,this.store.forEach((t=>{t.changed=!e}))}get initializationCompleted(){return this._initializationCompleted}}class s{createBackingStore(){return new d}}class l{}l.instance=new s;class c extends i{constructor(e){super(e,(e=>{const t=e;t&&t.backingStore&&(t.backingStore.initializationCompleted=!1)}),(e=>{const t=e;t&&t.backingStore&&(t.backingStore.initializationCompleted=!0)}))}}class m extends n{constructor(e){super(e,(e=>{const t=e;t&&t.backingStore&&(t.backingStore.returnOnlyChangedValues=!0)}),(e=>{const t=e;t&&t.backingStore&&(t.backingStore.returnOnlyChangedValues=!1,t.backingStore.initializationCompleted=!0)}),((e,t)=>{const a=e;if(a&&a.backingStore){const e=a.backingStore.enumerateKeysForValuesChangedToNull();for(const a of e)t.writeNullValue(a)}}))}}function u(e){if(!e)throw new Error("Type is required");const t=new e;o.defaultInstance.contentTypeAssociatedFactories.set(t.getValidContentType(),t)}function h(e){if(!e)throw new Error("Type is required");const t=new e;r.defaultInstance.contentTypeAssociatedFactories.set(t.getValidContentType(),t)}function f(e){if(!e)throw new Error("Original must be specified");let t=e;return e instanceof o?y(e):t=new m(e),y(o.defaultInstance),g(r.defaultInstance),t}function v(e){if(!e)throw new Error("Original must be specified");let t=e;return e instanceof r?g(e):t=new c(e),g(r.defaultInstance),t}function g(e){for(const[t,a]of e.contentTypeAssociatedFactories)a instanceof c||a instanceof r||e.contentTypeAssociatedFactories.set(t,new c(a))}function y(e){for(const[t,a]of e.contentTypeAssociatedFactories)a instanceof m||a instanceof o||e.contentTypeAssociatedFactories.set(t,new m(a))}class w extends Error{constructor(e){super(e)}}class _{constructor(e=new Set){this.allowedHosts=null!=e?e:new Set}getAllowedHosts(){return Array.from(this.allowedHosts)}setAllowedHosts(e){this.allowedHosts=e}isUrlHostValid(e){var t;if(!e)return!1;if(0===this.allowedHosts.size)return!0;const a=e.split("://");if(a.length>=2){const e=a[1];if(e)return this.isHostAndPathValid(e)}else if(!e.startsWith("http"))return this.isHostAndPathValid(e);return!!(window&&window.location&&window.location.host)&&this.allowedHosts.has(null===(t=window.location.host)||void 0===t?void 0:t.toLowerCase())}isHostAndPathValid(e){const t=e.split("/");if(t.length>=2){const e=t[0];if(e)return this.allowedHosts.has(e.toLowerCase())}return!1}}class T{constructor(){this.authenticateRequest=e=>Promise.resolve()}}class E{constructor(e){this.accessTokenProvider=e,this.authenticateRequest=async e=>{if(!e)throw new Error("request info cannot be null");if(!e.headers||!e.headers[E.authorizationHeaderKey]){const t=await this.accessTokenProvider.getAuthorizationToken(e.URL);e.headers||(e.headers={}),t&&(e.headers[E.authorizationHeaderKey]=`Bearer ${t}`)}}}}function S(e){if(!(e.toLocaleLowerCase().startsWith("https://")||window&&window.location&&"https:"!==window.location.protocol.toLowerCase()))throw new Error("Authentication scheme can only be used with https requests")}E.authorizationHeaderKey="Authorization";class C{constructor({year:e=0,month:t=1,day:a=1}){this.date=new Date(e,t-1,a)}get year(){return this.date.getFullYear()}set year(e){this.date.setFullYear(e)}get month(){return this.date.getMonth()+1}set month(e){this.date.setMonth(e-1)}get day(){return this.date.getDate()}set day(e){this.date.setDate(e)}static fromDate(e){if(!e)throw new Error("Date cannot be undefined");const t=new C({});return t.date=new Date(e),t}static parse(e){var t,a,r,i,o,n;if(!e||0===e.length)return;const p=Date.parse(e);if(isNaN(p)){const p=/^(?<year>\d{4,})-(?<month>0[1-9]|1[012])-(?<day>0[1-9]|[12]\d|3[01])$/gi.exec(e);if(p){const e=parseInt(null!==(a=null===(t=p.groups)||void 0===t?void 0:t.year)&&void 0!==a?a:""),d=parseInt(null!==(i=null===(r=p.groups)||void 0===r?void 0:r.month)&&void 0!==i?i:""),s=parseInt(null!==(n=null===(o=p.groups)||void 0===o?void 0:o.day)&&void 0!==n?n:"");return new C({year:e,month:d,day:s})}throw new Error("Value is not a valid date-only representation")}{const e=new Date(p);return this.fromDate(e)}}toString(){return`${b(this.year,4)}-${b(this.month)}-${b(this.day)}`}}function b(e,t=2){return e.toString().padStart(t,"0")}var A=a(2487);class R{constructor({years:e=0,months:t=0,weeks:a=0,days:r=0,hours:i=0,minutes:o=0,seconds:n=0,negative:p=!1}){if(e<0||e>9999)throw new Error("Year must be between 0 and 9999");if(t<0||t>11)throw new Error("Month must be between 0 and 11");if(a<0||a>53)throw new Error("Week must be between 0 and 53");if(r<0||r>6)throw new Error("Day must be between 0 and 6");if(i<0||i>23)throw new Error("Hour must be between 0 and 23");if(o<0||o>59)throw new Error("Minute must be between 0 and 59");if(n<0||n>59)throw new Error("Second must be between 0 and 59");if((e>0||t>0)&&a>0)throw new Error("Cannot have weeks and months or weeks and years");this.years=e,this.months=t,this.weeks=a,this.days=r,this.hours=i,this.minutes=o,this.seconds=n,this.negative=p}static parse(e){var t,a,r,i,o,n,p,d;if(!e||0===e.length)return;const s=(0,A.Qc)(e);return new R({years:null!==(t=s.years)&&void 0!==t?t:0,months:null!==(a=s.months)&&void 0!==a?a:0,weeks:null!==(r=s.weeks)&&void 0!==r?r:0,days:null!==(i=s.days)&&void 0!==i?i:0,hours:null!==(o=s.hours)&&void 0!==o?o:0,minutes:null!==(n=s.minutes)&&void 0!==n?n:0,seconds:null!==(p=s.seconds)&&void 0!==p?p:0,negative:null!==(d=s.negative)&&void 0!==d&&d})}toString(){return(0,A.qC)(this)}}var I,N=a(7882);class k{constructor({hours:e=0,minutes:t=0,seconds:a=0,picoseconds:r=0}){if(e<0||e>23)throw new Error("Hour must be between 0 and 23");if(t<0||t>59)throw new Error("Minute must be between 0 and 59");if(a<0||a>59)throw new Error("Second must be between 0 and 59");if(r<0||r>999999999999)throw new Error("Millisecond must be between 0 and 999999999999");this.hours=e,this.minutes=t,this.seconds=a,this.picoseconds=r}static fromDate(e){if(!e)throw new Error("Date cannot be undefined");return new k({hours:e.getHours(),minutes:e.getMinutes(),seconds:e.getSeconds(),picoseconds:1e9*e.getMilliseconds()})}static parse(e){var t,a,r,i,o,n,p,d;if(!e||0===e.length)return;const s=Date.parse(e);if(isNaN(s)){const s=/^(?<hours>[01]\d|2[0-3]):(?<minutes>[0-5]\d):(?<seconds>[0-5]\d)(?:[.](?<milliseconds>\d{1,12}))?$/gi.exec(e);if(s){const e=parseInt(null!==(a=null===(t=s.groups)||void 0===t?void 0:t.hours)&&void 0!==a?a:""),l=parseInt(null!==(i=null===(r=s.groups)||void 0===r?void 0:r.minutes)&&void 0!==i?i:""),c=parseInt(null!==(n=null===(o=s.groups)||void 0===o?void 0:o.seconds)&&void 0!==n?n:""),m=parseInt(null!==(d=null===(p=s.groups)||void 0===p?void 0:p.milliseconds)&&void 0!==d?d:"0");return new k({hours:e,minutes:l,seconds:c,picoseconds:m})}throw new Error("Value is not a valid time-only representation")}{const e=new Date(s);return this.fromDate(e)}}toString(){return`${b(this.hours,2)}:${b(this.minutes,2)}:${b(this.seconds,2)}.${b(this.picoseconds,12)}`}}class O{constructor(){this.pathParameters={},this.queryParameters={},this.headers={},this._requestOptions={},this.setContentFromParsable=(e,t,...a)=>{const r=this.getSerializationWriter(e,t,a);this.headers||(this.headers={}),1===a.length?r.writeObjectValue(void 0,a[0]):r.writeCollectionOfObjectValues(void 0,a),this.setContentAndContentType(r,t)},this.setContentAndContentType=(e,t)=>{t&&(this.headers[O.contentTypeHeader]=t),this.content=e.getSerializedContent()},this.getSerializationWriter=(e,t,...a)=>{if(!e)throw new Error("httpCore cannot be undefined");if(!t)throw new Error("contentType cannot be undefined");if(!a||0===a.length)throw new Error("values cannot be undefined or empty");return e.getSerializationWriterFactory().getSerializationWriter(t)},this.setContentFromScalar=(e,t,...a)=>{const r=this.getSerializationWriter(e,t,a);if(this.headers||(this.headers={}),1===a.length){const e=a[0],t=typeof e;if(e)if("boolean"===t)r.writeBooleanValue(void 0,e);else if("string"===t)r.writeStringValue(void 0,e);else if(e instanceof Date)r.writeDateValue(void 0,e);else if(e instanceof C)r.writeDateOnlyValue(void 0,e);else if(e instanceof k)r.writeTimeOnlyValue(void 0,e);else if(e instanceof R)r.writeDurationValue(void 0,e);else if("number"===t)r.writeNumberValue(void 0,e);else{if(!Array.isArray(e))throw new Error(`encountered unknown value type during serialization ${t}`);r.writeCollectionOfPrimitiveValues(void 0,e)}else r.writeNullValue(void 0)}else r.writeCollectionOfPrimitiveValues(void 0,a);this.setContentAndContentType(r,t)},this.setStreamContent=e=>{this.headers[O.contentTypeHeader]=O.binaryContentType,this.content=e},this.setQueryStringParametersFromRawObject=e=>{e&&Object.entries(e).forEach((([t,a])=>{let r=t;if(e.getQueryParameter){const t=e.getQueryParameter(r);t&&(r=t)}this.queryParameters[r]=a}))}}get URL(){const e=this.pathParameters[O.raw_url_key];if(this.uri)return this.uri;if(e)return this.URL=e,e;if(this.queryParameters){if(this.pathParameters){if(this.urlTemplate){const e=new N.o.Template(this.urlTemplate),t={};for(const e in this.queryParameters)this.queryParameters[e]&&(t[e]=this.queryParameters[e]);for(const e in this.pathParameters)this.pathParameters[e]&&(t[e]=this.pathParameters[e]);return e.expand(t)}throw new Error("urlTemplate cannot be undefined")}throw new Error("pathParameters cannot be undefined")}throw new Error("queryParameters cannot be undefined")}set URL(e){if(!e)throw new Error("URL cannot be undefined");this.uri=e,this.queryParameters={},this.pathParameters={}}getRequestOptions(){return this._requestOptions}addRequestHeaders(e){if(e)for(const t in e)this.headers[t]=e[t]}addRequestOptions(e){e&&0!==e.length&&e.forEach((e=>{this._requestOptions[e.getKey()]=e}))}removeRequestOptions(...e){e&&0!==e.length&&e.forEach((e=>{delete this._requestOptions[e.getKey()]}))}}function D(e){const t={};if("string"==typeof e)t[O.raw_url_key]=e;else if(e)for(const a in e)t[a]=e[a];return t}O.raw_url_key="request-raw-url",O.binaryContentType="application/octet-stream",O.contentTypeHeader="Content-Type",function(e){e.GET="GET",e.POST="POST",e.PATCH="PATCH",e.DELETE="DELETE",e.OPTIONS="OPTIONS",e.CONNECT="CONNECT",e.TRACE="TRACE",e.HEAD="HEAD",e.PUT="PUT"}(I||(I={}));class P{handleResponseAsync(e,t){return this.value=e,this.errorMappings=t,Promise.resolve(void 0)}}class M{}function x(e){return e&&e.length>0?e.substring(0,1).toLocaleUpperCase()+e.substring(1):""}M.CallAndGetNative=async(e,t,a,r)=>{const i=new P;return await e(t,a,r,i),i.value},M.CallAndGetNativeWithBody=async(e,t,a,r,i)=>{const o=new P;return await e(t,a,r,i,o),o.value}},2699:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FetchRequestAdapter=void 0;const r=a(7582),i=a(4585),o=a(5578);t.FetchRequestAdapter=class{constructor(e,t=i.ParseNodeFactoryRegistry.defaultInstance,a=i.SerializationWriterFactoryRegistry.defaultInstance,n=new o.HttpClient){if(this.authenticationProvider=e,this.parseNodeFactory=t,this.serializationWriterFactory=a,this.httpClient=n,this.baseUrl="",this.getResponseContentType=e=>{var t;const a=null===(t=e.headers.get("content-type"))||void 0===t?void 0:t.toLowerCase();if(!a)return;const r=a.split(";");return 0===r.length?void 0:r[0]},this.sendCollectionOfPrimitiveAsync=(e,t,a,i)=>r.__awaiter(this,void 0,void 0,(function*(){if(!e)throw new Error("requestInfo cannot be null");const r=yield this.getHttpResponseMessage(e);if(a)return yield a.handleResponseAsync(r,i);try{if(yield this.throwFailedResponses(r,i),this.shouldReturnUndefined(r))return;switch(t){case"string":case"number":case"boolean":case"Date":const e=yield this.getRootParseNode(r);if("string"===t)return e.getCollectionOfPrimitiveValues();if("number"===t)return e.getCollectionOfPrimitiveValues();if("boolean"===t)return e.getCollectionOfPrimitiveValues();if("Date"===t)return e.getCollectionOfPrimitiveValues();if("Duration"===t)return e.getCollectionOfPrimitiveValues();if("DateOnly"===t)return e.getCollectionOfPrimitiveValues();if("TimeOnly"===t)return e.getCollectionOfPrimitiveValues();throw new Error("unexpected type to deserialize")}}finally{yield this.purgeResponseBody(r)}})),this.sendCollectionAsync=(e,t,a,i)=>r.__awaiter(this,void 0,void 0,(function*(){if(!e)throw new Error("requestInfo cannot be null");const r=yield this.getHttpResponseMessage(e);if(a)return yield a.handleResponseAsync(r,i);try{if(yield this.throwFailedResponses(r,i),this.shouldReturnUndefined(r))return;return(yield this.getRootParseNode(r)).getCollectionOfObjectValues(t)}finally{yield this.purgeResponseBody(r)}})),this.sendAsync=(e,t,a,i)=>r.__awaiter(this,void 0,void 0,(function*(){if(!e)throw new Error("requestInfo cannot be null");const r=yield this.getHttpResponseMessage(e);if(a)return yield a.handleResponseAsync(r,i);try{if(yield this.throwFailedResponses(r,i),this.shouldReturnUndefined(r))return;return(yield this.getRootParseNode(r)).getObjectValue(t)}finally{yield this.purgeResponseBody(r)}})),this.sendPrimitiveAsync=(e,t,a,i)=>r.__awaiter(this,void 0,void 0,(function*(){if(!e)throw new Error("requestInfo cannot be null");const r=yield this.getHttpResponseMessage(e);if(a)return yield a.handleResponseAsync(r,i);try{if(yield this.throwFailedResponses(r,i),this.shouldReturnUndefined(r))return;switch(t){case"ArrayBuffer":return yield r.arrayBuffer();case"string":case"number":case"boolean":case"Date":const e=yield this.getRootParseNode(r);if("string"===t)return e.getStringValue();if("number"===t)return e.getNumberValue();if("boolean"===t)return e.getBooleanValue();if("Date"===t)return e.getDateValue();if("Duration"===t)return e.getDurationValue();if("DateOnly"===t)return e.getDateOnlyValue();if("TimeOnly"===t)return e.getTimeOnlyValue();throw new Error("unexpected type to deserialize")}}finally{yield this.purgeResponseBody(r)}})),this.sendNoResponseContentAsync=(e,t,a)=>r.__awaiter(this,void 0,void 0,(function*(){if(!e)throw new Error("requestInfo cannot be null");const r=yield this.getHttpResponseMessage(e);if(t)return yield t.handleResponseAsync(r,a);try{yield this.throwFailedResponses(r,a)}finally{yield this.purgeResponseBody(r)}})),this.enableBackingStore=e=>{if(this.parseNodeFactory=(0,i.enableBackingStoreForParseNodeFactory)(this.parseNodeFactory),this.serializationWriterFactory=(0,i.enableBackingStoreForSerializationWriterFactory)(this.serializationWriterFactory),!this.serializationWriterFactory||!this.parseNodeFactory)throw new Error("unable to enable backing store");e&&(i.BackingStoreFactorySingleton.instance=e)},this.getRootParseNode=e=>r.__awaiter(this,void 0,void 0,(function*(){const t=yield e.arrayBuffer(),a=this.getResponseContentType(e);if(!a)throw new Error("no response content type found for deserialization");return this.parseNodeFactory.getRootParseNode(a,t)})),this.shouldReturnUndefined=e=>204===e.status,this.purgeResponseBody=e=>r.__awaiter(this,void 0,void 0,(function*(){!e.bodyUsed&&e.body&&(yield e.arrayBuffer())})),this.throwFailedResponses=(e,t)=>r.__awaiter(this,void 0,void 0,(function*(){var a,r;if(e.ok)return;const o=e.status,n=o.toString();if(!t||!(t[n]||o>=400&&o<500&&t["4XX"]||o>=500&&o<600&&t["5XX"]))throw new i.ApiError("the server returned an unexpected status code and no error class is registered for this code "+o);const p=null!==(r=null!==(a=t[n])&&void 0!==a?a:o>=400&&o<500?t["4XX"]:void 0)&&void 0!==r?r:o>=500&&o<600?t["5XX"]:void 0,d=(yield this.getRootParseNode(e)).getObjectValue(p);throw d||new i.ApiError("unexpected error type"+typeof d)})),this.getHttpResponseMessage=e=>r.__awaiter(this,void 0,void 0,(function*(){if(!e)throw new Error("requestInfo cannot be null");this.setBaseUrlForRequestInformation(e),yield this.authenticationProvider.authenticateRequest(e);const t=this.getRequestFromRequestInformation(e);return yield this.httpClient.executeFetch(e.URL,t,e.getRequestOptions())})),this.setBaseUrlForRequestInformation=e=>{e.pathParameters.baseurl=this.baseUrl},this.getRequestFromRequestInformation=e=>{var t;return{method:null===(t=e.httpMethod)||void 0===t?void 0:t.toString(),headers:e.headers,body:e.content}},!e)throw new Error("authentication provider cannot be null");if(!t)throw new Error("parse node factory cannot be null");if(!a)throw new Error("serialization writer factory cannot be null");if(!n)throw new Error("http client cannot be null")}getSerializationWriterFactory(){return this.serializationWriterFactory}}},5578:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.HttpClient=void 0;const r=a(7582),i=a(5241),o=a(5729);t.HttpClient=class{constructor(e,...t){this.customFetch=e,t.length&&t[0]?this.customFetch?this.setMiddleware(...t,new i.CustomFetchHandler(e)):this.setMiddleware(...t):this.setMiddleware(...o.MiddlewareFactory.getDefaultMiddlewareChain(e))}setMiddleware(...e){e.forEach(((t,a)=>{a<e.length-1&&(t.next=e[a+1])})),this.middleware=e[0]}executeFetch(e,t,a){return r.__awaiter(this,void 0,void 0,(function*(){if(this.customFetch&&!this.middleware)return this.customFetch(e,t);if(this.middleware)return yield this.middleware.execute(e,t,a);throw new Error("Please provide middlewares or a custom fetch function to execute the request")}))}}},9451:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=a(7582);r.__exportStar(a(2699),t),r.__exportStar(a(5578),t),r.__exportStar(a(7226),t),r.__exportStar(a(5241),t),r.__exportStar(a(9785),t),r.__exportStar(a(9175),t),r.__exportStar(a(5487),t),r.__exportStar(a(6281),t),r.__exportStar(a(5611),t),r.__exportStar(a(9354),t),r.__exportStar(a(8970),t),r.__exportStar(a(8685),t),r.__exportStar(a(5729),t),r.__exportStar(a(4131),t),r.__exportStar(a(4141),t)},5241:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CustomFetchHandler=void 0;const r=a(7582);t.CustomFetchHandler=class{constructor(e){this.customFetch=e}execute(e,t){return r.__awaiter(this,void 0,void 0,(function*(){return yield this.customFetch(e,t)}))}}},7226:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},5729:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MiddlewareFactory=void 0;const r=a(1853),i=a(5241),o=a(9785),n=a(9175),p=a(5487);t.MiddlewareFactory=class{static getDefaultMiddlewareChain(e=r.default){return[new p.RetryHandler,new n.RedirectHandler,new o.ParametersNameDecodingHandler,new i.CustomFetchHandler(e)]}}},6281:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ParametersNameDecodingHandlerOptions=t.ParametersNameDecodingHandlerOptionsKey=void 0,t.ParametersNameDecodingHandlerOptionsKey="RetryHandlerOptionKey",t.ParametersNameDecodingHandlerOptions=class{constructor(e=!0,t=[".","-","~","$"]){this.enable=e,this.charactersToDecode=t}getKey(){return t.ParametersNameDecodingHandlerOptionsKey}}},5611:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RedirectHandlerOptions=t.RedirectHandlerOptionKey=void 0,t.RedirectHandlerOptionKey="RedirectHandlerOption";class a{constructor(e=a.DEFAULT_MAX_REDIRECTS,t=a.defaultShouldRetry){if(this.maxRedirects=e,this.shouldRedirect=t,e>a.MAX_MAX_REDIRECTS){const e=new Error(`MaxRedirects should not be more than ${a.MAX_MAX_REDIRECTS}`);throw e.name="MaxLimitExceeded",e}if(e<0){const e=new Error("MaxRedirects should not be negative");throw e.name="MinExpectationNotMet",e}this.maxRedirects=e,this.shouldRedirect=t}getKey(){return t.RedirectHandlerOptionKey}}t.RedirectHandlerOptions=a,a.DEFAULT_MAX_REDIRECTS=5,a.MAX_MAX_REDIRECTS=20,a.defaultShouldRetry=()=>!0},9354:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RetryHandlerOptions=t.RetryHandlerOptionKey=void 0,t.RetryHandlerOptionKey="RetryHandlerOptionKey";class a{constructor(e=a.DEFAULT_DELAY,t=a.DEFAULT_MAX_RETRIES,r=a.defaultShouldRetry){if(this.delay=e,this.maxRetries=t,this.shouldRetry=r,e>a.MAX_DELAY&&t>a.MAX_MAX_RETRIES){const e=new Error(`Delay and MaxRetries should not be more than ${a.MAX_DELAY} and ${a.MAX_MAX_RETRIES}`);throw e.name="MaxLimitExceeded",e}if(e>a.MAX_DELAY){const e=new Error(`Delay should not be more than ${a.MAX_DELAY}`);throw e.name="MaxLimitExceeded",e}if(t>a.MAX_MAX_RETRIES){const e=new Error(`MaxRetries should not be more than ${a.MAX_MAX_RETRIES}`);throw e.name="MaxLimitExceeded",e}if(e<0&&t<0){const e=new Error("Delay and MaxRetries should not be negative");throw e.name="MinExpectationNotMet",e}if(e<0){const e=new Error("Delay should not be negative");throw e.name="MinExpectationNotMet",e}if(t<0){const e=new Error("MaxRetries should not be negative");throw e.name="MinExpectationNotMet",e}this.delay=Math.min(e,a.MAX_DELAY),this.maxRetries=Math.min(t,a.MAX_MAX_RETRIES),this.shouldRetry=r}getMaxDelay(){return a.MAX_DELAY}getKey(){return t.RetryHandlerOptionKey}}t.RetryHandlerOptions=a,a.DEFAULT_DELAY=3,a.DEFAULT_MAX_RETRIES=3,a.MAX_DELAY=180,a.MAX_MAX_RETRIES=10,a.defaultShouldRetry=()=>!0},8970:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},9785:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ParametersNameDecodingHandler=void 0;const r=a(6281);t.ParametersNameDecodingHandler=class{constructor(e=new r.ParametersNameDecodingHandlerOptions){if(this.options=e,!e)throw new Error("The options parameter is required.")}execute(e,t,a){var i,o;let n=this.options;a&&a[r.ParametersNameDecodingHandlerOptionsKey]&&(n=a[r.ParametersNameDecodingHandlerOptionsKey]);let p=e;return n&&n.enable&&e.indexOf("%")>-1&&n.charactersToDecode&&n.charactersToDecode.length>0&&n.charactersToDecode.forEach((e=>{p=p.replace(new RegExp(`%${e.charCodeAt(0).toString(16)}`,"gi"),e)})),null!==(o=null===(i=this.next)||void 0===i?void 0:i.execute(p,t,a))&&void 0!==o?o:Promise.reject(new Error("The next middleware is not set."))}}},9175:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RedirectHandler=void 0;const r=a(7582),i=a(4585),o=a(5611);class n{constructor(e=new o.RedirectHandlerOptions){if(this.options=e,!e)throw new Error("The options parameter is required.")}isRedirect(e){return n.REDIRECT_STATUS_CODES.has(e.status)}hasLocationHeader(e){return e.headers.has(n.LOCATION_HEADER)}getLocationHeader(e){return e.headers.get(n.LOCATION_HEADER)}isRelativeURL(e){return-1===e.indexOf("://")}shouldDropAuthorizationHeader(e,t){const a=/^[A-Za-z].+?:\/\/.+?(?=\/|$)/,r=a.exec(e);let i,o;null!==r&&(i=r[0]);const n=a.exec(t);return null!==n&&(o=n[0]),void 0!==i&&void 0!==o&&i!==o}executeWithRedirect(e,t,a,o,p){var d;return r.__awaiter(this,void 0,void 0,(function*(){const r=yield null===(d=this.next)||void 0===d?void 0:d.execute(e,t,p);if(!r)throw new Error("Response is undefined");if(a<o.maxRedirects&&this.isRedirect(r)&&this.hasLocationHeader(r)&&o.shouldRedirect(r)){if(++a,r.status===n.STATUS_CODE_SEE_OTHER)t.method=i.HttpMethod.GET,delete t.body;else{const a=this.getLocationHeader(r);a&&(t.headers&&!this.isRelativeURL(a)&&this.shouldDropAuthorizationHeader(e,a)&&delete t.headers[n.AUTHORIZATION_HEADER],e=a)}return yield this.executeWithRedirect(e,t,a,o,p)}return r}))}execute(e,t,a){let r=this.options;return a&&a[o.RedirectHandlerOptionKey]&&(r=a[o.RedirectHandlerOptionKey]),t.redirect=n.MANUAL_REDIRECT,this.executeWithRedirect(e,t,0,r,a)}}t.RedirectHandler=n,n.REDIRECT_STATUS_CODES=new Set([301,302,303,307,308]),n.STATUS_CODE_SEE_OTHER=303,n.LOCATION_HEADER="Location",n.AUTHORIZATION_HEADER="Authorization",n.MANUAL_REDIRECT="manual"},5487:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RetryHandler=void 0;const r=a(7582),i=a(4585),o=a(4131),n=a(9354);class p{constructor(e=new n.RetryHandlerOptions){if(this.options=e,!e)throw new Error("The options parameter is required.")}isRetry(e){return p.RETRY_STATUS_CODES.has(e.status)}isBuffered(e){var t;const a=e.method;return a!==i.HttpMethod.PUT&&a!==i.HttpMethod.PATCH&&a!==i.HttpMethod.POST||"application/octet-stream"!==(null===(t=(0,o.getRequestHeader)(e,"content-type"))||void 0===t?void 0:t.toLowerCase())}getDelay(e,t,a){const r=()=>Number(Math.random().toFixed(3)),i=void 0!==e.headers?e.headers.get(p.RETRY_AFTER_HEADER):null;let o;return o=null!==i?Number.isNaN(Number(i))?Math.round((new Date(i).getTime()-Date.now())/1e3):Number(i):t>=2?this.getExponentialBackOffTime(t)+a+r():a+r(),Math.min(o,this.options.getMaxDelay()+r())}getExponentialBackOffTime(e){return Math.round(.5*(Math.pow(2,e)-1))}sleep(e){return r.__awaiter(this,void 0,void 0,(function*(){const t=1e3*e;return new Promise((e=>setTimeout(e,t)))}))}executeWithRetry(e,t,a,i,n){var d;return r.__awaiter(this,void 0,void 0,(function*(){const r=yield null===(d=this.next)||void 0===d?void 0:d.execute(e,t,n);if(!r)throw new Error("Response is undefined");if(a<i.maxRetries&&this.isRetry(r)&&this.isBuffered(t)&&i.shouldRetry(i.delay,a,e,t,r)){if(++a,(0,o.setRequestHeader)(t,p.RETRY_ATTEMPT_HEADER,a.toString()),r){const e=this.getDelay(r,a,i.delay);yield this.sleep(e)}return yield this.executeWithRetry(e,t,a,i,n)}return r}))}execute(e,t,a){let r=this.options;return a&&a[n.RetryHandlerOptionKey]&&(r=a[n.RetryHandlerOptionKey]),this.executeWithRetry(e,t,0,r,a)}}t.RetryHandler=p,p.RETRY_STATUS_CODES=new Set([429,503,504]),p.RETRY_ATTEMPT_HEADER="Retry-Attempt",p.RETRY_AFTER_HEADER="Retry-After"},8685:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TelemetryHandler=t.TelemetryHandlerOptionsKey=void 0,t.TelemetryHandlerOptionsKey="TelemetryHandlerOptionsKey",t.TelemetryHandler=class{constructor(e){this.telemetryHandlerOptions=e}execute(e,a,r){if(this.telemetryHandlerOptions&&this.telemetryHandlerOptions.telemetryConfigurator?this.telemetryHandlerOptions.telemetryConfigurator(e,a,r,this.telemetryHandlerOptions.telemetryInfomation):r&&r[t.TelemetryHandlerOptionsKey]&&r[t.TelemetryHandlerOptionsKey].telemetryConfigurator(e,a,r),!this.next)throw new Error("Please set the next middleware to continue the request");return this.next.execute(e,a,r)}}},4141:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},4131:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.appendRequestHeader=t.setRequestHeader=t.getRequestHeader=void 0,t.getRequestHeader=(e,t)=>{if(e&&e.headers)return e.headers[t]},t.setRequestHeader=(e,t,a)=>{e&&(e.headers||(e.headers={}),e.headers[t]=a)},t.appendRequestHeader=(e,t,a)=>{e&&(e.headers||(e.headers={}),e.headers[t]?e.headers[t]+=`, ${a}`:e.headers[t]=a)}},3705:(e,t,a)=>{"use strict";a.r(t),a.d(t,{BaseBearerTokenAuthenticationProvider:()=>o.BaseBearerTokenAuthenticationProvider,BatchRequestContent:()=>d,BatchResponseContent:()=>s,CORE_PRODUCT_NAME:()=>K,ChaosHandler:()=>f,ChaosHandlerOptions:()=>v,ChaosStrategy:()=>u,Client:()=>J,FeatureUsageFlag:()=>i,FileUpload:()=>A,GRAPH_API_VERSION:()=>O,GRAPH_BASE_URL:()=>D,GRAPH_URLS:()=>P,GraphClientError:()=>g,GraphError:()=>M,GraphRequest:()=>j,HttpClient:()=>n.HttpClient,LargeFileUploadTask:()=>b,OneDriveLargeFileUploadTask:()=>I,PageIterator:()=>k,Range:()=>S,RedirectHandler:()=>n.RedirectHandler,RedirectHandlerOptionKey:()=>n.RedirectHandlerOptionKey,RedirectHandlerOptions:()=>n.RedirectHandlerOptions,ResponseType:()=>y,RetryHandler:()=>n.RetryHandler,RetryHandlerOptionKey:()=>n.RetryHandlerOptionKey,RetryHandlerOptions:()=>n.RetryHandlerOptions,SimpleAccessTokenProvider:()=>Z,SimpleAuthenticationProvider:()=>ee,StreamUpload:()=>N,TelemetryHandler:()=>n.TelemetryHandler,TelemetryHandlerOptionsKey:()=>n.TelemetryHandlerOptionsKey,UploadResult:()=>C,coreSdkVersionValue:()=>Q,getDefaultMiddlewareChain:()=>X,getGraphTelemetryCallback:()=>W,getValidRangeSize:()=>R,graphTelemetryCallback:()=>Y,isCustomHost:()=>F,isGraphURL:()=>L,updateAndReturnAllAllowedHosts:()=>H});var r,i,o=a(4585),n=a(9451),p=a(7582);!function(e){e.GET="GET",e.PATCH="PATCH",e.POST="POST",e.PUT="PUT",e.DELETE="DELETE"}(r||(r={}));class d{constructor(e){if(this.requests=new Map,void 0!==e){const t=d.requestLimit;if(e.length>t){const e=new Error(`Maximum requests limit exceeded, Max allowed number of requests are ${t}`);throw e.name="Limit Exceeded Error",e}for(const t of e)this.addRequest(t)}}static validateDependencies(e){if(0===e.size){const e=new Error("Empty requests map, Please provide at least one request.");throw e.name="Empty Requests Error",e}return(e=>{const t=e.entries();let a=t.next();for(;!a.done;){const e=a.value[1];if(void 0!==e.dependsOn&&e.dependsOn.length>0)return!1;a=t.next()}return!0})(e)||(e=>{const t=e.entries();let a=t.next();const r=a.value[1];if(void 0!==r.dependsOn&&r.dependsOn.length>0)return!1;let i=a;for(a=t.next();!a.done;){const e=a.value[1];if(void 0===e.dependsOn||1!==e.dependsOn.length||e.dependsOn[0]!==i.value[1].id)return!1;i=a,a=t.next()}return!0})(e)||(e=>{const t=e.entries();let a=t.next();const r=a.value[1];let i;if(void 0===r.dependsOn||0===r.dependsOn.length)i=r.id;else{if(1!==r.dependsOn.length)return!1;{const t=r.dependsOn[0];if(t===r.id||!e.has(t))return!1;i=t}}for(a=t.next();!a.done;){const e=a.value[1];if((void 0===e.dependsOn||0===e.dependsOn.length)&&i!==e.id)return!1;if(void 0!==e.dependsOn&&0!==e.dependsOn.length){if(1===e.dependsOn.length&&(e.id===i||e.dependsOn[0]!==i))return!1;if(e.dependsOn.length>1)return!1}a=t.next()}return!0})(e)}static getRequestData(e){return(0,p.__awaiter)(this,void 0,void 0,(function*(){const t={url:""},a=new RegExp("^https?://");t.url=a.test(e.url)?"/"+e.url.split(/.*?\/\/.*?\//)[1]:e.url,t.method=e.method;const i={};return e.headers.forEach(((e,t)=>{i[t]=e})),Object.keys(i).length&&(t.headers=i),e.method!==r.PATCH&&e.method!==r.POST&&e.method!==r.PUT||(t.body=yield d.getRequestBody(e)),t}))}static getRequestBody(e){return(0,p.__awaiter)(this,void 0,void 0,(function*(){let t,a=!1;try{const r=e.clone();t=yield r.json(),a=!0}catch(e){}if(!a)try{if("undefined"!=typeof Blob){const a=yield e.blob(),r=new FileReader;t=yield new Promise((e=>{r.addEventListener("load",(()=>{const t=r.result,a=new RegExp("^s*data:(.+?/.+?(;.+?=.+?)*)?(;base64)?,(.*)s*$").exec(t);e(a[4])}),!1),r.readAsDataURL(a)}))}else"undefined"!=typeof Buffer&&(t=(yield e.buffer()).toString("base64"));a=!0}catch(e){}return t}))}addRequest(e){const t=d.requestLimit;if(""===e.id){const e=new Error("Id for a request is empty, Please provide an unique id");throw e.name="Empty Id For Request",e}if(this.requests.size===t){const e=new Error(`Maximum requests limit exceeded, Max allowed number of requests are ${t}`);throw e.name="Limit Exceeded Error",e}if(this.requests.has(e.id)){const t=new Error(`Adding request with duplicate id ${e.id}, Make the id of the requests unique`);throw t.name="Duplicate RequestId Error",t}return this.requests.set(e.id,e),e.id}removeRequest(e){const t=this.requests.delete(e),a=this.requests.entries();let r=a.next();for(;!r.done;){const t=r.value[1].dependsOn;if(void 0!==t){const a=t.indexOf(e);-1!==a&&t.splice(a,1),0===t.length&&delete r.value[1].dependsOn}r=a.next()}return t}getContent(){return(0,p.__awaiter)(this,void 0,void 0,(function*(){const e=[],t={requests:e},a=this.requests.entries();let r=a.next();if(r.done){const e=new Error("No requests added yet, Please add at least one request.");throw e.name="Empty Payload",e}if(!d.validateDependencies(this.requests)){const e=new Error("Invalid dependency found, Dependency should be:\n1. Parallel - no individual request states a dependency in the dependsOn property.\n2. Serial - all individual requests depend on the previous individual request.\n3. Same - all individual requests that state a dependency in the dependsOn property, state the same dependency.");throw e.name="Invalid Dependency",e}for(;!r.done;){const t=r.value[1],i=yield d.getRequestData(t.request);if(void 0!==i.body&&(void 0===i.headers||void 0===i.headers["content-type"])){const e=new Error(`Content-type header is not mentioned for request #${t.id}, For request having body, Content-type header should be mentioned`);throw e.name="Invalid Content-type header",e}i.id=t.id,void 0!==t.dependsOn&&t.dependsOn.length>0&&(i.dependsOn=t.dependsOn),e.push(i),r=a.next()}return t.requests=e,t}))}addDependency(e,t){if(!this.requests.has(e)){const t=new Error(`Dependent ${e} does not exists, Please check the id`);throw t.name="Invalid Dependent",t}if(void 0!==t&&!this.requests.has(t)){const e=new Error(`Dependency ${t} does not exists, Please check the id`);throw e.name="Invalid Dependency",e}if(void 0!==t){const a=this.requests.get(e);if(void 0===a.dependsOn&&(a.dependsOn=[]),-1!==a.dependsOn.indexOf(t)){const a=new Error(`Dependency ${t} is already added for the request ${e}`);throw a.name="Duplicate Dependency",a}a.dependsOn.push(t)}else{const a=this.requests.entries();let r,i=a.next();for(;!i.done&&i.value[1].id!==e;)r=i,i=a.next();if(void 0===r){const e=new Error(`Can't add dependency ${t}, There is only a dependent request in the batch`);throw e.name="Invalid Dependency Addition",e}{const t=r.value[0];if(void 0===i.value[1].dependsOn&&(i.value[1].dependsOn=[]),-1!==i.value[1].dependsOn.indexOf(t)){const a=new Error(`Dependency ${t} is already added for the request ${e}`);throw a.name="Duplicate Dependency",a}i.value[1].dependsOn.push(t)}}}removeDependency(e,t){const a=this.requests.get(e);if(void 0===a||void 0===a.dependsOn||0===a.dependsOn.length)return!1;if(void 0!==t){const e=a.dependsOn.indexOf(t);return-1!==e&&(a.dependsOn.splice(e,1),!0)}return delete a.dependsOn,!0}}d.requestLimit=20;class s{constructor(e){this.responses=new Map,this.update(e)}createResponseObject(e){const t=e.body,a={};if(a.status=e.status,void 0!==e.statusText&&(a.statusText=e.statusText),a.headers=e.headers,void 0!==a.headers&&void 0!==a.headers["Content-Type"]&&"application/json"===a.headers["Content-Type"].split(";")[0]){const e=JSON.stringify(t);return new Response(e,a)}return new Response(t,a)}update(e){this.nextLink=e["@odata.nextLink"];const t=e.responses;for(let e=0,a=t.length;e<a;e++)this.responses.set(t[e].id,this.createResponseObject(t[e]))}getResponseById(e){return this.responses.get(e)}getResponses(){return this.responses}*getResponsesIterator(){const e=this.responses.entries();let t=e.next();for(;!t.done;)yield t.value,t=e.next()}}!function(e){e[e.NONE=0]="NONE",e[e.REDIRECT_HANDLER_ENABLED=1]="REDIRECT_HANDLER_ENABLED",e[e.RETRY_HANDLER_ENABLED=2]="RETRY_HANDLER_ENABLED",e[e.AUTHENTICATION_HANDLER_ENABLED=4]="AUTHENTICATION_HANDLER_ENABLED"}(i||(i={}));const l=()=>{let e="";for(let t=0;t<32;t++)8!==t&&12!==t&&16!==t&&20!==t||(e+="-"),e+=Math.floor(16*Math.random()).toString(16);return e},c={GET:[429,500,502,503,504],POST:[429,500,502,503,504,507],PUT:[429,500,502,503,504,507],PATCH:[429,500,502,503,504],DELETE:[429,500,502,503,504,507]},m={100:"Continue",101:"Switching Protocols",102:"Processing",103:"Early Hints",200:"OK",201:"Created",202:"Accepted",203:"Non-Authoritative Information",204:"No Content",205:"Reset Content",206:"Partial Content",207:"Multi-Status",208:"Already Reported",226:"IM Used",300:"Multiple Choices",301:"Moved Permanently",302:"Found",303:"See Other",304:"Not Modified",305:"Use Proxy",307:"Temporary Redirect",308:"Permanent Redirect",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Payload Too Large",414:"URI Too Long",415:"Unsupported Media Type",416:"Range Not Satisfiable",417:"Expectation Failed",421:"Misdirected Request",422:"Unprocessable Entity",423:"Locked",424:"Failed Dependency",425:"Too Early",426:"Upgrade Required",428:"Precondition Required",429:"Too Many Requests",431:"Request Header Fields Too Large",451:"Unavailable For Legal Reasons",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported",506:"Variant Also Negotiates",507:"Insufficient Storage",508:"Loop Detected",510:"Not Extended",511:"Network Authentication Required"};var u;!function(e){e[e.MANUAL=0]="MANUAL",e[e.RANDOM=1]="RANDOM"}(u||(u={}));const h="ChaosHandlerOptionKey";class f{constructor(e=new v,t){this.chaosHandlerOptions=e,this.manualMap=t}execute(e,t,a){return a&&a[h]&&(this.chaosHandlerOptions=a[h]),this.sendRequest(e,t,a)}createResponseHeaders(e,t){const a=this.chaosHandlerOptions.headers?new Headers(this.chaosHandlerOptions.headers):new Headers;return a.append("Cache-Control","no-store"),a.append("request-id",e),a.append("client-request-id",e),a.append("x-ms-ags-diagnostic",""),a.append("Date",t),a.append("Strict-Transport-Security",""),429===this.chaosHandlerOptions.statusCode&&a.append("retry-after","3"),a}createResponseBody(e,t){if(this.chaosHandlerOptions.responseBody)return this.chaosHandlerOptions.responseBody;let a;return a=this.chaosHandlerOptions.statusCode>=400?{error:{code:m[this.chaosHandlerOptions.statusCode],message:this.chaosHandlerOptions.statusMessage,innerError:{"request-id":e,date:t}}}:{},a}createResponse(e){const t=l(),a=new Date,r=this.createResponseHeaders(t,a.toString()),i=this.createResponseBody(t,a.toString()),o={url:e,status:this.chaosHandlerOptions.statusCode,statusText:this.chaosHandlerOptions.statusMessage,headers:r};return new Response("string"==typeof i?i:JSON.stringify(i),o)}sendRequest(e,t,a){return(0,p.__awaiter)(this,void 0,void 0,(function*(){if(this.setStatusCode(e,null==t?void 0:t.method),this.chaosHandlerOptions.chaosStrategy===u.MANUAL&&!this.next||Math.floor(100*Math.random())<this.chaosHandlerOptions.chaosPercentage)return this.createResponse(e);this.next&&(yield this.next.execute(e,t,a))}))}getRandomStatusCode(e){const t=c[e];return t[Math.floor(Math.random()*t.length)]}getRelativeURL(e){const t=/https?:\/\/graph\.microsoft\.com\/[^/]+(.+?)(\?|$)/;let a;return null!==t.exec(e)&&(a=t.exec(e)[1]),a}setStatusCode(e,t){if(this.chaosHandlerOptions.chaosStrategy===u.MANUAL){if(void 0===this.chaosHandlerOptions.statusCode){const a=this.getRelativeURL(e);void 0!==this.manualMap.get(a)?void 0!==this.manualMap.get(a).get(t)&&(this.chaosHandlerOptions.statusCode=this.manualMap.get(a).get(t)):this.manualMap.forEach(((e,r)=>{new RegExp(r+"$").test(a)&&void 0!==this.manualMap.get(r).get(t)&&(this.chaosHandlerOptions.statusCode=this.manualMap.get(r).get(t))}))}}else this.chaosHandlerOptions.statusCode=this.getRandomStatusCode(t)}setNext(e){this.next=e}}class v{constructor(e=u.RANDOM,t="Some error Happened",a,r,i,o){if(this.chaosStrategy=e,this.statusCode=a,this.statusMessage=t,this.chaosPercentage=void 0!==r?r:10,this.responseBody=i,this.headers=o,this.chaosPercentage>100)throw new Error("Error Pecentage can not be more than 100")}getKey(){return h}}class g extends Error{constructor(e){super(e),Object.setPrototypeOf(this,g.prototype)}static setGraphClientError(e){let t;return e instanceof Error?t=e:(t=new g,t.customError=e),t}}var y,w,_,T;!function(e){e.ARRAYBUFFER="arraybuffer",e.BLOB="blob",e.DOCUMENT="document",e.JSON="json",e.RAW="raw",e.STREAM="stream",e.TEXT="text"}(y||(y={})),function(e){e.TEXT_HTML="text/html",e.TEXT_XML="text/xml",e.APPLICATION_XML="application/xml",e.APPLICATION_XHTML="application/xhtml+xml"}(w||(w={})),function(e){e.TEXT_PLAIN="text/plain",e.APPLICATION_JSON="application/json"}(_||(_={})),function(e){e.DOCUMENT="^(text\\/(html|xml))|(application\\/(xml|xhtml\\+xml))$",e.IMAGE="^image\\/.+"}(T||(T={}));class E{static parseDocumentResponse(e,t){return"undefined"!=typeof DOMParser?new Promise(((a,r)=>{e.text().then((e=>{try{const r=(new DOMParser).parseFromString(e,t);a(r)}catch(e){r(e)}}))})):Promise.resolve(e.body)}static convertResponse(e,t){return(0,p.__awaiter)(this,void 0,void 0,(function*(){if(204===e.status)return Promise.resolve();let a;const r=e.headers.get("Content-type");switch(t){case y.ARRAYBUFFER:a=yield e.arrayBuffer();break;case y.BLOB:a=yield e.blob();break;case y.DOCUMENT:a=yield E.parseDocumentResponse(e,w.TEXT_XML);break;case y.JSON:a=yield e.json();break;case y.STREAM:a=yield Promise.resolve(e.body);break;case y.TEXT:a=yield e.text();break;default:if(null!==r){const t=r.split(";")[0];a=new RegExp(T.DOCUMENT).test(t)?yield E.parseDocumentResponse(e,t):new RegExp(T.IMAGE).test(t)?e.blob():t===_.TEXT_PLAIN?yield e.text():t===_.APPLICATION_JSON?yield e.json():Promise.resolve(e.body)}else a=Promise.resolve(e.body)}return a}))}static getResponse(e,t,a){return(0,p.__awaiter)(this,void 0,void 0,(function*(){if(t===y.RAW)return Promise.resolve(e);{const r=yield E.convertResponse(e,t);if(!e.ok)throw r;if("function"!=typeof a)return r;a(null,r)}}))}}class S{constructor(e=-1,t=-1){this.minValue=e,this.maxValue=t}}class C{constructor(e,t){this._location=t,this._responseBody=e}get location(){return this._location}set location(e){this._location=e}get responseBody(){return this._responseBody}set responseBody(e){this._responseBody=e}static CreateUploadResult(e,t){return new C(e,t.get("location"))}}class b{constructor(e,t,a,r={}){if(this.DEFAULT_FILE_SIZE=5242880,this.client=e,!t.sliceFile)throw new g("Please pass the FileUpload object, StreamUpload object or any custom implementation of the FileObject interface");this.file=t,this.file=t,r.rangeSize||(r.rangeSize=this.DEFAULT_FILE_SIZE),this.options=r,this.uploadSession=a,this.nextRange=new S(0,this.options.rangeSize-1)}static createUploadSession(e,t,a,r={}){return(0,p.__awaiter)(this,void 0,void 0,(function*(){const i=yield e.api(t).headers(r).post(a);return{url:i.uploadUrl,expiry:new Date(i.expirationDateTime),isCancelled:!1}}))}parseRange(e){const t=e[0];if(void 0===t||""===t)return new S;const a=t.split("-"),r=parseInt(a[0],10);let i=parseInt(a[1],10);return Number.isNaN(i)&&(i=this.file.size-1),new S(r,i)}updateTaskStatus(e){this.uploadSession.expiry=new Date(e.expirationDateTime),this.nextRange=this.parseRange(e.nextExpectedRanges)}getNextRange(){if(-1===this.nextRange.minValue)return this.nextRange;const e=this.nextRange.minValue;let t=e+this.options.rangeSize-1;return t>=this.file.size&&(t=this.file.size-1),new S(e,t)}sliceFile(e){if(console.warn("The LargeFileUploadTask.sliceFile() function has been deprecated and moved into the FileObject interface."),this.file.content instanceof ArrayBuffer||this.file.content instanceof Blob||this.file.content instanceof Uint8Array)return this.file.content.slice(e.minValue,e.maxValue+1);throw new g("The LargeFileUploadTask.sliceFile() function expects only Blob, ArrayBuffer or Uint8Array file content. Please note that the sliceFile() function is deprecated.")}upload(){return(0,p.__awaiter)(this,void 0,void 0,(function*(){const e=this.options&&this.options.uploadEventHandlers;for(;!this.uploadSession.isCancelled;){const t=this.getNextRange();if(-1===t.maxValue){const e=new Error("Task with which you are trying to upload is already completed, Please check for your uploaded file");throw e.name="Invalid Session",e}const a=yield this.file.sliceFile(t),r=yield this.uploadSliceGetRawResponse(a,t,this.file.size);if(!r)throw new g("Something went wrong! Large file upload slice response is null.");const i=yield E.getResponse(r);if(201===r.status||200===r.status&&i.id)return C.CreateUploadResult(i,r.headers);const o={expirationDateTime:i.expirationDateTime||i.ExpirationDateTime,nextExpectedRanges:i.NextExpectedRanges||i.nextExpectedRanges};this.updateTaskStatus(o),e&&e.progress&&e.progress(t,e.extraCallbackParam)}}))}uploadSlice(e,t,a){return(0,p.__awaiter)(this,void 0,void 0,(function*(){return yield this.client.api(this.uploadSession.url).headers({"Content-Length":""+(t.maxValue-t.minValue+1),"Content-Range":`bytes ${t.minValue}-${t.maxValue}/${a}`,"Content-Type":"application/octet-stream"}).put(e)}))}uploadSliceGetRawResponse(e,t,a){return(0,p.__awaiter)(this,void 0,void 0,(function*(){return yield this.client.api(this.uploadSession.url).headers({"Content-Length":""+(t.maxValue-t.minValue+1),"Content-Range":`bytes ${t.minValue}-${t.maxValue}/${a}`,"Content-Type":"application/octet-stream"}).responseType(y.RAW).put(e)}))}cancel(){return(0,p.__awaiter)(this,void 0,void 0,(function*(){const e=yield this.client.api(this.uploadSession.url).responseType(y.RAW).delete();return 204===e.status&&(this.uploadSession.isCancelled=!0),e}))}getStatus(){return(0,p.__awaiter)(this,void 0,void 0,(function*(){const e=yield this.client.api(this.uploadSession.url).get();return this.updateTaskStatus(e),e}))}resume(){return(0,p.__awaiter)(this,void 0,void 0,(function*(){return yield this.getStatus(),yield this.upload()}))}getUploadSession(){return this.uploadSession}}class A{constructor(e,t,a){if(this.content=e,this.name=t,this.size=a,!e||!t||!a)throw new g("Please provide the upload content, name of the file and size of the file")}sliceFile(e){return this.content.slice(e.minValue,e.maxValue+1)}}const R=(e=5242880)=>{const t=62914560;return e>t&&(e=t),(a=e)>327680&&(a=320*Math.floor(a/327680)*1024),a;var a};class I extends b{constructor(e,t,a,r){super(e,t,a,r)}static constructCreateSessionUrl(e,t=I.DEFAULT_UPLOAD_PATH){return e=e.trim(),""===(t=t.trim())&&(t="/"),"/"!==t[0]&&(t=`/${t}`),"/"!==t[t.length-1]&&(t=`${t}/`),`/me/drive/root:${t.split("/").map((e=>encodeURIComponent(e))).join("/")}${encodeURIComponent(e)}:/createUploadSession`}static getFileInfo(e,t){let a,r;if("undefined"!=typeof Blob&&e instanceof Blob)a=new File([e],t),r=a.size;else if("undefined"!=typeof File&&e instanceof File)a=e,r=a.size;else if("undefined"!=typeof Uint8Array&&e instanceof Uint8Array){const t=e;r=t.byteLength,a=t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}return{content:a,size:r}}static create(e,t,a){return(0,p.__awaiter)(this,void 0,void 0,(function*(){if(!e||!t||!a)throw new g("Please provide the Graph client instance, file object and OneDriveLargeFileUploadOptions value");const r=a.fileName,i=I.getFileInfo(t,r),o=new A(i.content,r,i.size);return this.createTaskWithFileObject(e,o,a)}))}static createTaskWithFileObject(e,t,a){return(0,p.__awaiter)(this,void 0,void 0,(function*(){if(!e||!t||!a)throw new g("Please provide the Graph client instance, FileObject interface implementation and OneDriveLargeFileUploadOptions value");const r=I.constructCreateSessionUrl(a.fileName,a.path),i={fileName:a.fileName,fileDescription:a.fileDescription,conflictBehavior:a.conflictBehavior},o=yield I.createUploadSession(e,r,i),n=R(a.rangeSize);return new I(e,t,o,{rangeSize:n,uploadEventHandlers:a.uploadEventHandlers})}))}static createUploadSession(e,t,a){const r=Object.create(null,{createUploadSession:{get:()=>super.createUploadSession}});return(0,p.__awaiter)(this,void 0,void 0,(function*(){const i={item:{"@microsoft.graph.conflictBehavior":(null==a?void 0:a.conflictBehavior)||"rename",name:null==a?void 0:a.fileName,description:null==a?void 0:a.fileDescription}};return r.createUploadSession.call(this,e,t,i)}))}commit(e,t="rename"){return(0,p.__awaiter)(this,void 0,void 0,(function*(){const a={name:this.file.name,"@microsoft.graph.conflictBehavior":t,"@microsoft.graph.sourceUrl":this.uploadSession.url};return yield this.client.api(e).put(a)}))}}I.DEFAULT_UPLOAD_PATH="/";class N{constructor(e,t,a){if(this.content=e,this.name=t,this.size=a,!e||!t||!a)throw new g("Please provide the Readable Stream content, name of the file and size of the file")}sliceFile(e){return(0,p.__awaiter)(this,void 0,void 0,(function*(){let t=e.maxValue-e.minValue+1;const a=[];if(this.previousSlice){if(e.minValue<this.previousSlice.range.minValue)throw new g("An error occurred while uploading the stream. Please restart the stream upload from the first byte of the file.");if(e.minValue<this.previousSlice.range.maxValue){const r=this.previousSlice.range.minValue,i=this.previousSlice.range.maxValue;if(e.minValue===r&&e.maxValue===i)return this.previousSlice.fileSlice;if(e.maxValue===i)return this.previousSlice.fileSlice.slice(e.minValue,e.maxValue+1);a.push(this.previousSlice.fileSlice.slice(e.minValue,i+1)),t=e.maxValue-i}}if(!this.content||!this.content.readable)throw new g("Stream is not readable.");this.content.readableLength>=t?a.push(this.content.read(t)):a.push(yield this.readNBytesFromStream(t));const r=Buffer.concat(a);return this.previousSlice={fileSlice:r,range:e},r}))}readNBytesFromStream(e){return new Promise(((t,a)=>{const r=[];let i=e,o=0;this.content.on("end",(()=>{if(i>0)return a(new g("Stream ended before reading required range size"))})),this.content.on("readable",(()=>{let n;for(;o<e&&null!==(n=this.content.read(i));)o+=n.length,r.push(n),i>0&&(i=e-o);return o===e?t(Buffer.concat(r)):this.content&&this.content.readable?void 0:a(new g("Error encountered while reading the stream during the upload"))}))}))}}class k{constructor(e,t,a,r){this.client=e,this.collection=t.value,this.nextLink=t["@odata.nextLink"],this.deltaLink=t["@odata.deltaLink"],this.callback=a,this.complete=!1,this.requestOptions=r}iterationHelper(){if(void 0===this.collection)return!1;let e=!0;for(;e&&0!==this.collection.length;){const t=this.collection.shift();e=this.callback(t)}return e}fetchAndUpdateNextPageData(){return(0,p.__awaiter)(this,void 0,void 0,(function*(){let e=this.client.api(this.nextLink);this.requestOptions&&(this.requestOptions.headers&&(e=e.headers(this.requestOptions.headers)),this.requestOptions.middlewareOptions&&(e=e.middlewareOptions(this.requestOptions.middlewareOptions)),this.requestOptions.options&&(e=e.options(this.requestOptions.options)));const t=yield e.get();this.collection=t.value,this.nextLink=t["@odata.nextLink"],this.deltaLink=t["@odata.deltaLink"]}))}getDeltaLink(){return this.deltaLink}iterate(){return(0,p.__awaiter)(this,void 0,void 0,(function*(){let e=this.iterationHelper();for(;e;)void 0!==this.nextLink?(yield this.fetchAndUpdateNextPageData(),e=this.iterationHelper()):e=!1;void 0===this.nextLink&&0===this.collection.length&&(this.complete=!0)}))}resume(){return(0,p.__awaiter)(this,void 0,void 0,(function*(){return this.iterate()}))}isComplete(){return this.complete}}const O="v1.0",D="https://graph.microsoft.com/",P=new Set(["graph.microsoft.com","graph.microsoft.us","dod-graph.microsoft.us","graph.microsoft.de","microsoftgraph.chinacloudapi.cn","canary.graph.microsoft.com"]);class M extends Error{constructor(e=-1,t,a){super(t||a&&a.message),Object.setPrototypeOf(this,M.prototype),this.statusCode=e,this.code=null,this.requestId=null,this.date=new Date,this.body=null,this.stack=a?a.stack:this.stack}}class x{static constructError(e,t){const a=new M(t,"",e);return void 0!==e.name&&(a.code=e.name),a.body=e.toString(),a.date=new Date,a}static constructErrorFromResponse(e,t){const a=e.error,r=new M(t,a.message);return r.code=a.code,void 0!==a.innerError&&(r.requestId=a.innerError["request-id"],r.date=new Date(a.innerError.date)),r.body=JSON.stringify(a),r}static getError(e=null,t=-1,a){return(0,p.__awaiter)(this,void 0,void 0,(function*(){let r;if(e&&e.error?r=x.constructErrorFromResponse(e,t):e instanceof Error?r=x.constructError(e,t):(r=new M(t),r.body=e),"function"!=typeof a)return r;a(r,null)}))}}const V=["$select","$expand","$orderby","$filter","$top","$skip","$skipToken","$count"],U=e=>{const t=e&&e.constructor&&e.constructor.name;if("Buffer"===t||"Blob"===t||"File"===t||"FormData"===t||"string"==typeof e)return e;if("ArrayBuffer"===t)e=Buffer.from(e);else if("Int8Array"===t||"Int16Array"===t||"Int32Array"===t||"Uint8Array"===t||"Uint16Array"===t||"Uint32Array"===t||"Uint8ClampedArray"===t||"Float32Array"===t||"Float64Array"===t||"DataView"===t)e=Buffer.from(e.buffer);else try{e=JSON.stringify(e)}catch(e){throw new Error("Unable to stringify the content")}return e},L=e=>q(e),F=(e,t)=>(t.forEach((e=>$(e))),q(e,t)),q=(e,t=P)=>{if(-1!==(e=e.toLowerCase()).indexOf("https://")){const a=(e=e.replace("https://","")).indexOf(":"),r=e.indexOf("/");let i="";if(-1!==r)return-1!==a&&a<r?(i=e.substring(0,a),t.has(i)):(i=e.substring(0,r),t.has(i))}return!1},$=e=>{if(-1!==e.indexOf("/"))throw new g("Please add only hosts or hostnames to the CustomHosts config. If the url is `http://example.com:3000/`, host is `example:3000`")},H=(e,t)=>{const a=e.accessTokenProvider.getAllowedHostsValidator(),r=t?new Set([...t,...a.getAllowedHosts()]):new Set(a.getAllowedHosts()),i=t?new Set([...r,...P,...t]):new Set([...r,...P]);return a.setAllowedHosts(i),i};class j{constructor(e,t,a){this.parsePath=e=>{if(-1!==e.indexOf("https://")){const t=(e=e.replace("https://","")).indexOf("/");-1!==t&&(this.urlComponents.host="https://"+e.substring(0,t),e=e.substring(t+1,e.length));const a=e.indexOf("/");-1!==a&&(this.urlComponents.version=e.substring(0,a),e=e.substring(a+1,e.length))}"/"===e.charAt(0)&&(e=e.substr(1));const t=e.indexOf("?");if(-1===t)this.urlComponents.path=e;else{this.urlComponents.path=e.substr(0,t);const a=e.substring(t+1,e.length).split("&");for(const e of a)this.parseQueryParameter(e)}},this.httpClient=e,this.config=t,this.urlComponents={host:this.config.baseUrl,version:this.config.defaultVersion,oDataQueryParams:{},otherURLQueryParams:{},otherURLQueryOptions:[]},this._headers={},this._options={},this._middlewareOptions=[],this.parsePath(a)}addCsvQueryParameter(e,t,a){this.urlComponents.oDataQueryParams[e]=this.urlComponents.oDataQueryParams[e]?this.urlComponents.oDataQueryParams[e]+",":"";let r=[];a.length>1&&"string"==typeof t?r=Array.prototype.slice.call(a):"string"==typeof t?r.push(t):r=r.concat(t),this.urlComponents.oDataQueryParams[e]+=r.join(",")}buildFullUrl(){const e=(e=>{const t=e=>e.replace(/^\/+/,"");return Array.prototype.slice.call(e).reduce(((e,a)=>{return[(r=e,r.replace(/\/+$/,"")),t(a)].join("/");var r}))})([this.urlComponents.host,this.urlComponents.version,this.urlComponents.path])+this.createQueryString();return this.config.debugLogging&&console.log(e),e}createQueryString(){const e=this.urlComponents,t=[];if(0!==Object.keys(e.oDataQueryParams).length)for(const a in e.oDataQueryParams)Object.prototype.hasOwnProperty.call(e.oDataQueryParams,a)&&t.push(a+"="+e.oDataQueryParams[a]);if(0!==Object.keys(e.otherURLQueryParams).length)for(const a in e.otherURLQueryParams)Object.prototype.hasOwnProperty.call(e.otherURLQueryParams,a)&&t.push(a+"="+e.otherURLQueryParams[a]);if(0!==e.otherURLQueryOptions.length)for(const a of e.otherURLQueryOptions)t.push(a);return t.length>0?"?"+t.join("&"):""}parseQueryParameter(e){if("string"==typeof e)if("?"===e.charAt(0)&&(e=e.substring(1)),-1!==e.indexOf("&")){const t=e.split("&");for(const e of t)this.parseQueryParamenterString(e)}else this.parseQueryParamenterString(e);else if(e.constructor===Object)for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&this.setURLComponentsQueryParamater(t,e[t]);return this}parseQueryParamenterString(e){if(this.isValidQueryKeyValuePair(e)){const t=e.indexOf("="),a=e.substring(0,t),r=e.substring(t+1);this.setURLComponentsQueryParamater(a,r)}else this.urlComponents.otherURLQueryOptions.push(e)}setURLComponentsQueryParamater(e,t){if(-1!==V.indexOf(e)){const a=this.urlComponents.oDataQueryParams[e],r=a&&("$expand"===e||"$select"===e||"$orderby"===e);this.urlComponents.oDataQueryParams[e]=r?a+","+t:t}else this.urlComponents.otherURLQueryParams[e]=t}isValidQueryKeyValuePair(e){const t=e.indexOf("=");return-1!==t&&!(-1!==e.indexOf("(")&&e.indexOf("(")<t)}updateRequestOptions(e){const t=Object.assign({},e.headers);if(void 0!==this.config.fetchOptions){const t=Object.assign({},this.config.fetchOptions);Object.assign(e,t),void 0!==typeof this.config.fetchOptions.headers&&(e.headers=Object.assign({},this.config.fetchOptions.headers))}Object.assign(e,this._options),void 0!==e.headers&&Object.assign(t,e.headers),Object.assign(t,this._headers),e.headers=t}send(e,t,a){return(0,p.__awaiter)(this,void 0,void 0,(function*(){this.updateRequestOptions(t);try{const r=yield this.httpClient.executeFetch(e,t);return yield E.getResponse(r,this._responseType,a)}catch(e){if(e instanceof g)throw e;let t;throw yield x.getError(e,t,a)}}))}setHeaderContentType(){if(!this._headers)return void this.header("Content-Type","application/json");const e=Object.keys(this._headers);for(const t of e)if("content-type"===t.toLowerCase())return;this.header("Content-Type","application/json")}header(e,t){return this._headers[e]=t,this}headers(e){for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&(this._headers[t]=e[t]);return this}option(e,t){return this._options[e]=t,this}options(e){for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&(this._options[t]=e[t]);return this}middlewareOptions(e){return this._middlewareOptions=e,this}version(e){return this.urlComponents.version=e,this}responseType(e){return this._responseType=e,this}select(e){return this.addCsvQueryParameter("$select",e,arguments),this}expand(e){return this.addCsvQueryParameter("$expand",e,arguments),this}orderby(e){return this.addCsvQueryParameter("$orderby",e,arguments),this}filter(e){return this.urlComponents.oDataQueryParams.$filter=e,this}search(e){return this.urlComponents.oDataQueryParams.$search=e,this}top(e){return this.urlComponents.oDataQueryParams.$top=e,this}skip(e){return this.urlComponents.oDataQueryParams.$skip=e,this}skipToken(e){return this.urlComponents.oDataQueryParams.$skipToken=e,this}count(e=!0){return this.urlComponents.oDataQueryParams.$count=e.toString(),this}query(e){return this.parseQueryParameter(e)}get(e){return(0,p.__awaiter)(this,void 0,void 0,(function*(){const t=this.buildFullUrl(),a={method:r.GET};return yield this.send(t,a,e)}))}post(e,t){return(0,p.__awaiter)(this,void 0,void 0,(function*(){const a=this.buildFullUrl(),i={method:r.POST,body:U(e)};return"FormData"===(e&&e.constructor&&e.constructor.name)?i.headers={}:(this.setHeaderContentType(),i.headers=this._headers),yield this.send(a,i,t)}))}create(e,t){return(0,p.__awaiter)(this,void 0,void 0,(function*(){return yield this.post(e,t)}))}put(e,t){return(0,p.__awaiter)(this,void 0,void 0,(function*(){const a=this.buildFullUrl();this.setHeaderContentType();const i={method:r.PUT,body:U(e)};return yield this.send(a,i,t)}))}patch(e,t){return(0,p.__awaiter)(this,void 0,void 0,(function*(){const a=this.buildFullUrl();this.setHeaderContentType();const i={method:r.PATCH,body:U(e)};return yield this.send(a,i,t)}))}update(e,t){return(0,p.__awaiter)(this,void 0,void 0,(function*(){return yield this.patch(e,t)}))}delete(e){return(0,p.__awaiter)(this,void 0,void 0,(function*(){const t=this.buildFullUrl(),a={method:r.DELETE};return yield this.send(t,a,e)}))}del(e){return(0,p.__awaiter)(this,void 0,void 0,(function*(){return yield this.delete(e)}))}getStream(e){return(0,p.__awaiter)(this,void 0,void 0,(function*(){const t=this.buildFullUrl(),a={method:r.GET};return this.responseType(y.STREAM),yield this.send(t,a,e)}))}putStream(e,t){return(0,p.__awaiter)(this,void 0,void 0,(function*(){const a=this.buildFullUrl(),i={method:r.PUT,headers:{"Content-Type":"application/octet-stream"},body:e};return yield this.send(a,i,t)}))}}class B{constructor(e){this.authenticationProvider=e}execute(e,t,a){return(0,p.__awaiter)(this,void 0,void 0,(function*(){if(this.authenticationProvider.accessTokenProvider.getAllowedHostsValidator().isUrlHostValid(e)){if((null==t?void 0:t.headers)&&!t.headers[B.AUTHORIZATION_HEADER]){const a=`Bearer ${yield this.authenticationProvider.accessTokenProvider.getAuthorizationToken(e)}`;(0,n.appendRequestHeader)(t,B.AUTHORIZATION_HEADER,a)}}else delete t.headers[B.AUTHORIZATION_HEADER];return yield this.next.execute(e,t,a)}))}}B.AUTHORIZATION_HEADER="Authorization";const z="client-request-id",G="SdkVersion",K="graph-js-core",Q=`${K}/4.0.0-Preview.1`,Y=(e,t,a,r)=>{const i=r;if(L(e)||i.allowedHosts&&F(e,i.allowedHosts)){let e=(0,n.getRequestHeader)(t,z);e||(e=l(),(0,n.setRequestHeader)(t,z,e)),(0,n.appendRequestHeader)(t,G,i.SDKNameWithVersion)}else delete t.headers[z],delete t.headers[G]},W=e=>(e.SDKNameWithVersion=e.SDKNameWithVersion?e.SDKNameWithVersion+", "+Q:Q,{telemetryConfigurator:Y,telemetryInfomation:e,getKey:void 0});function X(e,t,a){const r=[],i=new B(e.authProvider);r.push(i);const o={allowedHosts:t,SDKNameWithVersion:null==a?void 0:a.sdkTelemetryVersion},p=W(o),d=new n.TelemetryHandler(p),s=n.MiddlewareFactory.getDefaultMiddlewareChain(e.customFetch);return s.splice(s.length-1,0,d),r.concat(s)}class J{constructor(e){this.config={baseUrl:D,debugLogging:!1,defaultVersion:O};for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&(this.config[t]=e[t]);let t;if(void 0===e.authProvider){const e=new g;throw e.name="Client Initialization Failed",e.message="Unable to Create Client, Please provide an authentication provider",e}const a=H(e.authProvider,this.config.customHosts);t=e.middleware?new n.HttpClient(e.customFetch,...[].concat(e.middleware)):new n.HttpClient(void 0,...[].concat(X(e,a))),this.httpClient=t}static init(e){return new J(e)}api(e){return new j(this.httpClient,this.config,e)}}class Z{constructor(e,t=["https://graph.microsoft.com/.default"],a){this.getAccessTokenCallback=e,this.scopes=t,this.allowedhosts=a,this.getAllowedHostsValidator=()=>this.allowedHostsValidator,this.allowedHostsValidator=new o.AllowedHostsValidator(a)}getAuthorizationToken(e){return(0,p.__awaiter)(this,void 0,void 0,(function*(){if(!e||!this.allowedHostsValidator.isUrlHostValid(e))throw new g("The request url is not present in the allowed hosts list or is not a valid host");(0,o.validateProtocol)(e);let t="";if(this.getAccessTokenCallback&&(t=yield this.getAccessTokenCallback(this.scopes)),!t)throw new g("Please provide a valid access token");return t}))}}class ee extends o.BaseBearerTokenAuthenticationProvider{constructor(e,t=["https://graph.microsoft.com/.default"],a){super(new Z(e,t,a))}}},8500:(e,t,a)=>{"use strict";var r=a(4300).Buffer,i=a(4300).SlowBuffer;function o(e,t){if(!r.isBuffer(e)||!r.isBuffer(t))return!1;if(e.length!==t.length)return!1;for(var a=0,i=0;i<e.length;i++)a|=e[i]^t[i];return 0===a}e.exports=o,o.install=function(){r.prototype.equal=i.prototype.equal=function(e){return o(this,e)}};var n=r.prototype.equal,p=i.prototype.equal;o.restore=function(){r.prototype.equal=n,i.prototype.equal=p}},5015:(e,t,a)=>{"use strict";var r=a(9509).Buffer,i=a(6972),o=128;function n(e){if(r.isBuffer(e))return e;if("string"==typeof e)return r.from(e,"base64");throw new TypeError("ECDSA signature must be a Base64 string or a Buffer")}function p(e,t,a){for(var r=0;t+r<a&&0===e[t+r];)++r;return e[t+r]>=o&&--r,r}e.exports={derToJose:function(e,t){e=n(e);var a=i(t),o=a+1,p=e.length,d=0;if(48!==e[d++])throw new Error('Could not find expected "seq"');var s=e[d++];if(129===s&&(s=e[d++]),p-d<s)throw new Error('"seq" specified length of "'+s+'", only "'+(p-d)+'" remaining');if(2!==e[d++])throw new Error('Could not find expected "int" for "r"');var l=e[d++];if(p-d-2<l)throw new Error('"r" specified length of "'+l+'", only "'+(p-d-2)+'" available');if(o<l)throw new Error('"r" specified length of "'+l+'", max of "'+o+'" is acceptable');var c=d;if(d+=l,2!==e[d++])throw new Error('Could not find expected "int" for "s"');var m=e[d++];if(p-d!==m)throw new Error('"s" specified length of "'+m+'", expected "'+(p-d)+'"');if(o<m)throw new Error('"s" specified length of "'+m+'", max of "'+o+'" is acceptable');var u=d;if((d+=m)!==p)throw new Error('Expected to consume entire buffer, but "'+(p-d)+'" bytes remain');var h=a-l,f=a-m,v=r.allocUnsafe(h+l+f+m);for(d=0;d<h;++d)v[d]=0;e.copy(v,d,c+Math.max(-h,0),c+l);for(var g=d=a;d<g+f;++d)v[d]=0;return e.copy(v,d,u+Math.max(-f,0),u+m),(v=v.toString("base64")).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")},joseToDer:function(e,t){e=n(e);var a=i(t),d=e.length;if(d!==2*a)throw new TypeError('"'+t+'" signatures must be "'+2*a+'" bytes, saw "'+d+'"');var s=p(e,0,a),l=p(e,a,e.length),c=a-s,m=a-l,u=2+c+1+1+m,h=u<o,f=r.allocUnsafe((h?2:3)+u),v=0;return f[v++]=48,h?f[v++]=u:(f[v++]=129,f[v++]=255&u),f[v++]=2,f[v++]=c,s<0?(f[v++]=0,v+=e.copy(f,v,0,a)):v+=e.copy(f,v,s,a),f[v++]=2,f[v++]=m,l<0?(f[v++]=0,e.copy(f,v,a)):e.copy(f,v,a+l),f}}},6972:e=>{"use strict";function t(e){return(e/8|0)+(e%8==0?0:1)}var a={ES256:t(256),ES384:t(384),ES512:t(521)};e.exports=function(e){var t=a[e];if(t)return t;throw new Error('Unknown algorithm "'+e+'"')}},7626:(e,t,a)=>{var r=a(158);e.exports=function(e,t){t=t||{};var a=r.decode(e,t);if(!a)return null;var i=a.payload;if("string"==typeof i)try{var o=JSON.parse(i);null!==o&&"object"==typeof o&&(i=o)}catch(e){}return!0===t.complete?{header:a.header,payload:i,signature:a.signature}:i}},9704:(e,t,a)=>{e.exports={decode:a(7626),verify:a(7030),sign:a(2506),JsonWebTokenError:a(8619),NotBeforeError:a(1826),TokenExpiredError:a(2340)}},8619:e=>{var t=function(e,t){Error.call(this,e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="JsonWebTokenError",this.message=e,t&&(this.inner=t)};(t.prototype=Object.create(Error.prototype)).constructor=t,e.exports=t},1826:(e,t,a)=>{var r=a(8619),i=function(e,t){r.call(this,e),this.name="NotBeforeError",this.date=t};(i.prototype=Object.create(r.prototype)).constructor=i,e.exports=i},2340:(e,t,a)=>{var r=a(8619),i=function(e,t){r.call(this,e),this.name="TokenExpiredError",this.expiredAt=t};(i.prototype=Object.create(r.prototype)).constructor=i,e.exports=i},5599:(e,t,a)=>{const r=a(1249);e.exports=r.satisfies(process.version,">=15.7.0")},4964:(e,t,a)=>{var r=a(1249);e.exports=r.satisfies(process.version,"^6.12.0 || >=8.0.0")},1564:(e,t,a)=>{const r=a(1249);e.exports=r.satisfies(process.version,">=16.9.0")},8034:(e,t,a)=>{var r=a(7824);e.exports=function(e,t){var a=t||Math.floor(Date.now()/1e3);if("string"==typeof e){var i=r(e);if(void 0===i)return;return Math.floor(a+i/1e3)}return"number"==typeof e?a+e:void 0}},7566:(e,t,a)=>{const r=a(5599),i=a(1564),o={ec:["ES256","ES384","ES512"],rsa:["RS256","PS256","RS384","PS384","RS512","PS512"],"rsa-pss":["PS256","PS384","PS512"]},n={ES256:"prime256v1",ES384:"secp384r1",ES512:"secp521r1"};e.exports=function(e,t){if(!e||!t)return;const a=t.asymmetricKeyType;if(!a)return;const p=o[a];if(!p)throw new Error(`Unknown key type "${a}".`);if(!p.includes(e))throw new Error(`"alg" parameter for "${a}" key type must be one of: ${p.join(", ")}.`);if(r)switch(a){case"ec":const a=t.asymmetricKeyDetails.namedCurve,r=n[e];if(a!==r)throw new Error(`"alg" parameter "${e}" requires curve "${r}".`);break;case"rsa-pss":if(i){const a=parseInt(e.slice(-3),10),{hashAlgorithm:r,mgf1HashAlgorithm:i,saltLength:o}=t.asymmetricKeyDetails;if(r!==`sha${a}`||i!==r)throw new Error(`Invalid key for this operation, its RSA-PSS parameters do not meet the requirements of "alg" ${e}.`);if(void 0!==o&&o>a>>3)throw new Error(`Invalid key for this operation, its RSA-PSS parameter saltLength does not meet the requirements of "alg" ${e}.`)}}}},2506:(e,t,a)=>{const r=a(8034),i=a(4964),o=a(7566),n=a(158),p=a(8922),d=a(8094),s=a(5928),l=a(3126),c=a(8146),m=a(5751),u=a(8917),{KeyObject:h,createSecretKey:f,createPrivateKey:v}=a(6113),g=["RS256","RS384","RS512","ES256","ES384","ES512","HS256","HS384","HS512","none"];i&&g.splice(3,0,"PS256","PS384","PS512");const y={expiresIn:{isValid:function(e){return s(e)||m(e)&&e},message:'"expiresIn" should be a number of seconds or string representing a timespan'},notBefore:{isValid:function(e){return s(e)||m(e)&&e},message:'"notBefore" should be a number of seconds or string representing a timespan'},audience:{isValid:function(e){return m(e)||Array.isArray(e)},message:'"audience" must be a string or array'},algorithm:{isValid:p.bind(null,g),message:'"algorithm" must be a valid string enum value'},header:{isValid:c,message:'"header" must be an object'},encoding:{isValid:m,message:'"encoding" must be a string'},issuer:{isValid:m,message:'"issuer" must be a string'},subject:{isValid:m,message:'"subject" must be a string'},jwtid:{isValid:m,message:'"jwtid" must be a string'},noTimestamp:{isValid:d,message:'"noTimestamp" must be a boolean'},keyid:{isValid:m,message:'"keyid" must be a string'},mutatePayload:{isValid:d,message:'"mutatePayload" must be a boolean'},allowInsecureKeySizes:{isValid:d,message:'"allowInsecureKeySizes" must be a boolean'},allowInvalidAsymmetricKeyTypes:{isValid:d,message:'"allowInvalidAsymmetricKeyTypes" must be a boolean'}},w={iat:{isValid:l,message:'"iat" should be a number of seconds'},exp:{isValid:l,message:'"exp" should be a number of seconds'},nbf:{isValid:l,message:'"nbf" should be a number of seconds'}};function _(e,t,a,r){if(!c(a))throw new Error('Expected "'+r+'" to be a plain object.');Object.keys(a).forEach((function(i){const o=e[i];if(o){if(!o.isValid(a[i]))throw new Error(o.message)}else if(!t)throw new Error('"'+i+'" is not allowed in "'+r+'"')}))}const T={audience:"aud",issuer:"iss",subject:"sub",jwtid:"jti"},E=["expiresIn","notBefore","noTimestamp","audience","issuer","subject","jwtid"];e.exports=function(e,t,a,i){"function"==typeof a?(i=a,a={}):a=a||{};const p="object"==typeof e&&!Buffer.isBuffer(e),d=Object.assign({alg:a.algorithm||"HS256",typ:p?"JWT":void 0,kid:a.keyid},a.header);function s(e){if(i)return i(e);throw e}if(!t&&"none"!==a.algorithm)return s(new Error("secretOrPrivateKey must have a value"));if(null!=t&&!(t instanceof h))try{t=v(t)}catch(e){try{t=f("string"==typeof t?Buffer.from(t):t)}catch(e){return s(new Error("secretOrPrivateKey is not valid key material"))}}if(d.alg.startsWith("HS")&&"secret"!==t.type)return s(new Error(`secretOrPrivateKey must be a symmetric key when using ${d.alg}`));if(/^(?:RS|PS|ES)/.test(d.alg)){if("private"!==t.type)return s(new Error(`secretOrPrivateKey must be an asymmetric key when using ${d.alg}`));if(!a.allowInsecureKeySizes&&!d.alg.startsWith("ES")&&void 0!==t.asymmetricKeyDetails&&t.asymmetricKeyDetails.modulusLength<2048)return s(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${d.alg}`))}if(void 0===e)return s(new Error("payload is required"));if(p){try{!function(e){_(w,!0,e,"payload")}(e)}catch(e){return s(e)}a.mutatePayload||(e=Object.assign({},e))}else{const t=E.filter((function(e){return void 0!==a[e]}));if(t.length>0)return s(new Error("invalid "+t.join(",")+" option for "+typeof e+" payload"))}if(void 0!==e.exp&&void 0!==a.expiresIn)return s(new Error('Bad "options.expiresIn" option the payload already has an "exp" property.'));if(void 0!==e.nbf&&void 0!==a.notBefore)return s(new Error('Bad "options.notBefore" option the payload already has an "nbf" property.'));try{!function(e){_(y,!1,e,"options")}(a)}catch(e){return s(e)}if(!a.allowInvalidAsymmetricKeyTypes)try{o(d.alg,t)}catch(e){return s(e)}const l=e.iat||Math.floor(Date.now()/1e3);if(a.noTimestamp?delete e.iat:p&&(e.iat=l),void 0!==a.notBefore){try{e.nbf=r(a.notBefore,l)}catch(e){return s(e)}if(void 0===e.nbf)return s(new Error('"notBefore" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'))}if(void 0!==a.expiresIn&&"object"==typeof e){try{e.exp=r(a.expiresIn,l)}catch(e){return s(e)}if(void 0===e.exp)return s(new Error('"expiresIn" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'))}Object.keys(T).forEach((function(t){const r=T[t];if(void 0!==a[t]){if(void 0!==e[r])return s(new Error('Bad "options.'+t+'" option. The payload already has an "'+r+'" property.'));e[r]=a[t]}}));const c=a.encoding||"utf8";if("function"!=typeof i){let r=n.sign({header:d,payload:e,secret:t,encoding:c});if(!a.allowInsecureKeySizes&&/^(?:RS|PS)/.test(d.alg)&&r.length<256)throw new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${d.alg}`);return r}i=i&&u(i),n.createSign({header:d,privateKey:t,payload:e,encoding:c}).once("error",i).once("done",(function(e){if(!a.allowInsecureKeySizes&&/^(?:RS|PS)/.test(d.alg)&&e.length<256)return i(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${d.alg}`));i(null,e)}))}},7030:(e,t,a)=>{const r=a(8619),i=a(1826),o=a(2340),n=a(7626),p=a(8034),d=a(7566),s=a(4964),l=a(158),{KeyObject:c,createSecretKey:m,createPublicKey:u}=a(6113),h=["RS256","RS384","RS512"],f=["ES256","ES384","ES512"],v=["RS256","RS384","RS512"],g=["HS256","HS384","HS512"];s&&(h.splice(h.length,0,"PS256","PS384","PS512"),v.splice(v.length,0,"PS256","PS384","PS512")),e.exports=function(e,t,a,s){let y;if("function"!=typeof a||s||(s=a,a={}),a||(a={}),a=Object.assign({},a),y=s||function(e,t){if(e)throw e;return t},a.clockTimestamp&&"number"!=typeof a.clockTimestamp)return y(new r("clockTimestamp must be a number"));if(void 0!==a.nonce&&("string"!=typeof a.nonce||""===a.nonce.trim()))return y(new r("nonce must be a non-empty string"));if(void 0!==a.allowInvalidAsymmetricKeyTypes&&"boolean"!=typeof a.allowInvalidAsymmetricKeyTypes)return y(new r("allowInvalidAsymmetricKeyTypes must be a boolean"));const w=a.clockTimestamp||Math.floor(Date.now()/1e3);if(!e)return y(new r("jwt must be provided"));if("string"!=typeof e)return y(new r("jwt must be a string"));const _=e.split(".");if(3!==_.length)return y(new r("jwt malformed"));let T;try{T=n(e,{complete:!0})}catch(e){return y(e)}if(!T)return y(new r("invalid token"));const E=T.header;let S;if("function"==typeof t){if(!s)return y(new r("verify must be called asynchronous if secret or public key is provided as a callback"));S=t}else S=function(e,a){return a(null,t)};return S(E,(function(t,n){if(t)return y(new r("error in secret or public key callback: "+t.message));const s=""!==_[2].trim();if(!s&&n)return y(new r("jwt signature is required"));if(s&&!n)return y(new r("secret or public key must be provided"));if(!s&&!a.algorithms)return y(new r('please specify "none" in "algorithms" to verify unsigned tokens'));if(null!=n&&!(n instanceof c))try{n=u(n)}catch(e){try{n=m("string"==typeof n?Buffer.from(n):n)}catch(e){return y(new r("secretOrPublicKey is not valid key material"))}}if(a.algorithms||("secret"===n.type?a.algorithms=g:["rsa","rsa-pss"].includes(n.asymmetricKeyType)?a.algorithms=v:"ec"===n.asymmetricKeyType?a.algorithms=f:a.algorithms=h),-1===a.algorithms.indexOf(T.header.alg))return y(new r("invalid algorithm"));if(E.alg.startsWith("HS")&&"secret"!==n.type)return y(new r(`secretOrPublicKey must be a symmetric key when using ${E.alg}`));if(/^(?:RS|PS|ES)/.test(E.alg)&&"public"!==n.type)return y(new r(`secretOrPublicKey must be an asymmetric key when using ${E.alg}`));if(!a.allowInvalidAsymmetricKeyTypes)try{d(E.alg,n)}catch(e){return y(e)}let S;try{S=l.verify(e,T.header.alg,n)}catch(e){return y(e)}if(!S)return y(new r("invalid signature"));const C=T.payload;if(void 0!==C.nbf&&!a.ignoreNotBefore){if("number"!=typeof C.nbf)return y(new r("invalid nbf value"));if(C.nbf>w+(a.clockTolerance||0))return y(new i("jwt not active",new Date(1e3*C.nbf)))}if(void 0!==C.exp&&!a.ignoreExpiration){if("number"!=typeof C.exp)return y(new r("invalid exp value"));if(w>=C.exp+(a.clockTolerance||0))return y(new o("jwt expired",new Date(1e3*C.exp)))}if(a.audience){const e=Array.isArray(a.audience)?a.audience:[a.audience];if(!(Array.isArray(C.aud)?C.aud:[C.aud]).some((function(t){return e.some((function(e){return e instanceof RegExp?e.test(t):e===t}))})))return y(new r("jwt audience invalid. expected: "+e.join(" or ")))}if(a.issuer&&("string"==typeof a.issuer&&C.iss!==a.issuer||Array.isArray(a.issuer)&&-1===a.issuer.indexOf(C.iss)))return y(new r("jwt issuer invalid. expected: "+a.issuer));if(a.subject&&C.sub!==a.subject)return y(new r("jwt subject invalid. expected: "+a.subject));if(a.jwtid&&C.jti!==a.jwtid)return y(new r("jwt jwtid invalid. expected: "+a.jwtid));if(a.nonce&&C.nonce!==a.nonce)return y(new r("jwt nonce invalid. expected: "+a.nonce));if(a.maxAge){if("number"!=typeof C.iat)return y(new r("iat required when maxAge is specified"));const e=p(a.maxAge,C.iat);if(void 0===e)return y(new r('"maxAge" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'));if(w>=e+(a.clockTolerance||0))return y(new o("maxAge exceeded",new Date(1e3*e)))}if(!0===a.complete){const e=T.signature;return y(null,{header:E,payload:C,signature:e})}return y(null,C)}))}},4178:(e,t,a)=>{var r=a(8500),i=a(9509).Buffer,o=a(6113),n=a(5015),p=a(3837),d="secret must be a string or buffer",s="key must be a string or a buffer",l="key must be a string, a buffer or an object",c="function"==typeof o.createPublicKey;function m(e){if(!i.isBuffer(e)&&"string"!=typeof e){if(!c)throw v(s);if("object"!=typeof e)throw v(s);if("string"!=typeof e.type)throw v(s);if("string"!=typeof e.asymmetricKeyType)throw v(s);if("function"!=typeof e.export)throw v(s)}}function u(e){if(!i.isBuffer(e)&&"string"!=typeof e&&"object"!=typeof e)throw v(l)}function h(e){return e.replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function f(e){var t=4-(e=e.toString()).length%4;if(4!==t)for(var a=0;a<t;++a)e+="=";return e.replace(/\-/g,"+").replace(/_/g,"/")}function v(e){var t=[].slice.call(arguments,1),a=p.format.bind(p,e).apply(null,t);return new TypeError(a)}function g(e){var t;return t=e,i.isBuffer(t)||"string"==typeof t||(e=JSON.stringify(e)),e}function y(e){return function(t,a){!function(e){if(!i.isBuffer(e)){if("string"==typeof e)return e;if(!c)throw v(d);if("object"!=typeof e)throw v(d);if("secret"!==e.type)throw v(d);if("function"!=typeof e.export)throw v(d)}}(a),t=g(t);var r=o.createHmac("sha"+e,a);return h((r.update(t),r.digest("base64")))}}function w(e){return function(t,a,o){var n=y(e)(t,o);return r(i.from(a),i.from(n))}}function _(e){return function(t,a){u(a),t=g(t);var r=o.createSign("RSA-SHA"+e);return h((r.update(t),r.sign(a,"base64")))}}function T(e){return function(t,a,r){m(r),t=g(t),a=f(a);var i=o.createVerify("RSA-SHA"+e);return i.update(t),i.verify(r,a,"base64")}}function E(e){return function(t,a){u(a),t=g(t);var r=o.createSign("RSA-SHA"+e);return h((r.update(t),r.sign({key:a,padding:o.constants.RSA_PKCS1_PSS_PADDING,saltLength:o.constants.RSA_PSS_SALTLEN_DIGEST},"base64")))}}function S(e){return function(t,a,r){m(r),t=g(t),a=f(a);var i=o.createVerify("RSA-SHA"+e);return i.update(t),i.verify({key:r,padding:o.constants.RSA_PKCS1_PSS_PADDING,saltLength:o.constants.RSA_PSS_SALTLEN_DIGEST},a,"base64")}}function C(e){var t=_(e);return function(){var a=t.apply(null,arguments);return n.derToJose(a,"ES"+e)}}function b(e){var t=T(e);return function(a,r,i){return r=n.joseToDer(r,"ES"+e).toString("base64"),t(a,r,i)}}function A(){return function(){return""}}function R(){return function(e,t){return""===t}}c&&(s+=" or a KeyObject",d+="or a KeyObject"),e.exports=function(e){var t={hs:y,rs:_,ps:E,es:C,none:A},a={hs:w,rs:T,ps:S,es:b,none:R},r=e.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);if(!r)throw v('"%s" is not a valid algorithm.\n  Supported algorithms are:\n  "HS256", "HS384", "HS512", "RS256", "RS384", "RS512", "PS256", "PS384", "PS512", "ES256", "ES384", "ES512" and "none".',e);var i=(r[1]||r[3]).toLowerCase(),o=r[2];return{sign:t[i](o),verify:a[i](o)}}},158:(e,t,a)=>{var r=a(8952),i=a(3079);t.ALGORITHMS=["HS256","HS384","HS512","RS256","RS384","RS512","PS256","PS384","PS512","ES256","ES384","ES512"],t.sign=r.sign,t.verify=i.verify,t.decode=i.decode,t.isValid=i.isValid,t.createSign=function(e){return new r(e)},t.createVerify=function(e){return new i(e)}},7006:(e,t,a)=>{var r=a(9509).Buffer,i=a(2781);function o(e){if(this.buffer=null,this.writable=!0,this.readable=!0,!e)return this.buffer=r.alloc(0),this;if("function"==typeof e.pipe)return this.buffer=r.alloc(0),e.pipe(this),this;if(e.length||"object"==typeof e)return this.buffer=e,this.writable=!1,process.nextTick(function(){this.emit("end",e),this.readable=!1,this.emit("close")}.bind(this)),this;throw new TypeError("Unexpected data type ("+typeof e+")")}a(3837).inherits(o,i),o.prototype.write=function(e){this.buffer=r.concat([this.buffer,r.from(e)]),this.emit("data",e)},o.prototype.end=function(e){e&&this.write(e),this.emit("end",e),this.emit("close"),this.writable=!1,this.readable=!1},e.exports=o},8952:(e,t,a)=>{var r=a(9509).Buffer,i=a(7006),o=a(4178),n=a(2781),p=a(2010),d=a(3837);function s(e,t){return r.from(e,t).toString("base64").replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function l(e){var t=e.header,a=e.payload,r=e.secret||e.privateKey,i=e.encoding,n=o(t.alg),l=function(e,t,a){a=a||"utf8";var r=s(p(e),"binary"),i=s(p(t),a);return d.format("%s.%s",r,i)}(t,a,i),c=n.sign(l,r);return d.format("%s.%s",l,c)}function c(e){var t=e.secret||e.privateKey||e.key,a=new i(t);this.readable=!0,this.header=e.header,this.encoding=e.encoding,this.secret=this.privateKey=this.key=a,this.payload=new i(e.payload),this.secret.once("close",function(){!this.payload.writable&&this.readable&&this.sign()}.bind(this)),this.payload.once("close",function(){!this.secret.writable&&this.readable&&this.sign()}.bind(this))}d.inherits(c,n),c.prototype.sign=function(){try{var e=l({header:this.header,payload:this.payload.buffer,secret:this.secret.buffer,encoding:this.encoding});return this.emit("done",e),this.emit("data",e),this.emit("end"),this.readable=!1,e}catch(e){this.readable=!1,this.emit("error",e),this.emit("close")}},c.sign=l,e.exports=c},2010:(e,t,a)=>{var r=a(4300).Buffer;e.exports=function(e){return"string"==typeof e?e:"number"==typeof e||r.isBuffer(e)?e.toString():JSON.stringify(e)}},3079:(e,t,a)=>{var r=a(9509).Buffer,i=a(7006),o=a(4178),n=a(2781),p=a(2010),d=a(3837),s=/^[a-zA-Z0-9\-_]+?\.[a-zA-Z0-9\-_]+?\.([a-zA-Z0-9\-_]+)?$/;function l(e){var t=e.split(".",1)[0];return function(e){if(function(e){return"[object Object]"===Object.prototype.toString.call(e)}(e))return e;try{return JSON.parse(e)}catch(e){return}}(r.from(t,"base64").toString("binary"))}function c(e){return e.split(".")[2]}function m(e){return s.test(e)&&!!l(e)}function u(e,t,a){if(!t){var r=new Error("Missing algorithm parameter for jws.verify");throw r.code="MISSING_ALGORITHM",r}var i=c(e=p(e)),n=function(e){return e.split(".",2).join(".")}(e);return o(t).verify(n,i,a)}function h(e,t){if(t=t||{},!m(e=p(e)))return null;var a=l(e);if(!a)return null;var i=function(e,t){t=t||"utf8";var a=e.split(".")[1];return r.from(a,"base64").toString(t)}(e);return("JWT"===a.typ||t.json)&&(i=JSON.parse(i,t.encoding)),{header:a,payload:i,signature:c(e)}}function f(e){var t=(e=e||{}).secret||e.publicKey||e.key,a=new i(t);this.readable=!0,this.algorithm=e.algorithm,this.encoding=e.encoding,this.secret=this.publicKey=this.key=a,this.signature=new i(e.signature),this.secret.once("close",function(){!this.signature.writable&&this.readable&&this.verify()}.bind(this)),this.signature.once("close",function(){!this.secret.writable&&this.readable&&this.verify()}.bind(this))}d.inherits(f,n),f.prototype.verify=function(){try{var e=u(this.signature.buffer,this.algorithm,this.key.buffer),t=h(this.signature.buffer,this.encoding);return this.emit("done",e,t),this.emit("data",e),this.emit("end"),this.readable=!1,e}catch(e){this.readable=!1,this.emit("error",e),this.emit("close")}},f.decode=h,f.isValid=m,f.verify=u,e.exports=f},8922:e=>{var t=1/0,a=9007199254740991,r="[object Function]",i="[object GeneratorFunction]",o=/^\s+|\s+$/g,n=/^[-+]0x[0-9a-f]+$/i,p=/^0b[01]+$/i,d=/^0o[0-7]+$/i,s=/^(?:0|[1-9]\d*)$/,l=parseInt;function c(e){return e!=e}var m,u,h=Object.prototype,f=h.hasOwnProperty,v=h.toString,g=h.propertyIsEnumerable,y=(m=Object.keys,u=Object,function(e){return m(u(e))}),w=Math.max;function _(e,t){return!!(t=null==t?a:t)&&("number"==typeof e||s.test(e))&&e>-1&&e%1==0&&e<t}var T=Array.isArray;function E(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=a}(e.length)&&!function(e){var t=S(e)?v.call(e):"";return t==r||t==i}(e)}function S(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function C(e){return!!e&&"object"==typeof e}e.exports=function(e,a,r,i){var s;e=E(e)?e:(s=e)?function(e,t){return function(t,a){for(var r=-1,i=t?t.length:0,o=Array(i);++r<i;)o[r]=(n=t[r],e[n]);var n;return o}(t)}(s,function(e){return E(e)?function(e,t){var a=T(e)||function(e){return function(e){return C(e)&&E(e)}(e)&&f.call(e,"callee")&&(!g.call(e,"callee")||"[object Arguments]"==v.call(e))}(e)?function(e,t){for(var a=-1,r=Array(e);++a<e;)r[a]=t(a);return r}(e.length,String):[],r=a.length,i=!!r;for(var o in e)!t&&!f.call(e,o)||i&&("length"==o||_(o,r))||a.push(o);return a}(e):function(e){if(a=(t=e)&&t.constructor,t!==("function"==typeof a&&a.prototype||h))return y(e);var t,a,r=[];for(var i in Object(e))f.call(e,i)&&"constructor"!=i&&r.push(i);return r}(e)}(s)):[],r=r&&!i?function(e){var a=function(e){return e?(e=function(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||C(e)&&"[object Symbol]"==v.call(e)}(e))return NaN;if(S(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=S(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(o,"");var a=p.test(e);return a||d.test(e)?l(e.slice(2),a?2:8):n.test(e)?NaN:+e}(e))===t||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}(e),r=a%1;return a==a?r?a-r:a:0}(r):0;var m=e.length;return r<0&&(r=w(m+r,0)),function(e){return"string"==typeof e||!T(e)&&C(e)&&"[object String]"==v.call(e)}(e)?r<=m&&e.indexOf(a,r)>-1:!!m&&function(e,t,a){if(t!=t)return function(e,t,a,r){for(var i=e.length,o=a+-1;++o<i;)if(t(e[o],o,e))return o;return-1}(e,c,a);for(var r=a-1,i=e.length;++r<i;)if(e[r]===t)return r;return-1}(e,a,r)>-1}},8094:e=>{var t=Object.prototype.toString;e.exports=function(e){return!0===e||!1===e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Boolean]"==t.call(e)}},5928:e=>{var t=1/0,a=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,i=/^0b[01]+$/i,o=/^0o[0-7]+$/i,n=parseInt,p=Object.prototype.toString;function d(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}e.exports=function(e){return"number"==typeof e&&e==function(e){var s=function(e){return e?(e=function(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==p.call(e)}(e))return NaN;if(d(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=d(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(a,"");var s=i.test(e);return s||o.test(e)?n(e.slice(2),s?2:8):r.test(e)?NaN:+e}(e))===t||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}(e),l=s%1;return s==s?l?s-l:s:0}(e)}},3126:e=>{var t=Object.prototype.toString;e.exports=function(e){return"number"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Number]"==t.call(e)}},8146:e=>{var t,a,r=Function.prototype,i=Object.prototype,o=r.toString,n=i.hasOwnProperty,p=o.call(Object),d=i.toString,s=(t=Object.getPrototypeOf,a=Object,function(e){return t(a(e))});e.exports=function(e){if(!function(e){return!!e&&"object"==typeof e}(e)||"[object Object]"!=d.call(e)||function(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}(e))return!1;var t=s(e);if(null===t)return!0;var a=n.call(t,"constructor")&&t.constructor;return"function"==typeof a&&a instanceof a&&o.call(a)==p}},5751:e=>{var t=Object.prototype.toString,a=Array.isArray;e.exports=function(e){return"string"==typeof e||!a(e)&&function(e){return!!e&&"object"==typeof e}(e)&&"[object String]"==t.call(e)}},8917:e=>{var t=1/0,a=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,i=/^0b[01]+$/i,o=/^0o[0-7]+$/i,n=parseInt,p=Object.prototype.toString;function d(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}e.exports=function(e){return function(e,s){var l;if("function"!=typeof s)throw new TypeError("Expected a function");return e=function(e){var s=function(e){return e?(e=function(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==p.call(e)}(e))return NaN;if(d(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=d(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(a,"");var s=i.test(e);return s||o.test(e)?n(e.slice(2),s?2:8):r.test(e)?NaN:+e}(e))===t||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}(e),l=s%1;return s==s?l?s-l:s:0}(e),function(){return--e>0&&(l=s.apply(this,arguments)),e<=1&&(s=void 0),l}}(2,e)}},9593:(e,t,a)=>{"use strict";const r=a(4411),i=Symbol("max"),o=Symbol("length"),n=Symbol("lengthCalculator"),p=Symbol("allowStale"),d=Symbol("maxAge"),s=Symbol("dispose"),l=Symbol("noDisposeOnSet"),c=Symbol("lruList"),m=Symbol("cache"),u=Symbol("updateAgeOnGet"),h=()=>1,f=(e,t,a)=>{const r=e[m].get(t);if(r){const t=r.value;if(v(e,t)){if(y(e,r),!e[p])return}else a&&(e[u]&&(r.value.now=Date.now()),e[c].unshiftNode(r));return t.value}},v=(e,t)=>{if(!t||!t.maxAge&&!e[d])return!1;const a=Date.now()-t.now;return t.maxAge?a>t.maxAge:e[d]&&a>e[d]},g=e=>{if(e[o]>e[i])for(let t=e[c].tail;e[o]>e[i]&&null!==t;){const a=t.prev;y(e,t),t=a}},y=(e,t)=>{if(t){const a=t.value;e[s]&&e[s](a.key,a.value),e[o]-=a.length,e[m].delete(a.key),e[c].removeNode(t)}};class w{constructor(e,t,a,r,i){this.key=e,this.value=t,this.length=a,this.now=r,this.maxAge=i||0}}const _=(e,t,a,r)=>{let i=a.value;v(e,i)&&(y(e,a),e[p]||(i=void 0)),i&&t.call(r,i.value,i.key,e)};e.exports=class{constructor(e){if("number"==typeof e&&(e={max:e}),e||(e={}),e.max&&("number"!=typeof e.max||e.max<0))throw new TypeError("max must be a non-negative number");this[i]=e.max||1/0;const t=e.length||h;if(this[n]="function"!=typeof t?h:t,this[p]=e.stale||!1,e.maxAge&&"number"!=typeof e.maxAge)throw new TypeError("maxAge must be a number");this[d]=e.maxAge||0,this[s]=e.dispose,this[l]=e.noDisposeOnSet||!1,this[u]=e.updateAgeOnGet||!1,this.reset()}set max(e){if("number"!=typeof e||e<0)throw new TypeError("max must be a non-negative number");this[i]=e||1/0,g(this)}get max(){return this[i]}set allowStale(e){this[p]=!!e}get allowStale(){return this[p]}set maxAge(e){if("number"!=typeof e)throw new TypeError("maxAge must be a non-negative number");this[d]=e,g(this)}get maxAge(){return this[d]}set lengthCalculator(e){"function"!=typeof e&&(e=h),e!==this[n]&&(this[n]=e,this[o]=0,this[c].forEach((e=>{e.length=this[n](e.value,e.key),this[o]+=e.length}))),g(this)}get lengthCalculator(){return this[n]}get length(){return this[o]}get itemCount(){return this[c].length}rforEach(e,t){t=t||this;for(let a=this[c].tail;null!==a;){const r=a.prev;_(this,e,a,t),a=r}}forEach(e,t){t=t||this;for(let a=this[c].head;null!==a;){const r=a.next;_(this,e,a,t),a=r}}keys(){return this[c].toArray().map((e=>e.key))}values(){return this[c].toArray().map((e=>e.value))}reset(){this[s]&&this[c]&&this[c].length&&this[c].forEach((e=>this[s](e.key,e.value))),this[m]=new Map,this[c]=new r,this[o]=0}dump(){return this[c].map((e=>!v(this,e)&&{k:e.key,v:e.value,e:e.now+(e.maxAge||0)})).toArray().filter((e=>e))}dumpLru(){return this[c]}set(e,t,a){if((a=a||this[d])&&"number"!=typeof a)throw new TypeError("maxAge must be a number");const r=a?Date.now():0,p=this[n](t,e);if(this[m].has(e)){if(p>this[i])return y(this,this[m].get(e)),!1;const n=this[m].get(e).value;return this[s]&&(this[l]||this[s](e,n.value)),n.now=r,n.maxAge=a,n.value=t,this[o]+=p-n.length,n.length=p,this.get(e),g(this),!0}const u=new w(e,t,p,r,a);return u.length>this[i]?(this[s]&&this[s](e,t),!1):(this[o]+=u.length,this[c].unshift(u),this[m].set(e,this[c].head),g(this),!0)}has(e){if(!this[m].has(e))return!1;const t=this[m].get(e).value;return!v(this,t)}get(e){return f(this,e,!0)}peek(e){return f(this,e,!1)}pop(){const e=this[c].tail;return e?(y(this,e),e.value):null}del(e){y(this,this[m].get(e))}load(e){this.reset();const t=Date.now();for(let a=e.length-1;a>=0;a--){const r=e[a],i=r.e||0;if(0===i)this.set(r.k,r.v);else{const e=i-t;e>0&&this.set(r.k,r.v,e)}}}prune(){this[m].forEach(((e,t)=>f(this,t,!1)))}}},7824:e=>{var t=1e3,a=60*t,r=60*a,i=24*r;function o(e,t,a,r){var i=t>=1.5*a;return Math.round(e/a)+" "+r+(i?"s":"")}e.exports=function(e,n){n=n||{};var p,d,s=typeof e;if("string"===s&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var o=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(o){var n=parseFloat(o[1]);switch((o[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*n;case"weeks":case"week":case"w":return 6048e5*n;case"days":case"day":case"d":return n*i;case"hours":case"hour":case"hrs":case"hr":case"h":return n*r;case"minutes":case"minute":case"mins":case"min":case"m":return n*a;case"seconds":case"second":case"secs":case"sec":case"s":return n*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return n;default:return}}}}(e);if("number"===s&&isFinite(e))return n.long?(p=e,(d=Math.abs(p))>=i?o(p,d,i,"day"):d>=r?o(p,d,r,"hour"):d>=a?o(p,d,a,"minute"):d>=t?o(p,d,t,"second"):p+" ms"):function(e){var o=Math.abs(e);return o>=i?Math.round(e/i)+"d":o>=r?Math.round(e/r)+"h":o>=a?Math.round(e/a)+"m":o>=t?Math.round(e/t)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},9509:(e,t,a)=>{var r=a(4300),i=r.Buffer;function o(e,t){for(var a in e)t[a]=e[a]}function n(e,t,a){return i(e,t,a)}i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow?e.exports=r:(o(r,t),t.Buffer=n),n.prototype=Object.create(i.prototype),o(i,n),n.from=function(e,t,a){if("number"==typeof e)throw new TypeError("Argument must not be a number");return i(e,t,a)},n.alloc=function(e,t,a){if("number"!=typeof e)throw new TypeError("Argument must be a number");var r=i(e);return void 0!==t?"string"==typeof a?r.fill(t,a):r.fill(t):r.fill(0),r},n.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return i(e)},n.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return r.SlowBuffer(e)}},2257:(e,t,a)=>{const r=Symbol("SemVer ANY");class i{static get ANY(){return r}constructor(e,t){if(t=o(t),e instanceof i){if(e.loose===!!t.loose)return e;e=e.value}e=e.trim().split(/\s+/).join(" "),s("comparator",e,t),this.options=t,this.loose=!!t.loose,this.parse(e),this.semver===r?this.value="":this.value=this.operator+this.semver.version,s("comp",this)}parse(e){const t=this.options.loose?n[p.COMPARATORLOOSE]:n[p.COMPARATOR],a=e.match(t);if(!a)throw new TypeError(`Invalid comparator: ${e}`);this.operator=void 0!==a[1]?a[1]:"","="===this.operator&&(this.operator=""),a[2]?this.semver=new l(a[2],this.options.loose):this.semver=r}toString(){return this.value}test(e){if(s("Comparator.test",e,this.options.loose),this.semver===r||e===r)return!0;if("string"==typeof e)try{e=new l(e,this.options)}catch(e){return!1}return d(e,this.operator,this.semver,this.options)}intersects(e,t){if(!(e instanceof i))throw new TypeError("a Comparator is required");return""===this.operator?""===this.value||new c(e.value,t).test(this.value):""===e.operator?""===e.value||new c(this.value,t).test(e.semver):!((t=o(t)).includePrerelease&&("<0.0.0-0"===this.value||"<0.0.0-0"===e.value)||!t.includePrerelease&&(this.value.startsWith("<0.0.0")||e.value.startsWith("<0.0.0"))||(!this.operator.startsWith(">")||!e.operator.startsWith(">"))&&(!this.operator.startsWith("<")||!e.operator.startsWith("<"))&&(this.semver.version!==e.semver.version||!this.operator.includes("=")||!e.operator.includes("="))&&!(d(this.semver,"<",e.semver,t)&&this.operator.startsWith(">")&&e.operator.startsWith("<"))&&!(d(this.semver,">",e.semver,t)&&this.operator.startsWith("<")&&e.operator.startsWith(">")))}}e.exports=i;const o=a(2893),{safeRe:n,t:p}=a(5765),d=a(7539),s=a(4225),l=a(6376),c=a(6902)},6902:(e,t,a)=>{class r{constructor(e,t){if(t=o(t),e instanceof r)return e.loose===!!t.loose&&e.includePrerelease===!!t.includePrerelease?e:new r(e.raw,t);if(e instanceof n)return this.raw=e.value,this.set=[[e]],this.format(),this;if(this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease,this.raw=e.trim().split(/\s+/).join(" "),this.set=this.raw.split("||").map((e=>this.parseRange(e.trim()))).filter((e=>e.length)),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){const e=this.set[0];if(this.set=this.set.filter((e=>!v(e[0]))),0===this.set.length)this.set=[e];else if(this.set.length>1)for(const e of this.set)if(1===e.length&&g(e[0])){this.set=[e];break}}this.format()}format(){return this.range=this.set.map((e=>e.join(" ").trim())).join("||").trim(),this.range}toString(){return this.range}parseRange(e){const t=((this.options.includePrerelease&&h)|(this.options.loose&&f))+":"+e,a=i.get(t);if(a)return a;const r=this.options.loose,o=r?s[l.HYPHENRANGELOOSE]:s[l.HYPHENRANGE];e=e.replace(o,N(this.options.includePrerelease)),p("hyphen replace",e),e=e.replace(s[l.COMPARATORTRIM],c),p("comparator trim",e),e=e.replace(s[l.TILDETRIM],m),p("tilde trim",e),e=e.replace(s[l.CARETTRIM],u),p("caret trim",e);let d=e.split(" ").map((e=>w(e,this.options))).join(" ").split(/\s+/).map((e=>I(e,this.options)));r&&(d=d.filter((e=>(p("loose invalid filter",e,this.options),!!e.match(s[l.COMPARATORLOOSE]))))),p("range list",d);const g=new Map,y=d.map((e=>new n(e,this.options)));for(const e of y){if(v(e))return[e];g.set(e.value,e)}g.size>1&&g.has("")&&g.delete("");const _=[...g.values()];return i.set(t,_),_}intersects(e,t){if(!(e instanceof r))throw new TypeError("a Range is required");return this.set.some((a=>y(a,t)&&e.set.some((e=>y(e,t)&&a.every((a=>e.every((e=>a.intersects(e,t)))))))))}test(e){if(!e)return!1;if("string"==typeof e)try{e=new d(e,this.options)}catch(e){return!1}for(let t=0;t<this.set.length;t++)if(k(this.set[t],e,this.options))return!0;return!1}}e.exports=r;const i=new(a(9593))({max:1e3}),o=a(2893),n=a(2257),p=a(4225),d=a(6376),{safeRe:s,t:l,comparatorTrimReplace:c,tildeTrimReplace:m,caretTrimReplace:u}=a(5765),{FLAG_INCLUDE_PRERELEASE:h,FLAG_LOOSE:f}=a(3295),v=e=>"<0.0.0-0"===e.value,g=e=>""===e.value,y=(e,t)=>{let a=!0;const r=e.slice();let i=r.pop();for(;a&&r.length;)a=r.every((e=>i.intersects(e,t))),i=r.pop();return a},w=(e,t)=>(p("comp",e,t),e=S(e,t),p("caret",e),e=T(e,t),p("tildes",e),e=b(e,t),p("xrange",e),e=R(e,t),p("stars",e),e),_=e=>!e||"x"===e.toLowerCase()||"*"===e,T=(e,t)=>e.trim().split(/\s+/).map((e=>E(e,t))).join(" "),E=(e,t)=>{const a=t.loose?s[l.TILDELOOSE]:s[l.TILDE];return e.replace(a,((t,a,r,i,o)=>{let n;return p("tilde",e,t,a,r,i,o),_(a)?n="":_(r)?n=`>=${a}.0.0 <${+a+1}.0.0-0`:_(i)?n=`>=${a}.${r}.0 <${a}.${+r+1}.0-0`:o?(p("replaceTilde pr",o),n=`>=${a}.${r}.${i}-${o} <${a}.${+r+1}.0-0`):n=`>=${a}.${r}.${i} <${a}.${+r+1}.0-0`,p("tilde return",n),n}))},S=(e,t)=>e.trim().split(/\s+/).map((e=>C(e,t))).join(" "),C=(e,t)=>{p("caret",e,t);const a=t.loose?s[l.CARETLOOSE]:s[l.CARET],r=t.includePrerelease?"-0":"";return e.replace(a,((t,a,i,o,n)=>{let d;return p("caret",e,t,a,i,o,n),_(a)?d="":_(i)?d=`>=${a}.0.0${r} <${+a+1}.0.0-0`:_(o)?d="0"===a?`>=${a}.${i}.0${r} <${a}.${+i+1}.0-0`:`>=${a}.${i}.0${r} <${+a+1}.0.0-0`:n?(p("replaceCaret pr",n),d="0"===a?"0"===i?`>=${a}.${i}.${o}-${n} <${a}.${i}.${+o+1}-0`:`>=${a}.${i}.${o}-${n} <${a}.${+i+1}.0-0`:`>=${a}.${i}.${o}-${n} <${+a+1}.0.0-0`):(p("no pr"),d="0"===a?"0"===i?`>=${a}.${i}.${o}${r} <${a}.${i}.${+o+1}-0`:`>=${a}.${i}.${o}${r} <${a}.${+i+1}.0-0`:`>=${a}.${i}.${o} <${+a+1}.0.0-0`),p("caret return",d),d}))},b=(e,t)=>(p("replaceXRanges",e,t),e.split(/\s+/).map((e=>A(e,t))).join(" ")),A=(e,t)=>{e=e.trim();const a=t.loose?s[l.XRANGELOOSE]:s[l.XRANGE];return e.replace(a,((a,r,i,o,n,d)=>{p("xRange",e,a,r,i,o,n,d);const s=_(i),l=s||_(o),c=l||_(n),m=c;return"="===r&&m&&(r=""),d=t.includePrerelease?"-0":"",s?a=">"===r||"<"===r?"<0.0.0-0":"*":r&&m?(l&&(o=0),n=0,">"===r?(r=">=",l?(i=+i+1,o=0,n=0):(o=+o+1,n=0)):"<="===r&&(r="<",l?i=+i+1:o=+o+1),"<"===r&&(d="-0"),a=`${r+i}.${o}.${n}${d}`):l?a=`>=${i}.0.0${d} <${+i+1}.0.0-0`:c&&(a=`>=${i}.${o}.0${d} <${i}.${+o+1}.0-0`),p("xRange return",a),a}))},R=(e,t)=>(p("replaceStars",e,t),e.trim().replace(s[l.STAR],"")),I=(e,t)=>(p("replaceGTE0",e,t),e.trim().replace(s[t.includePrerelease?l.GTE0PRE:l.GTE0],"")),N=e=>(t,a,r,i,o,n,p,d,s,l,c,m,u)=>`${a=_(r)?"":_(i)?`>=${r}.0.0${e?"-0":""}`:_(o)?`>=${r}.${i}.0${e?"-0":""}`:n?`>=${a}`:`>=${a}${e?"-0":""}`} ${d=_(s)?"":_(l)?`<${+s+1}.0.0-0`:_(c)?`<${s}.${+l+1}.0-0`:m?`<=${s}.${l}.${c}-${m}`:e?`<${s}.${l}.${+c+1}-0`:`<=${d}`}`.trim(),k=(e,t,a)=>{for(let a=0;a<e.length;a++)if(!e[a].test(t))return!1;if(t.prerelease.length&&!a.includePrerelease){for(let a=0;a<e.length;a++)if(p(e[a].semver),e[a].semver!==n.ANY&&e[a].semver.prerelease.length>0){const r=e[a].semver;if(r.major===t.major&&r.minor===t.minor&&r.patch===t.patch)return!0}return!1}return!0}},6376:(e,t,a)=>{const r=a(4225),{MAX_LENGTH:i,MAX_SAFE_INTEGER:o}=a(3295),{safeRe:n,t:p}=a(5765),d=a(2893),{compareIdentifiers:s}=a(6742);class l{constructor(e,t){if(t=d(t),e instanceof l){if(e.loose===!!t.loose&&e.includePrerelease===!!t.includePrerelease)return e;e=e.version}else if("string"!=typeof e)throw new TypeError(`Invalid version. Must be a string. Got type "${typeof e}".`);if(e.length>i)throw new TypeError(`version is longer than ${i} characters`);r("SemVer",e,t),this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease;const a=e.trim().match(t.loose?n[p.LOOSE]:n[p.FULL]);if(!a)throw new TypeError(`Invalid Version: ${e}`);if(this.raw=e,this.major=+a[1],this.minor=+a[2],this.patch=+a[3],this.major>o||this.major<0)throw new TypeError("Invalid major version");if(this.minor>o||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>o||this.patch<0)throw new TypeError("Invalid patch version");a[4]?this.prerelease=a[4].split(".").map((e=>{if(/^[0-9]+$/.test(e)){const t=+e;if(t>=0&&t<o)return t}return e})):this.prerelease=[],this.build=a[5]?a[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(e){if(r("SemVer.compare",this.version,this.options,e),!(e instanceof l)){if("string"==typeof e&&e===this.version)return 0;e=new l(e,this.options)}return e.version===this.version?0:this.compareMain(e)||this.comparePre(e)}compareMain(e){return e instanceof l||(e=new l(e,this.options)),s(this.major,e.major)||s(this.minor,e.minor)||s(this.patch,e.patch)}comparePre(e){if(e instanceof l||(e=new l(e,this.options)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;let t=0;do{const a=this.prerelease[t],i=e.prerelease[t];if(r("prerelease compare",t,a,i),void 0===a&&void 0===i)return 0;if(void 0===i)return 1;if(void 0===a)return-1;if(a!==i)return s(a,i)}while(++t)}compareBuild(e){e instanceof l||(e=new l(e,this.options));let t=0;do{const a=this.build[t],i=e.build[t];if(r("prerelease compare",t,a,i),void 0===a&&void 0===i)return 0;if(void 0===i)return 1;if(void 0===a)return-1;if(a!==i)return s(a,i)}while(++t)}inc(e,t,a){switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",t,a);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",t,a);break;case"prepatch":this.prerelease.length=0,this.inc("patch",t,a),this.inc("pre",t,a);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",t,a),this.inc("pre",t,a);break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":{const e=Number(a)?1:0;if(!t&&!1===a)throw new Error("invalid increment argument: identifier is empty");if(0===this.prerelease.length)this.prerelease=[e];else{let r=this.prerelease.length;for(;--r>=0;)"number"==typeof this.prerelease[r]&&(this.prerelease[r]++,r=-2);if(-1===r){if(t===this.prerelease.join(".")&&!1===a)throw new Error("invalid increment argument: identifier already exists");this.prerelease.push(e)}}if(t){let r=[t,e];!1===a&&(r=[t]),0===s(this.prerelease[0],t)?isNaN(this.prerelease[1])&&(this.prerelease=r):this.prerelease=r}break}default:throw new Error(`invalid increment argument: ${e}`)}return this.raw=this.format(),this.build.length&&(this.raw+=`+${this.build.join(".")}`),this}}e.exports=l},3507:(e,t,a)=>{const r=a(3959);e.exports=(e,t)=>{const a=r(e.trim().replace(/^[=v]+/,""),t);return a?a.version:null}},7539:(e,t,a)=>{const r=a(8718),i=a(1194),o=a(1312),n=a(5903),p=a(1544),d=a(2056);e.exports=(e,t,a,s)=>{switch(t){case"===":return"object"==typeof e&&(e=e.version),"object"==typeof a&&(a=a.version),e===a;case"!==":return"object"==typeof e&&(e=e.version),"object"==typeof a&&(a=a.version),e!==a;case"":case"=":case"==":return r(e,a,s);case"!=":return i(e,a,s);case">":return o(e,a,s);case">=":return n(e,a,s);case"<":return p(e,a,s);case"<=":return d(e,a,s);default:throw new TypeError(`Invalid operator: ${t}`)}}},9038:(e,t,a)=>{const r=a(6376),i=a(3959),{safeRe:o,t:n}=a(5765);e.exports=(e,t)=>{if(e instanceof r)return e;if("number"==typeof e&&(e=String(e)),"string"!=typeof e)return null;let a=null;if((t=t||{}).rtl){let t;for(;(t=o[n.COERCERTL].exec(e))&&(!a||a.index+a[0].length!==e.length);)a&&t.index+t[0].length===a.index+a[0].length||(a=t),o[n.COERCERTL].lastIndex=t.index+t[1].length+t[2].length;o[n.COERCERTL].lastIndex=-1}else a=e.match(o[n.COERCE]);return null===a?null:i(`${a[2]}.${a[3]||"0"}.${a[4]||"0"}`,t)}},8880:(e,t,a)=>{const r=a(6376);e.exports=(e,t,a)=>{const i=new r(e,a),o=new r(t,a);return i.compare(o)||i.compareBuild(o)}},7880:(e,t,a)=>{const r=a(6269);e.exports=(e,t)=>r(e,t,!0)},6269:(e,t,a)=>{const r=a(6376);e.exports=(e,t,a)=>new r(e,a).compare(new r(t,a))},2378:(e,t,a)=>{const r=a(3959);e.exports=(e,t)=>{const a=r(e,null,!0),i=r(t,null,!0),o=a.compare(i);if(0===o)return null;const n=o>0,p=n?a:i,d=n?i:a,s=!!p.prerelease.length;if(d.prerelease.length&&!s)return d.patch||d.minor?p.patch?"patch":p.minor?"minor":"major":"major";const l=s?"pre":"";return a.major!==i.major?l+"major":a.minor!==i.minor?l+"minor":a.patch!==i.patch?l+"patch":"prerelease"}},8718:(e,t,a)=>{const r=a(6269);e.exports=(e,t,a)=>0===r(e,t,a)},1312:(e,t,a)=>{const r=a(6269);e.exports=(e,t,a)=>r(e,t,a)>0},5903:(e,t,a)=>{const r=a(6269);e.exports=(e,t,a)=>r(e,t,a)>=0},253:(e,t,a)=>{const r=a(6376);e.exports=(e,t,a,i,o)=>{"string"==typeof a&&(o=i,i=a,a=void 0);try{return new r(e instanceof r?e.version:e,a).inc(t,i,o).version}catch(e){return null}}},1544:(e,t,a)=>{const r=a(6269);e.exports=(e,t,a)=>r(e,t,a)<0},2056:(e,t,a)=>{const r=a(6269);e.exports=(e,t,a)=>r(e,t,a)<=0},8679:(e,t,a)=>{const r=a(6376);e.exports=(e,t)=>new r(e,t).major},7789:(e,t,a)=>{const r=a(6376);e.exports=(e,t)=>new r(e,t).minor},1194:(e,t,a)=>{const r=a(6269);e.exports=(e,t,a)=>0!==r(e,t,a)},3959:(e,t,a)=>{const r=a(6376);e.exports=(e,t,a=!1)=>{if(e instanceof r)return e;try{return new r(e,t)}catch(e){if(!a)return null;throw e}}},2358:(e,t,a)=>{const r=a(6376);e.exports=(e,t)=>new r(e,t).patch},7559:(e,t,a)=>{const r=a(3959);e.exports=(e,t)=>{const a=r(e,t);return a&&a.prerelease.length?a.prerelease:null}},9795:(e,t,a)=>{const r=a(6269);e.exports=(e,t,a)=>r(t,e,a)},3657:(e,t,a)=>{const r=a(8880);e.exports=(e,t)=>e.sort(((e,a)=>r(a,e,t)))},5712:(e,t,a)=>{const r=a(6902);e.exports=(e,t,a)=>{try{t=new r(t,a)}catch(e){return!1}return t.test(e)}},1100:(e,t,a)=>{const r=a(8880);e.exports=(e,t)=>e.sort(((e,a)=>r(e,a,t)))},6397:(e,t,a)=>{const r=a(3959);e.exports=(e,t)=>{const a=r(e,t);return a?a.version:null}},1249:(e,t,a)=>{const r=a(5765),i=a(3295),o=a(6376),n=a(6742),p=a(3959),d=a(6397),s=a(3507),l=a(253),c=a(2378),m=a(8679),u=a(7789),h=a(2358),f=a(7559),v=a(6269),g=a(9795),y=a(7880),w=a(8880),_=a(1100),T=a(3657),E=a(1312),S=a(1544),C=a(8718),b=a(1194),A=a(5903),R=a(2056),I=a(7539),N=a(9038),k=a(2257),O=a(6902),D=a(5712),P=a(1042),M=a(5775),x=a(1657),V=a(5316),U=a(9042),L=a(6826),F=a(7606),q=a(32),$=a(2937),H=a(7908),j=a(799);e.exports={parse:p,valid:d,clean:s,inc:l,diff:c,major:m,minor:u,patch:h,prerelease:f,compare:v,rcompare:g,compareLoose:y,compareBuild:w,sort:_,rsort:T,gt:E,lt:S,eq:C,neq:b,gte:A,lte:R,cmp:I,coerce:N,Comparator:k,Range:O,satisfies:D,toComparators:P,maxSatisfying:M,minSatisfying:x,minVersion:V,validRange:U,outside:L,gtr:F,ltr:q,intersects:$,simplifyRange:H,subset:j,SemVer:o,re:r.re,src:r.src,tokens:r.t,SEMVER_SPEC_VERSION:i.SEMVER_SPEC_VERSION,RELEASE_TYPES:i.RELEASE_TYPES,compareIdentifiers:n.compareIdentifiers,rcompareIdentifiers:n.rcompareIdentifiers}},3295:e=>{const t=Number.MAX_SAFE_INTEGER||9007199254740991;e.exports={MAX_LENGTH:256,MAX_SAFE_COMPONENT_LENGTH:16,MAX_SAFE_BUILD_LENGTH:250,MAX_SAFE_INTEGER:t,RELEASE_TYPES:["major","premajor","minor","preminor","patch","prepatch","prerelease"],SEMVER_SPEC_VERSION:"2.0.0",FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2}},4225:e=>{const t="object"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?(...e)=>console.error("SEMVER",...e):()=>{};e.exports=t},6742:e=>{const t=/^[0-9]+$/,a=(e,a)=>{const r=t.test(e),i=t.test(a);return r&&i&&(e=+e,a=+a),e===a?0:r&&!i?-1:i&&!r?1:e<a?-1:1};e.exports={compareIdentifiers:a,rcompareIdentifiers:(e,t)=>a(t,e)}},2893:e=>{const t=Object.freeze({loose:!0}),a=Object.freeze({});e.exports=e=>e?"object"!=typeof e?t:e:a},5765:(e,t,a)=>{const{MAX_SAFE_COMPONENT_LENGTH:r,MAX_SAFE_BUILD_LENGTH:i,MAX_LENGTH:o}=a(3295),n=a(4225),p=(t=e.exports={}).re=[],d=t.safeRe=[],s=t.src=[],l=t.t={};let c=0;const m="[a-zA-Z0-9-]",u=[["\\s",1],["\\d",o],[m,i]],h=(e,t,a)=>{const r=(e=>{for(const[t,a]of u)e=e.split(`${t}*`).join(`${t}{0,${a}}`).split(`${t}+`).join(`${t}{1,${a}}`);return e})(t),i=c++;n(e,i,t),l[e]=i,s[i]=t,p[i]=new RegExp(t,a?"g":void 0),d[i]=new RegExp(r,a?"g":void 0)};h("NUMERICIDENTIFIER","0|[1-9]\\d*"),h("NUMERICIDENTIFIERLOOSE","\\d+"),h("NONNUMERICIDENTIFIER",`\\d*[a-zA-Z-]${m}*`),h("MAINVERSION",`(${s[l.NUMERICIDENTIFIER]})\\.(${s[l.NUMERICIDENTIFIER]})\\.(${s[l.NUMERICIDENTIFIER]})`),h("MAINVERSIONLOOSE",`(${s[l.NUMERICIDENTIFIERLOOSE]})\\.(${s[l.NUMERICIDENTIFIERLOOSE]})\\.(${s[l.NUMERICIDENTIFIERLOOSE]})`),h("PRERELEASEIDENTIFIER",`(?:${s[l.NUMERICIDENTIFIER]}|${s[l.NONNUMERICIDENTIFIER]})`),h("PRERELEASEIDENTIFIERLOOSE",`(?:${s[l.NUMERICIDENTIFIERLOOSE]}|${s[l.NONNUMERICIDENTIFIER]})`),h("PRERELEASE",`(?:-(${s[l.PRERELEASEIDENTIFIER]}(?:\\.${s[l.PRERELEASEIDENTIFIER]})*))`),h("PRERELEASELOOSE",`(?:-?(${s[l.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${s[l.PRERELEASEIDENTIFIERLOOSE]})*))`),h("BUILDIDENTIFIER",`${m}+`),h("BUILD",`(?:\\+(${s[l.BUILDIDENTIFIER]}(?:\\.${s[l.BUILDIDENTIFIER]})*))`),h("FULLPLAIN",`v?${s[l.MAINVERSION]}${s[l.PRERELEASE]}?${s[l.BUILD]}?`),h("FULL",`^${s[l.FULLPLAIN]}$`),h("LOOSEPLAIN",`[v=\\s]*${s[l.MAINVERSIONLOOSE]}${s[l.PRERELEASELOOSE]}?${s[l.BUILD]}?`),h("LOOSE",`^${s[l.LOOSEPLAIN]}$`),h("GTLT","((?:<|>)?=?)"),h("XRANGEIDENTIFIERLOOSE",`${s[l.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),h("XRANGEIDENTIFIER",`${s[l.NUMERICIDENTIFIER]}|x|X|\\*`),h("XRANGEPLAIN",`[v=\\s]*(${s[l.XRANGEIDENTIFIER]})(?:\\.(${s[l.XRANGEIDENTIFIER]})(?:\\.(${s[l.XRANGEIDENTIFIER]})(?:${s[l.PRERELEASE]})?${s[l.BUILD]}?)?)?`),h("XRANGEPLAINLOOSE",`[v=\\s]*(${s[l.XRANGEIDENTIFIERLOOSE]})(?:\\.(${s[l.XRANGEIDENTIFIERLOOSE]})(?:\\.(${s[l.XRANGEIDENTIFIERLOOSE]})(?:${s[l.PRERELEASELOOSE]})?${s[l.BUILD]}?)?)?`),h("XRANGE",`^${s[l.GTLT]}\\s*${s[l.XRANGEPLAIN]}$`),h("XRANGELOOSE",`^${s[l.GTLT]}\\s*${s[l.XRANGEPLAINLOOSE]}$`),h("COERCE",`(^|[^\\d])(\\d{1,${r}})(?:\\.(\\d{1,${r}}))?(?:\\.(\\d{1,${r}}))?(?:$|[^\\d])`),h("COERCERTL",s[l.COERCE],!0),h("LONETILDE","(?:~>?)"),h("TILDETRIM",`(\\s*)${s[l.LONETILDE]}\\s+`,!0),t.tildeTrimReplace="$1~",h("TILDE",`^${s[l.LONETILDE]}${s[l.XRANGEPLAIN]}$`),h("TILDELOOSE",`^${s[l.LONETILDE]}${s[l.XRANGEPLAINLOOSE]}$`),h("LONECARET","(?:\\^)"),h("CARETTRIM",`(\\s*)${s[l.LONECARET]}\\s+`,!0),t.caretTrimReplace="$1^",h("CARET",`^${s[l.LONECARET]}${s[l.XRANGEPLAIN]}$`),h("CARETLOOSE",`^${s[l.LONECARET]}${s[l.XRANGEPLAINLOOSE]}$`),h("COMPARATORLOOSE",`^${s[l.GTLT]}\\s*(${s[l.LOOSEPLAIN]})$|^$`),h("COMPARATOR",`^${s[l.GTLT]}\\s*(${s[l.FULLPLAIN]})$|^$`),h("COMPARATORTRIM",`(\\s*)${s[l.GTLT]}\\s*(${s[l.LOOSEPLAIN]}|${s[l.XRANGEPLAIN]})`,!0),t.comparatorTrimReplace="$1$2$3",h("HYPHENRANGE",`^\\s*(${s[l.XRANGEPLAIN]})\\s+-\\s+(${s[l.XRANGEPLAIN]})\\s*$`),h("HYPHENRANGELOOSE",`^\\s*(${s[l.XRANGEPLAINLOOSE]})\\s+-\\s+(${s[l.XRANGEPLAINLOOSE]})\\s*$`),h("STAR","(<|>)?=?\\s*\\*"),h("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),h("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")},7606:(e,t,a)=>{const r=a(6826);e.exports=(e,t,a)=>r(e,t,">",a)},2937:(e,t,a)=>{const r=a(6902);e.exports=(e,t,a)=>(e=new r(e,a),t=new r(t,a),e.intersects(t,a))},32:(e,t,a)=>{const r=a(6826);e.exports=(e,t,a)=>r(e,t,"<",a)},5775:(e,t,a)=>{const r=a(6376),i=a(6902);e.exports=(e,t,a)=>{let o=null,n=null,p=null;try{p=new i(t,a)}catch(e){return null}return e.forEach((e=>{p.test(e)&&(o&&-1!==n.compare(e)||(o=e,n=new r(o,a)))})),o}},1657:(e,t,a)=>{const r=a(6376),i=a(6902);e.exports=(e,t,a)=>{let o=null,n=null,p=null;try{p=new i(t,a)}catch(e){return null}return e.forEach((e=>{p.test(e)&&(o&&1!==n.compare(e)||(o=e,n=new r(o,a)))})),o}},5316:(e,t,a)=>{const r=a(6376),i=a(6902),o=a(1312);e.exports=(e,t)=>{e=new i(e,t);let a=new r("0.0.0");if(e.test(a))return a;if(a=new r("0.0.0-0"),e.test(a))return a;a=null;for(let t=0;t<e.set.length;++t){const i=e.set[t];let n=null;i.forEach((e=>{const t=new r(e.semver.version);switch(e.operator){case">":0===t.prerelease.length?t.patch++:t.prerelease.push(0),t.raw=t.format();case"":case">=":n&&!o(t,n)||(n=t);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${e.operator}`)}})),!n||a&&!o(a,n)||(a=n)}return a&&e.test(a)?a:null}},6826:(e,t,a)=>{const r=a(6376),i=a(2257),{ANY:o}=i,n=a(6902),p=a(5712),d=a(1312),s=a(1544),l=a(2056),c=a(5903);e.exports=(e,t,a,m)=>{let u,h,f,v,g;switch(e=new r(e,m),t=new n(t,m),a){case">":u=d,h=l,f=s,v=">",g=">=";break;case"<":u=s,h=c,f=d,v="<",g="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(p(e,t,m))return!1;for(let a=0;a<t.set.length;++a){const r=t.set[a];let n=null,p=null;if(r.forEach((e=>{e.semver===o&&(e=new i(">=0.0.0")),n=n||e,p=p||e,u(e.semver,n.semver,m)?n=e:f(e.semver,p.semver,m)&&(p=e)})),n.operator===v||n.operator===g)return!1;if((!p.operator||p.operator===v)&&h(e,p.semver))return!1;if(p.operator===g&&f(e,p.semver))return!1}return!0}},7908:(e,t,a)=>{const r=a(5712),i=a(6269);e.exports=(e,t,a)=>{const o=[];let n=null,p=null;const d=e.sort(((e,t)=>i(e,t,a)));for(const e of d)r(e,t,a)?(p=e,n||(n=e)):(p&&o.push([n,p]),p=null,n=null);n&&o.push([n,null]);const s=[];for(const[e,t]of o)e===t?s.push(e):t||e!==d[0]?t?e===d[0]?s.push(`<=${t}`):s.push(`${e} - ${t}`):s.push(`>=${e}`):s.push("*");const l=s.join(" || "),c="string"==typeof t.raw?t.raw:String(t);return l.length<c.length?l:t}},799:(e,t,a)=>{const r=a(6902),i=a(2257),{ANY:o}=i,n=a(5712),p=a(6269),d=[new i(">=0.0.0-0")],s=[new i(">=0.0.0")],l=(e,t,a)=>{if(e===t)return!0;if(1===e.length&&e[0].semver===o){if(1===t.length&&t[0].semver===o)return!0;e=a.includePrerelease?d:s}if(1===t.length&&t[0].semver===o){if(a.includePrerelease)return!0;t=s}const r=new Set;let i,l,u,h,f,v,g;for(const t of e)">"===t.operator||">="===t.operator?i=c(i,t,a):"<"===t.operator||"<="===t.operator?l=m(l,t,a):r.add(t.semver);if(r.size>1)return null;if(i&&l){if(u=p(i.semver,l.semver,a),u>0)return null;if(0===u&&(">="!==i.operator||"<="!==l.operator))return null}for(const e of r){if(i&&!n(e,String(i),a))return null;if(l&&!n(e,String(l),a))return null;for(const r of t)if(!n(e,String(r),a))return!1;return!0}let y=!(!l||a.includePrerelease||!l.semver.prerelease.length)&&l.semver,w=!(!i||a.includePrerelease||!i.semver.prerelease.length)&&i.semver;y&&1===y.prerelease.length&&"<"===l.operator&&0===y.prerelease[0]&&(y=!1);for(const e of t){if(g=g||">"===e.operator||">="===e.operator,v=v||"<"===e.operator||"<="===e.operator,i)if(w&&e.semver.prerelease&&e.semver.prerelease.length&&e.semver.major===w.major&&e.semver.minor===w.minor&&e.semver.patch===w.patch&&(w=!1),">"===e.operator||">="===e.operator){if(h=c(i,e,a),h===e&&h!==i)return!1}else if(">="===i.operator&&!n(i.semver,String(e),a))return!1;if(l)if(y&&e.semver.prerelease&&e.semver.prerelease.length&&e.semver.major===y.major&&e.semver.minor===y.minor&&e.semver.patch===y.patch&&(y=!1),"<"===e.operator||"<="===e.operator){if(f=m(l,e,a),f===e&&f!==l)return!1}else if("<="===l.operator&&!n(l.semver,String(e),a))return!1;if(!e.operator&&(l||i)&&0!==u)return!1}return!(i&&v&&!l&&0!==u||l&&g&&!i&&0!==u||w||y)},c=(e,t,a)=>{if(!e)return t;const r=p(e.semver,t.semver,a);return r>0?e:r<0||">"===t.operator&&">="===e.operator?t:e},m=(e,t,a)=>{if(!e)return t;const r=p(e.semver,t.semver,a);return r<0?e:r>0||"<"===t.operator&&"<="===e.operator?t:e};e.exports=(e,t,a={})=>{if(e===t)return!0;e=new r(e,a),t=new r(t,a);let i=!1;e:for(const r of e.set){for(const e of t.set){const t=l(r,e,a);if(i=i||null!==t,t)continue e}if(i)return!1}return!0}},1042:(e,t,a)=>{const r=a(6902);e.exports=(e,t)=>new r(e,t).set.map((e=>e.map((e=>e.value)).join(" ").trim().split(" ")))},9042:(e,t,a)=>{const r=a(6902);e.exports=(e,t)=>{try{return new r(e,t).range||"*"}catch(e){return null}}},2487:(e,t)=>{"use strict";t.qC=t.Qc=t.HV=t.e_=void 0;const a={allowMultipleFractions:!0},r=[{unit:"years",symbol:"Y"},{unit:"months",symbol:"M"},{unit:"weeks",symbol:"W"},{unit:"days",symbol:"D"},{unit:"hours",symbol:"H"},{unit:"minutes",symbol:"M"},{unit:"seconds",symbol:"S"}],i=(e,t)=>`((?<${e}>-?\\d*[\\.,]?\\d+)${t})?`,o=new RegExp(["(?<negative>-)?P",i("years","Y"),i("months","M"),i("weeks","W"),i("days","D"),"(T",i("hours","H"),i("minutes","M"),i("seconds","S"),")?"].join(""));function n(e){if(""!==e&&null!=e)return parseFloat(e.replace(",","."))}t.e_=new Error("Invalid duration"),t.HV=new Error("Multiple fractions specified"),t.Qc=function(e,i=a){const p=o.exec(e);if(!p||!p.groups)throw t.e_;let d=!0,s=0;const l={};for(const{unit:e}of r)if(p.groups[e]&&(d=!1,l[e]=n(p.groups[e]),!i.allowMultipleFractions&&!Number.isInteger(l[e])&&(s++,s>1)))throw t.HV;if(d)throw t.e_;const c=l;return p.groups.negative&&(c.negative=!0),c};const p=(e,t)=>{if(!e)return;let a=e.toString();const r=a.indexOf("e");if(r>-1){const t=parseInt(a.slice(r+2),10);a=e.toFixed(t+r-2)}return a+t};t.qC=function(e){return e.years||e.months||e.weeks||e.days||e.hours||e.minutes||e.seconds?[e.negative&&"-","P",p(e.years,"Y"),p(e.months,"M"),p(e.weeks,"W"),p(e.days,"D"),(e.hours||e.minutes||e.seconds)&&"T",p(e.hours,"H"),p(e.minutes,"M"),p(e.seconds,"S")].filter(Boolean).join(""):"PT0S"}},4742:(e,t,a)=>{"use strict";var r=a(5477),i=a(2020),o={TRANSITIONAL:0,NONTRANSITIONAL:1};function n(e){return e.split("\0").map((function(e){return e.normalize("NFC")})).join("\0")}function p(e){for(var t=0,a=i.length-1;t<=a;){var r=Math.floor((t+a)/2),o=i[r];if(o[0][0]<=e&&o[0][1]>=e)return o;o[0][0]>e?a=r-1:t=r+1}return null}var d=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function s(e){return e.replace(d,"_").length}var l=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function c(e,t){"xn--"===e.substr(0,4)&&(e=r.toUnicode(e),o.NONTRANSITIONAL);var a=!1;(n(e)!==e||"-"===e[3]&&"-"===e[4]||"-"===e[0]||"-"===e[e.length-1]||-1!==e.indexOf(".")||0===e.search(l))&&(a=!0);for(var i=s(e),d=0;d<i;++d){var c=p(e.codePointAt(d));if(m===o.TRANSITIONAL&&"valid"!==c[1]||m===o.NONTRANSITIONAL&&"valid"!==c[1]&&"deviation"!==c[1]){a=!0;break}}return{label:e,error:a}}function m(e,t,a){var r=function(e,t,a){for(var r=!1,i="",n=s(e),d=0;d<n;++d){var l=e.codePointAt(d),c=p(l);switch(c[1]){case"disallowed":r=!0,i+=String.fromCodePoint(l);break;case"ignored":break;case"mapped":i+=String.fromCodePoint.apply(String,c[2]);break;case"deviation":a===o.TRANSITIONAL?i+=String.fromCodePoint.apply(String,c[2]):i+=String.fromCodePoint(l);break;case"valid":i+=String.fromCodePoint(l);break;case"disallowed_STD3_mapped":t?(r=!0,i+=String.fromCodePoint(l)):i+=String.fromCodePoint.apply(String,c[2]);break;case"disallowed_STD3_valid":t&&(r=!0),i+=String.fromCodePoint(l)}}return{string:i,error:r}}(e,t,a);r.string=n(r.string);for(var i=r.string.split("."),d=0;d<i.length;++d)try{var l=c(i[d]);i[d]=l.label,r.error=r.error||l.error}catch(e){r.error=!0}return{string:i.join("."),error:r.error}}e.exports.toASCII=function(e,t,a,i){var o=m(e,t,a),n=o.string.split(".");if(n=n.map((function(e){try{return r.toASCII(e)}catch(t){return o.error=!0,e}})),i){var p=n.slice(0,n.length-1).join(".").length;(p.length>253||0===p.length)&&(o.error=!0);for(var d=0;d<n.length;++d)if(n.length>63||0===n.length){o.error=!0;break}}return o.error?null:n.join(".")},e.exports.toUnicode=function(e,t){var a=m(e,t,o.NONTRANSITIONAL);return{domain:a.string,error:a.error}},e.exports.PROCESSING_OPTIONS=o},366:function(e,t,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const i=r(a(8924)),o=a(4585),n=r(a(7147)),p=r(a(1017)),d=a(3705),s=a(9558),l=e=>n.default.readdirSync(e,{withFileTypes:!0}).map((t=>{const a=p.default.join(e,t.name);return t.isDirectory()?l(a):a})).flat(),c=e=>([" ","."].forEach((t=>{e.startsWith(t)&&(e=e.substring(1,e.length)),e.endsWith(t)&&(e=e.substring(0,e.length-1))})),e),m=async(e,t)=>{try{return await e.api(`/me/drive/root:/${t}`).get()}catch(e){return}},u=async(e,t,a,r,i,o)=>{let s=0;for(;;){const r=n.default.readFileSync(t),i={fileName:p.default.basename(t),conflictBehavior:"replace",rangeSize:16384e3,uploadEventHandlers:{progress:(e,t)=>{console.log(`uploading range: ${null==e?void 0:e.minValue} - ${null==e?void 0:e.maxValue}`)},extraCallbackParam:"none"},path:p.default.dirname(a)},l=await d.OneDriveLargeFileUploadTask.create(e,r,i),c=(await l.upload()).responseBody;if(c.size===o)return c;if(s>25)return;s++}};console.log("starting...");const h=process.argv;h.length<=2&&(console.log("path of the folder is missing"),process.exit()),h.forEach(((e,t)=>{t>2&&(n.default.existsSync(e)||(console.log("invalid path provided"),process.exit()))})),(async(e,t)=>{const a=d.Client.init({authProvider:new o.BaseBearerTokenAuthenticationProvider(new i.default({accountName:"k",clientId:s.clientId,scopes:["Files.Read","Files.Read.All","Files.Read.Selected","Files.ReadWrite","Files.ReadWrite.All","Files.ReadWrite.AppFolder","Files.ReadWrite.Selected","User.Read","offline_access","openid","profile","email"],tenantId:s.tenantId,tokenFileName:"./token.json",authority:s.authority}))}),r=await a.api("/me/drive").get();r||console.log("could not fetch the drive for this account"),null==r||r.id;for(const r of e){let e=r;const i=n.default.statSync(e);if(0==i.size){console.log(`skipping the file with zero length: ${e}`);continue}const o=p.default.basename(e),d=p.default.dirname(e);if(o.indexOf(".nomedia")>-1)continue;const s=c(o);if(o!=s){let t=s;const a=p.default.extname(t),r=1;for(;n.default.existsSync(p.default.join(d,t));)t=`${t.replace(a,"")}-${r}${a}`;n.default.renameSync(e,p.default.join(d,t)),e=p.default.join(d,t)}let l=e.replace(t.path,"").replace("\\","/");l=l.startsWith("/")?`${t.directoryName}${l}`:`${t.directoryName}/${l}`,l.endsWith("/")&&(l=l.slice(0,-1)),console.log(`processing ${l}`);const h=await m(a,l);h&&h.size===i.size?console.log(`skipping as file already uploaded: ${l}`):(console.log(`uploading the file: ${l}`),await u(a,e,l,i.mtime,i.birthtime,i.size)?console.log(`the following file was uploade: ${e}`):(console.log(`the following file was not uploaded: ${e}`),n.default.appendFileSync("notuploaded.txt",`${e}\n`)))}})(l(h[2]),{path:h[2],directoryName:p.default.basename(h[2])}).then((()=>{console.log("done")}))},8924:function(e,t,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const i=a(8048),o=a(4585),n=r(a(8748));t.default=class{constructor(e){this.options=e,this.getAuthorizationToken=e=>this.generateTokenAsync(),this.getAllowedHostsValidator=()=>new o.AllowedHostsValidator,this.generateTokenAsync=async()=>{const e={auth:{clientId:this.options.clientId,authority:`${this.options.authority}/${this.options.tenantId}`},cache:{claimsBasedCachingEnabled:!0,cachePlugin:new n.default(this.options.tokenFileName)},system:{loggerOptions:{loggerCallback(e,t,a){console.log(`${t}`)},piiLoggingEnabled:!1,logLevel:i.LogLevel.Error}}},t=new i.PublicClientApplication(e),a=await t.getAllAccounts();let r;if(a&&0!=a.length){const e={scopes:this.options.scopes,account:a[0]};r=await t.acquireTokenSilent(e)}else{const e={scopes:this.options.scopes,deviceCodeCallback:e=>{console.log(e.message)}};r=await t.acquireTokenByDeviceCode(e)}return r.accessToken}}}},8748:function(e,t,a){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,a,r){void 0===r&&(r=a);var i=Object.getOwnPropertyDescriptor(t,a);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[a]}}),Object.defineProperty(e,r,i)}:function(e,t,a,r){void 0===r&&(r=a),e[r]=t[a]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)"default"!==a&&Object.prototype.hasOwnProperty.call(e,a)&&r(t,e,a);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});const n=o(a(7147));t.default=class{constructor(e){this.cacheLocation=e,this.beforeCacheAccess=e=>new Promise(((t,a)=>{n.existsSync(this.cacheLocation)?n.readFile(this.cacheLocation,"utf-8",((r,i)=>{r?a():(e.tokenCache.deserialize(i),t())})):n.writeFile(this.cacheLocation,e.tokenCache.serialize(),(e=>{e&&a()}))})),this.afterCacheAccess=e=>new Promise(((t,a)=>{e.cacheHasChanged?n.writeFile(this.cacheLocation,e.tokenCache.serialize(),(e=>{e&&a(e),t()})):t()}))}}},7882:function(){!function(e){"use strict";var t=/[!'()]/g,a={"":",","+":",","#":",","?":"&"},r=/[$-/?[-^{|}]/g,i=/\{([#&+./;?]?)((?:[-\w%.]+(\*|:\d+)?(?:,|(?=})))+)\}/g,o=RegExp(i.source+"|.[^{]*?","g");function n(a){return e.encoder(a).replace(t,escape)}function p(e){return null!=e}function d(e,t,a){return(e=e.map(t).filter(p)).length&&e.join(a)}function s(e,t){return e.replace(i,(function(e,r,i){var o=a[r]||r,p=";"==o||"&"==o,s=r&&","==o?encodeURI:n,l=d(i.split(","),(function(e){var a=e.split(/[*:]/),r=a[0],i=t[r];if(null!=i){if("object"==typeof i){if(a=r!=e,Array.isArray(i)?i=d(i,s,a?p?o+r+"=":o:","):(i=d(Object.keys(i),(function(e){return s(e)+(a?"=":",")+s(i[e])}),a&&(p||"/"==o)?o:","),a&&(p=0)),!i)return}else i=s(a[1]?i.slice(0,a[1]):i);return p?r+(i||"&"==o?"="+i:i):i}}),o);return l||""===l?"+"!=r?r+l:l:""}))}e.encoder=encodeURIComponent,e.decoder=decodeURIComponent,e.expand=s,e.Template=function(t){var i=this,n=0,p={},d="",l="^"+t.replace(o,(function(e,t,r){if(!r)return u(e);var i=a[t]||t,o=";"==i||"&"==i;return r.split(",").map((function(e,a){var r=e.split(/[*:]/),s=r[0],l=(p[s]||"(")+".*?)";return n++,r[1]&&(l="((?:%..|.){1,"+r[1]+"})",p[s]="(\\"+n),d+="t=($["+n+"]||'').split('"+(r?o?i+s+"=":i:",")+"').map(d);",d+='o["'+s+'"]='+(""===r[1]?"t;":"t.length>1?t:t[0];"),l=u(0===a?"+"===t?"":t:i)+(o?u(s)+"(?:="+l+")?":"&"==i?u(s+"=")+l:l),""===r[1]?"(?:"+l+")?":l})).join("")}))+"$",c=RegExp(l),m=Function("$,d","var t,o={};"+d+"return o");function u(e){return e.replace(r,"\\$&")}i.template=t,i.match=function(t){var a=c.exec(t);return a&&m(a,e.decoder)},i.expand=s.bind(i,t)}}(this.o||(this.o={}))},2259:(e,t,a)=>{"use strict";a.d(t,{Z:()=>c});var r=a(6113),i=a.n(r);const o=new Uint8Array(256);let n=o.length;function p(){return n>o.length-16&&(i().randomFillSync(o),n=0),o.slice(n,n+=16)}const d=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,s=[];for(let e=0;e<256;++e)s.push((e+256).toString(16).substr(1));const l=function(e,t=0){const a=(s[e[t+0]]+s[e[t+1]]+s[e[t+2]]+s[e[t+3]]+"-"+s[e[t+4]]+s[e[t+5]]+"-"+s[e[t+6]]+s[e[t+7]]+"-"+s[e[t+8]]+s[e[t+9]]+"-"+s[e[t+10]]+s[e[t+11]]+s[e[t+12]]+s[e[t+13]]+s[e[t+14]]+s[e[t+15]]).toLowerCase();if(!function(e){return"string"==typeof e&&d.test(e)}(a))throw TypeError("Stringified UUID is invalid");return a},c=function(e,t,a){const r=(e=e||{}).random||(e.rng||p)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t){a=a||0;for(let e=0;e<16;++e)t[a+e]=r[e];return t}return l(r)}},993:e=>{"use strict";var t={};function a(e){return e<0?-1:1}function r(e,t){t.unsigned||--e;const r=t.unsigned?0:-Math.pow(2,e),i=Math.pow(2,e)-1,o=t.moduloBitLength?Math.pow(2,t.moduloBitLength):Math.pow(2,e),n=t.moduloBitLength?Math.pow(2,t.moduloBitLength-1):Math.pow(2,e-1);return function(e,p){p||(p={});let d=+e;if(p.enforceRange){if(!Number.isFinite(d))throw new TypeError("Argument is not a finite number");if(d=a(d)*Math.floor(Math.abs(d)),d<r||d>i)throw new TypeError("Argument is not in byte range");return d}if(!isNaN(d)&&p.clamp)return d=function(e){return e%1==.5&&0==(1&e)?Math.floor(e):Math.round(e)}(d),d<r&&(d=r),d>i&&(d=i),d;if(!Number.isFinite(d)||0===d)return 0;if(d=a(d)*Math.floor(Math.abs(d)),d%=o,!t.unsigned&&d>=n)return d-o;if(t.unsigned)if(d<0)d+=o;else if(-0===d)return 0;return d}}e.exports=t,t.void=function(){},t.boolean=function(e){return!!e},t.byte=r(8,{unsigned:!1}),t.octet=r(8,{unsigned:!0}),t.short=r(16,{unsigned:!1}),t["unsigned short"]=r(16,{unsigned:!0}),t.long=r(32,{unsigned:!1}),t["unsigned long"]=r(32,{unsigned:!0}),t["long long"]=r(32,{unsigned:!1,moduloBitLength:64}),t["unsigned long long"]=r(32,{unsigned:!0,moduloBitLength:64}),t.double=function(e){const t=+e;if(!Number.isFinite(t))throw new TypeError("Argument is not a finite floating-point value");return t},t["unrestricted double"]=function(e){const t=+e;if(isNaN(t))throw new TypeError("Argument is NaN");return t},t.float=t.double,t["unrestricted float"]=t["unrestricted double"],t.DOMString=function(e,t){return t||(t={}),t.treatNullAsEmptyString&&null===e?"":String(e)},t.ByteString=function(e,t){const a=String(e);let r;for(let e=0;void 0!==(r=a.codePointAt(e));++e)if(r>255)throw new TypeError("Argument is not a valid bytestring");return a},t.USVString=function(e){const t=String(e),a=t.length,r=[];for(let e=0;e<a;++e){const i=t.charCodeAt(e);if(i<55296||i>57343)r.push(String.fromCodePoint(i));else if(56320<=i&&i<=57343)r.push(String.fromCodePoint(65533));else if(e===a-1)r.push(String.fromCodePoint(65533));else{const a=t.charCodeAt(e+1);if(56320<=a&&a<=57343){const t=1023&i,o=1023&a;r.push(String.fromCodePoint(65536+1024*t+o)),++e}else r.push(String.fromCodePoint(65533))}}return r.join("")},t.Date=function(e,t){if(!(e instanceof Date))throw new TypeError("Argument is not a Date object");if(!isNaN(e))return e},t.RegExp=function(e,t){return e instanceof RegExp||(e=new RegExp(e)),e}},9718:(e,t,a)=>{"use strict";const r=a(5341);t.implementation=class{constructor(e){const t=e[0],a=e[1];let i=null;if(void 0!==a&&(i=r.basicURLParse(a),"failure"===i))throw new TypeError("Invalid base URL");const o=r.basicURLParse(t,{baseURL:i});if("failure"===o)throw new TypeError("Invalid URL");this._url=o}get href(){return r.serializeURL(this._url)}set href(e){const t=r.basicURLParse(e);if("failure"===t)throw new TypeError("Invalid URL");this._url=t}get origin(){return r.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){r.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){r.cannotHaveAUsernamePasswordPort(this._url)||r.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){r.cannotHaveAUsernamePasswordPort(this._url)||r.setThePassword(this._url,e)}get host(){const e=this._url;return null===e.host?"":null===e.port?r.serializeHost(e.host):r.serializeHost(e.host)+":"+r.serializeInteger(e.port)}set host(e){this._url.cannotBeABaseURL||r.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){return null===this._url.host?"":r.serializeHost(this._url.host)}set hostname(e){this._url.cannotBeABaseURL||r.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){return null===this._url.port?"":r.serializeInteger(this._url.port)}set port(e){r.cannotHaveAUsernamePasswordPort(this._url)||(""===e?this._url.port=null:r.basicURLParse(e,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:0===this._url.path.length?"":"/"+this._url.path.join("/")}set pathname(e){this._url.cannotBeABaseURL||(this._url.path=[],r.basicURLParse(e,{url:this._url,stateOverride:"path start"}))}get search(){return null===this._url.query||""===this._url.query?"":"?"+this._url.query}set search(e){const t=this._url;if(""===e)return void(t.query=null);const a="?"===e[0]?e.substring(1):e;t.query="",r.basicURLParse(a,{url:t,stateOverride:"query"})}get hash(){return null===this._url.fragment||""===this._url.fragment?"":"#"+this._url.fragment}set hash(e){if(""===e)return void(this._url.fragment=null);const t="#"===e[0]?e.substring(1):e;this._url.fragment="",r.basicURLParse(t,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},4328:(e,t,a)=>{"use strict";const r=a(993),i=a(9581),o=a(9718),n=i.implSymbol;function p(t){if(!this||this[n]||!(this instanceof p))throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");const a=[];for(let e=0;e<arguments.length&&e<2;++e)a[e]=arguments[e];a[0]=r.USVString(a[0]),void 0!==a[1]&&(a[1]=r.USVString(a[1])),e.exports.setup(this,a)}p.prototype.toJSON=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");const t=[];for(let e=0;e<arguments.length&&e<0;++e)t[e]=arguments[e];return this[n].toJSON.apply(this[n],t)},Object.defineProperty(p.prototype,"href",{get(){return this[n].href},set(e){e=r.USVString(e),this[n].href=e},enumerable:!0,configurable:!0}),p.prototype.toString=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");return this.href},Object.defineProperty(p.prototype,"origin",{get(){return this[n].origin},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"protocol",{get(){return this[n].protocol},set(e){e=r.USVString(e),this[n].protocol=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"username",{get(){return this[n].username},set(e){e=r.USVString(e),this[n].username=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"password",{get(){return this[n].password},set(e){e=r.USVString(e),this[n].password=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"host",{get(){return this[n].host},set(e){e=r.USVString(e),this[n].host=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"hostname",{get(){return this[n].hostname},set(e){e=r.USVString(e),this[n].hostname=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"port",{get(){return this[n].port},set(e){e=r.USVString(e),this[n].port=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"pathname",{get(){return this[n].pathname},set(e){e=r.USVString(e),this[n].pathname=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"search",{get(){return this[n].search},set(e){e=r.USVString(e),this[n].search=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"hash",{get(){return this[n].hash},set(e){e=r.USVString(e),this[n].hash=e},enumerable:!0,configurable:!0}),e.exports={is:e=>!!e&&e[n]instanceof o.implementation,create(e,t){let a=Object.create(p.prototype);return this.setup(a,e,t),a},setup(e,t,a){a||(a={}),a.wrapper=e,e[n]=new o.implementation(t,a),e[n][i.wrapperSymbol]=e},interface:p,expose:{Window:{URL:p},Worker:{URL:p}}}},7347:(e,t,a)=>{"use strict";t.URL=a(4328).interface,a(5341).serializeURL,a(5341).serializeURLOrigin,a(5341).basicURLParse,a(5341).setTheUsername,a(5341).setThePassword,a(5341).serializeHost,a(5341).serializeInteger,a(5341).parseURL},5341:(e,t,a)=>{"use strict";const r=a(5477),i=a(4742),o={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},n=Symbol("failure");function p(e){return r.ucs2.decode(e).length}function d(e,t){const a=e[t];return isNaN(a)?void 0:String.fromCodePoint(a)}function s(e){return e>=48&&e<=57}function l(e){return e>=65&&e<=90||e>=97&&e<=122}function c(e){return s(e)||e>=65&&e<=70||e>=97&&e<=102}function m(e){return"."===e||"%2e"===e.toLowerCase()}function u(e){return 2===e.length&&l(e.codePointAt(0))&&(":"===e[1]||"|"===e[1])}function h(e){return void 0!==o[e]}function f(e){return h(e.scheme)}function v(e){let t=e.toString(16).toUpperCase();return 1===t.length&&(t="0"+t),"%"+t}function g(e){return e<=31||e>126}const y=new Set([32,34,35,60,62,63,96,123,125]);function w(e){return g(e)||y.has(e)}const _=new Set([47,58,59,61,64,91,92,93,94,124]);function T(e){return w(e)||_.has(e)}function E(e,t){const a=String.fromCodePoint(e);return t(e)?function(e){const t=new Buffer(e);let a="";for(let e=0;e<t.length;++e)a+=v(t[e]);return a}(a):a}function S(e){let t=10;return e.length>=2&&"0"===e.charAt(0)&&"x"===e.charAt(1).toLowerCase()?(e=e.substring(2),t=16):e.length>=2&&"0"===e.charAt(0)&&(e=e.substring(1),t=8),""===e?0:(10===t?/[^0-9]/:16===t?/[^0-9A-Fa-f]/:/[^0-7]/).test(e)?n:parseInt(e,t)}function C(e,t){if("["===e[0])return"]"!==e[e.length-1]?n:function(e){const t=[0,0,0,0,0,0,0,0];let a=0,i=null,o=0;if(58===(e=r.ucs2.decode(e))[o]){if(58!==e[o+1])return n;o+=2,++a,i=a}for(;o<e.length;){if(8===a)return n;if(58===e[o]){if(null!==i)return n;++o,++a,i=a;continue}let r=0,p=0;for(;p<4&&c(e[o]);)r=16*r+parseInt(d(e,o),16),++o,++p;if(46===e[o]){if(0===p)return n;if(o-=p,a>6)return n;let r=0;for(;void 0!==e[o];){let i=null;if(r>0){if(!(46===e[o]&&r<4))return n;++o}if(!s(e[o]))return n;for(;s(e[o]);){const t=parseInt(d(e,o));if(null===i)i=t;else{if(0===i)return n;i=10*i+t}if(i>255)return n;++o}t[a]=256*t[a]+i,++r,2!==r&&4!==r||++a}if(4!==r)return n;break}if(58===e[o]){if(++o,void 0===e[o])return n}else if(void 0!==e[o])return n;t[a]=r,++a}if(null!==i){let e=a-i;for(a=7;0!==a&&e>0;){const r=t[i+e-1];t[i+e-1]=t[a],t[a]=r,--a,--e}}else if(null===i&&8!==a)return n;return t}(e.substring(1,e.length-1));if(!t)return function(e){if(-1!==e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/))return n;let t="";const a=r.ucs2.decode(e);for(let e=0;e<a.length;++e)t+=E(a[e],g);return t}(e);const a=function(e){const t=new Buffer(e),a=[];for(let e=0;e<t.length;++e)37!==t[e]?a.push(t[e]):37===t[e]&&c(t[e+1])&&c(t[e+2])?(a.push(parseInt(t.slice(e+1,e+3).toString(),16)),e+=2):a.push(t[e]);return new Buffer(a).toString()}(e),o=i.toASCII(a,!1,i.PROCESSING_OPTIONS.NONTRANSITIONAL,!1);if(null===o)return n;if(-1!==o.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/))return n;const p=function(e){const t=e.split(".");if(""===t[t.length-1]&&t.length>1&&t.pop(),t.length>4)return e;const a=[];for(const r of t){if(""===r)return e;const t=S(r);if(t===n)return e;a.push(t)}for(let e=0;e<a.length-1;++e)if(a[e]>255)return n;if(a[a.length-1]>=Math.pow(256,5-a.length))return n;let r=a.pop(),i=0;for(const e of a)r+=e*Math.pow(256,3-i),++i;return r}(o);return"number"==typeof p||p===n?p:o}function b(e){return"number"==typeof e?function(e){let t="",a=e;for(let e=1;e<=4;++e)t=String(a%256)+t,4!==e&&(t="."+t),a=Math.floor(a/256);return t}(e):e instanceof Array?"["+function(e){let t="";const a=function(e){let t=null,a=1,r=null,i=0;for(let o=0;o<e.length;++o)0!==e[o]?(i>a&&(t=r,a=i),r=null,i=0):(null===r&&(r=o),++i);return i>a&&(t=r,a=i),{idx:t,len:a}}(e).idx;let r=!1;for(let i=0;i<=7;++i)r&&0===e[i]||(r&&(r=!1),a!==i?(t+=e[i].toString(16),7!==i&&(t+=":")):(t+=0===i?"::":":",r=!0));return t}(e)+"]":e}function A(e){const t=e.path;var a;0!==t.length&&("file"===e.scheme&&1===t.length&&(a=t[0],/^[A-Za-z]:$/.test(a))||t.pop())}function R(e){return""!==e.username||""!==e.password}function I(e,t,a,i,o){if(this.pointer=0,this.input=e,this.base=t||null,this.encodingOverride=a||"utf-8",this.stateOverride=o,this.url=i,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};const e=function(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}(this.input);e!==this.input&&(this.parseError=!0),this.input=e}const p=function(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}(this.input);for(p!==this.input&&(this.parseError=!0),this.input=p,this.state=o||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=r.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer],t=isNaN(e)?void 0:String.fromCodePoint(e),a=this["parse "+this.state](e,t);if(!a)break;if(a===n){this.failure=!0;break}}}I.prototype["parse scheme start"]=function(e,t){if(l(e))this.buffer+=t.toLowerCase(),this.state="scheme";else{if(this.stateOverride)return this.parseError=!0,n;this.state="no scheme",--this.pointer}return!0},I.prototype["parse scheme"]=function(e,t){if(function(e){return l(e)||s(e)}(e)||43===e||45===e||46===e)this.buffer+=t.toLowerCase();else if(58===e){if(this.stateOverride){if(f(this.url)&&!h(this.buffer))return!1;if(!f(this.url)&&h(this.buffer))return!1;if((R(this.url)||null!==this.url.port)&&"file"===this.buffer)return!1;if("file"===this.url.scheme&&(""===this.url.host||null===this.url.host))return!1}if(this.url.scheme=this.buffer,this.buffer="",this.stateOverride)return!1;"file"===this.url.scheme?(47===this.input[this.pointer+1]&&47===this.input[this.pointer+2]||(this.parseError=!0),this.state="file"):f(this.url)&&null!==this.base&&this.base.scheme===this.url.scheme?this.state="special relative or authority":f(this.url)?this.state="special authority slashes":47===this.input[this.pointer+1]?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else{if(this.stateOverride)return this.parseError=!0,n;this.buffer="",this.state="no scheme",this.pointer=-1}return!0},I.prototype["parse no scheme"]=function(e){return null===this.base||this.base.cannotBeABaseURL&&35!==e?n:(this.base.cannotBeABaseURL&&35===e?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):"file"===this.base.scheme?(this.state="file",--this.pointer):(this.state="relative",--this.pointer),!0)},I.prototype["parse special relative or authority"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0},I.prototype["parse path or authority"]=function(e){return 47===e?this.state="authority":(this.state="path",--this.pointer),!0},I.prototype["parse relative"]=function(e){return this.url.scheme=this.base.scheme,isNaN(e)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):47===e?this.state="relative slash":63===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):f(this.url)&&92===e?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0},I.prototype["parse relative slash"]=function(e){return!f(this.url)||47!==e&&92!==e?47===e?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer):(92===e&&(this.parseError=!0),this.state="special authority ignore slashes"),!0},I.prototype["parse special authority slashes"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0},I.prototype["parse special authority ignore slashes"]=function(e){return 47!==e&&92!==e?(this.state="authority",--this.pointer):this.parseError=!0,!0},I.prototype["parse authority"]=function(e,t){if(64===e){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;const e=p(this.buffer);for(let t=0;t<e;++t){const e=this.buffer.codePointAt(t);if(58===e&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}const a=E(e,T);this.passwordTokenSeenFlag?this.url.password+=a:this.url.username+=a}this.buffer=""}else if(isNaN(e)||47===e||63===e||35===e||f(this.url)&&92===e){if(this.atFlag&&""===this.buffer)return this.parseError=!0,n;this.pointer-=p(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=t;return!0},I.prototype["parse hostname"]=I.prototype["parse host"]=function(e,t){if(this.stateOverride&&"file"===this.url.scheme)--this.pointer,this.state="file host";else if(58!==e||this.arrFlag)if(isNaN(e)||47===e||63===e||35===e||f(this.url)&&92===e){if(--this.pointer,f(this.url)&&""===this.buffer)return this.parseError=!0,n;if(this.stateOverride&&""===this.buffer&&(R(this.url)||null!==this.url.port))return this.parseError=!0,!1;const e=C(this.buffer,f(this.url));if(e===n)return n;if(this.url.host=e,this.buffer="",this.state="path start",this.stateOverride)return!1}else 91===e?this.arrFlag=!0:93===e&&(this.arrFlag=!1),this.buffer+=t;else{if(""===this.buffer)return this.parseError=!0,n;const e=C(this.buffer,f(this.url));if(e===n)return n;if(this.url.host=e,this.buffer="",this.state="port","hostname"===this.stateOverride)return!1}return!0},I.prototype["parse port"]=function(e,t){if(s(e))this.buffer+=t;else{if(!(isNaN(e)||47===e||63===e||35===e||f(this.url)&&92===e||this.stateOverride))return this.parseError=!0,n;if(""!==this.buffer){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1)return this.parseError=!0,n;this.url.port=e===(a=this.url.scheme,o[a])?null:e,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}var a;return!0};const N=new Set([47,92,63,35]);I.prototype["parse file"]=function(e){var t,a;return this.url.scheme="file",47===e||92===e?(92===e&&(this.parseError=!0),this.state="file slash"):null!==this.base&&"file"===this.base.scheme?isNaN(e)?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query):63===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):(this.input.length-this.pointer-1==0||(t=e,a=this.input[this.pointer+1],!l(t)||58!==a&&124!==a)||this.input.length-this.pointer-1>=2&&!N.has(this.input[this.pointer+2])?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),A(this.url)):this.parseError=!0,this.state="path",--this.pointer):(this.state="path",--this.pointer),!0},I.prototype["parse file slash"]=function(e){var t;return 47===e||92===e?(92===e&&(this.parseError=!0),this.state="file host"):(null!==this.base&&"file"===this.base.scheme&&(2===(t=this.base.path[0]).length&&l(t.codePointAt(0))&&":"===t[1]?this.url.path.push(this.base.path[0]):this.url.host=this.base.host),this.state="path",--this.pointer),!0},I.prototype["parse file host"]=function(e,t){if(isNaN(e)||47===e||92===e||63===e||35===e)if(--this.pointer,!this.stateOverride&&u(this.buffer))this.parseError=!0,this.state="path";else if(""===this.buffer){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let e=C(this.buffer,f(this.url));if(e===n)return n;if("localhost"===e&&(e=""),this.url.host=e,this.stateOverride)return!1;this.buffer="",this.state="path start"}else this.buffer+=t;return!0},I.prototype["parse path start"]=function(e){return f(this.url)?(92===e&&(this.parseError=!0),this.state="path",47!==e&&92!==e&&--this.pointer):this.stateOverride||63!==e?this.stateOverride||35!==e?void 0!==e&&(this.state="path",47!==e&&--this.pointer):(this.url.fragment="",this.state="fragment"):(this.url.query="",this.state="query"),!0},I.prototype["parse path"]=function(e){if(isNaN(e)||47===e||f(this.url)&&92===e||!this.stateOverride&&(63===e||35===e)){if(f(this.url)&&92===e&&(this.parseError=!0),".."===(t=(t=this.buffer).toLowerCase())||"%2e."===t||".%2e"===t||"%2e%2e"===t?(A(this.url),47===e||f(this.url)&&92===e||this.url.path.push("")):!m(this.buffer)||47===e||f(this.url)&&92===e?m(this.buffer)||("file"===this.url.scheme&&0===this.url.path.length&&u(this.buffer)&&(""!==this.url.host&&null!==this.url.host&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)):this.url.path.push(""),this.buffer="","file"===this.url.scheme&&(void 0===e||63===e||35===e))for(;this.url.path.length>1&&""===this.url.path[0];)this.parseError=!0,this.url.path.shift();63===e&&(this.url.query="",this.state="query"),35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||c(this.input[this.pointer+1])&&c(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=E(e,w);var t;return!0},I.prototype["parse cannot-be-a-base-URL path"]=function(e){return 63===e?(this.url.query="",this.state="query"):35===e?(this.url.fragment="",this.state="fragment"):(isNaN(e)||37===e||(this.parseError=!0),37!==e||c(this.input[this.pointer+1])&&c(this.input[this.pointer+2])||(this.parseError=!0),isNaN(e)||(this.url.path[0]=this.url.path[0]+E(e,g))),!0},I.prototype["parse query"]=function(e,t){if(isNaN(e)||!this.stateOverride&&35===e){f(this.url)&&"ws"!==this.url.scheme&&"wss"!==this.url.scheme||(this.encodingOverride="utf-8");const t=new Buffer(this.buffer);for(let e=0;e<t.length;++e)t[e]<33||t[e]>126||34===t[e]||35===t[e]||60===t[e]||62===t[e]?this.url.query+=v(t[e]):this.url.query+=String.fromCodePoint(t[e]);this.buffer="",35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||c(this.input[this.pointer+1])&&c(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=t;return!0},I.prototype["parse fragment"]=function(e){return isNaN(e)||(0===e?this.parseError=!0:(37!==e||c(this.input[this.pointer+1])&&c(this.input[this.pointer+2])||(this.parseError=!0),this.url.fragment+=E(e,g))),!0},e.exports.serializeURL=function(e,t){let a=e.scheme+":";if(null!==e.host?(a+="//",""===e.username&&""===e.password||(a+=e.username,""!==e.password&&(a+=":"+e.password),a+="@"),a+=b(e.host),null!==e.port&&(a+=":"+e.port)):null===e.host&&"file"===e.scheme&&(a+="//"),e.cannotBeABaseURL)a+=e.path[0];else for(const t of e.path)a+="/"+t;return null!==e.query&&(a+="?"+e.query),t||null===e.fragment||(a+="#"+e.fragment),a},e.exports.serializeURLOrigin=function(t){switch(t.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(t.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return function(e){let t=e.scheme+"://";return t+=b(e.host),null!==e.port&&(t+=":"+e.port),t}({scheme:t.scheme,host:t.host,port:t.port});case"file":return"file://";default:return"null"}},e.exports.basicURLParse=function(e,t){void 0===t&&(t={});const a=new I(e,t.baseURL,t.encodingOverride,t.url,t.stateOverride);return a.failure?"failure":a.url},e.exports.setTheUsername=function(e,t){e.username="";const a=r.ucs2.decode(t);for(let t=0;t<a.length;++t)e.username+=E(a[t],T)},e.exports.setThePassword=function(e,t){e.password="";const a=r.ucs2.decode(t);for(let t=0;t<a.length;++t)e.password+=E(a[t],T)},e.exports.serializeHost=b,e.exports.cannotHaveAUsernamePasswordPort=function(e){return null===e.host||""===e.host||e.cannotBeABaseURL||"file"===e.scheme},e.exports.serializeInteger=function(e){return String(e)},e.exports.parseURL=function(t,a){return void 0===a&&(a={}),e.exports.basicURLParse(t,{baseURL:a.baseURL,encodingOverride:a.encodingOverride})}},9581:e=>{"use strict";e.exports.mixin=function(e,t){const a=Object.getOwnPropertyNames(t);for(let r=0;r<a.length;++r)Object.defineProperty(e,a[r],Object.getOwnPropertyDescriptor(t,a[r]))},e.exports.wrapperSymbol=Symbol("wrapper"),e.exports.implSymbol=Symbol("impl"),e.exports.wrapperForImpl=function(t){return t[e.exports.wrapperSymbol]},e.exports.implForWrapper=function(t){return t[e.exports.implSymbol]}},9602:e=>{"use strict";e.exports=function(e){e.prototype[Symbol.iterator]=function*(){for(let e=this.head;e;e=e.next)yield e.value}}},4411:(e,t,a)=>{"use strict";function r(e){var t=this;if(t instanceof r||(t=new r),t.tail=null,t.head=null,t.length=0,e&&"function"==typeof e.forEach)e.forEach((function(e){t.push(e)}));else if(arguments.length>0)for(var a=0,i=arguments.length;a<i;a++)t.push(arguments[a]);return t}function i(e,t,a,r){if(!(this instanceof i))return new i(e,t,a,r);this.list=r,this.value=e,t?(t.next=this,this.prev=t):this.prev=null,a?(a.prev=this,this.next=a):this.next=null}e.exports=r,r.Node=i,r.create=r,r.prototype.removeNode=function(e){if(e.list!==this)throw new Error("removing node which does not belong to this list");var t=e.next,a=e.prev;return t&&(t.prev=a),a&&(a.next=t),e===this.head&&(this.head=t),e===this.tail&&(this.tail=a),e.list.length--,e.next=null,e.prev=null,e.list=null,t},r.prototype.unshiftNode=function(e){if(e!==this.head){e.list&&e.list.removeNode(e);var t=this.head;e.list=this,e.next=t,t&&(t.prev=e),this.head=e,this.tail||(this.tail=e),this.length++}},r.prototype.pushNode=function(e){if(e!==this.tail){e.list&&e.list.removeNode(e);var t=this.tail;e.list=this,e.prev=t,t&&(t.next=e),this.tail=e,this.head||(this.head=e),this.length++}},r.prototype.push=function(){for(var e=0,t=arguments.length;e<t;e++)r=arguments[e],(a=this).tail=new i(r,a.tail,null,a),a.head||(a.head=a.tail),a.length++;var a,r;return this.length},r.prototype.unshift=function(){for(var e=0,t=arguments.length;e<t;e++)r=arguments[e],(a=this).head=new i(r,null,a.head,a),a.tail||(a.tail=a.head),a.length++;var a,r;return this.length},r.prototype.pop=function(){if(this.tail){var e=this.tail.value;return this.tail=this.tail.prev,this.tail?this.tail.next=null:this.head=null,this.length--,e}},r.prototype.shift=function(){if(this.head){var e=this.head.value;return this.head=this.head.next,this.head?this.head.prev=null:this.tail=null,this.length--,e}},r.prototype.forEach=function(e,t){t=t||this;for(var a=this.head,r=0;null!==a;r++)e.call(t,a.value,r,this),a=a.next},r.prototype.forEachReverse=function(e,t){t=t||this;for(var a=this.tail,r=this.length-1;null!==a;r--)e.call(t,a.value,r,this),a=a.prev},r.prototype.get=function(e){for(var t=0,a=this.head;null!==a&&t<e;t++)a=a.next;if(t===e&&null!==a)return a.value},r.prototype.getReverse=function(e){for(var t=0,a=this.tail;null!==a&&t<e;t++)a=a.prev;if(t===e&&null!==a)return a.value},r.prototype.map=function(e,t){t=t||this;for(var a=new r,i=this.head;null!==i;)a.push(e.call(t,i.value,this)),i=i.next;return a},r.prototype.mapReverse=function(e,t){t=t||this;for(var a=new r,i=this.tail;null!==i;)a.push(e.call(t,i.value,this)),i=i.prev;return a},r.prototype.reduce=function(e,t){var a,r=this.head;if(arguments.length>1)a=t;else{if(!this.head)throw new TypeError("Reduce of empty list with no initial value");r=this.head.next,a=this.head.value}for(var i=0;null!==r;i++)a=e(a,r.value,i),r=r.next;return a},r.prototype.reduceReverse=function(e,t){var a,r=this.tail;if(arguments.length>1)a=t;else{if(!this.tail)throw new TypeError("Reduce of empty list with no initial value");r=this.tail.prev,a=this.tail.value}for(var i=this.length-1;null!==r;i--)a=e(a,r.value,i),r=r.prev;return a},r.prototype.toArray=function(){for(var e=new Array(this.length),t=0,a=this.head;null!==a;t++)e[t]=a.value,a=a.next;return e},r.prototype.toArrayReverse=function(){for(var e=new Array(this.length),t=0,a=this.tail;null!==a;t++)e[t]=a.value,a=a.prev;return e},r.prototype.slice=function(e,t){(t=t||this.length)<0&&(t+=this.length),(e=e||0)<0&&(e+=this.length);var a=new r;if(t<e||t<0)return a;e<0&&(e=0),t>this.length&&(t=this.length);for(var i=0,o=this.head;null!==o&&i<e;i++)o=o.next;for(;null!==o&&i<t;i++,o=o.next)a.push(o.value);return a},r.prototype.sliceReverse=function(e,t){(t=t||this.length)<0&&(t+=this.length),(e=e||0)<0&&(e+=this.length);var a=new r;if(t<e||t<0)return a;e<0&&(e=0),t>this.length&&(t=this.length);for(var i=this.length,o=this.tail;null!==o&&i>t;i--)o=o.prev;for(;null!==o&&i>e;i--,o=o.prev)a.push(o.value);return a},r.prototype.splice=function(e,t,...a){e>this.length&&(e=this.length-1),e<0&&(e=this.length+e);for(var r=0,o=this.head;null!==o&&r<e;r++)o=o.next;var n,p,d,s,l=[];for(r=0;o&&r<t;r++)l.push(o.value),o=this.removeNode(o);for(null===o&&(o=this.tail),o!==this.head&&o!==this.tail&&(o=o.prev),r=0;r<a.length;r++)n=this,p=o,d=a[r],s=void 0,null===(s=p===n.head?new i(d,null,p,n):new i(d,p,p.next,n)).next&&(n.tail=s),null===s.prev&&(n.head=s),n.length++,o=s;return l},r.prototype.reverse=function(){for(var e=this.head,t=this.tail,a=e;null!==a;a=a.prev){var r=a.prev;a.prev=a.next,a.next=r}return this.head=t,this.tail=e,this};try{a(9602)(r)}catch(e){}},4300:e=>{"use strict";e.exports=require("buffer")},6113:e=>{"use strict";e.exports=require("crypto")},7147:e=>{"use strict";e.exports=require("fs")},3685:e=>{"use strict";e.exports=require("http")},5687:e=>{"use strict";e.exports=require("https")},1017:e=>{"use strict";e.exports=require("path")},5477:e=>{"use strict";e.exports=require("punycode")},2781:e=>{"use strict";e.exports=require("stream")},3837:e=>{"use strict";e.exports=require("util")},8048:(e,t,a)=>{"use strict";a.r(t),a.d(t,{AuthError:()=>q,AuthErrorMessage:()=>F,AzureCloudInstance:()=>_e,ClientApplication:()=>ga,ClientAssertion:()=>Ea,ClientAuthError:()=>H,ClientAuthErrorMessage:()=>$,ClientConfigurationError:()=>Q,ClientConfigurationErrorMessage:()=>K,ClientCredentialClient:()=>Sa,ConfidentialClientApplication:()=>ba,CryptoProvider:()=>zt,DeviceCodeClient:()=>wa,DistributedCachePlugin:()=>Aa,InteractionRequiredAuthError:()=>nt,InteractionRequiredAuthErrorMessage:()=>ot,LogLevel:()=>ge,Logger:()=>ye,NodeStorage:()=>Kt,OnBehalfOfClient:()=>Ca,PromptValue:()=>y,ProtocolMode:()=>z,PublicClientApplication:()=>_a,ResponseMode:()=>T,ServerError:()=>ve,TokenCache:()=>Zt,TokenCacheContext:()=>ct,UsernamePasswordClient:()=>va,buildAppConfiguration:()=>Lt,internals:()=>r,version:()=>ea});var r={};a.r(r),a.d(r,{Deserializer:()=>se,Serializer:()=>i});class i{static serializeJSONBlob(e){return JSON.stringify(e)}static serializeAccounts(e){const t={};return Object.keys(e).map((function(a){const r=e[a];t[a]={home_account_id:r.homeAccountId,environment:r.environment,realm:r.realm,local_account_id:r.localAccountId,username:r.username,authority_type:r.authorityType,name:r.name,client_info:r.clientInfo,last_modification_time:r.lastModificationTime,last_modification_app:r.lastModificationApp}})),t}static serializeIdTokens(e){const t={};return Object.keys(e).map((function(a){const r=e[a];t[a]={home_account_id:r.homeAccountId,environment:r.environment,credential_type:r.credentialType,client_id:r.clientId,secret:r.secret,realm:r.realm}})),t}static serializeAccessTokens(e){const t={};return Object.keys(e).map((function(a){const r=e[a];t[a]={home_account_id:r.homeAccountId,environment:r.environment,credential_type:r.credentialType,client_id:r.clientId,secret:r.secret,realm:r.realm,target:r.target,cached_at:r.cachedAt,expires_on:r.expiresOn,extended_expires_on:r.extendedExpiresOn,refresh_on:r.refreshOn,key_id:r.keyId,token_type:r.tokenType,requestedClaims:r.requestedClaims,requestedClaimsHash:r.requestedClaimsHash,userAssertionHash:r.userAssertionHash}})),t}static serializeRefreshTokens(e){const t={};return Object.keys(e).map((function(a){const r=e[a];t[a]={home_account_id:r.homeAccountId,environment:r.environment,credential_type:r.credentialType,client_id:r.clientId,secret:r.secret,family_id:r.familyId,target:r.target,realm:r.realm}})),t}static serializeAppMetadata(e){const t={};return Object.keys(e).map((function(a){const r=e[a];t[a]={client_id:r.clientId,environment:r.environment,family_id:r.familyId}})),t}static serializeAllCache(e){return{Account:this.serializeAccounts(e.accounts),IdToken:this.serializeIdTokens(e.idTokens),AccessToken:this.serializeAccessTokens(e.accessTokens),RefreshToken:this.serializeRefreshTokens(e.refreshTokens),AppMetadata:this.serializeAppMetadata(e.appMetadata)}}}const o={LIBRARY_NAME:"MSAL.JS",SKU:"msal.js.common",CACHE_PREFIX:"msal",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",NO_ACCOUNT:"NO_ACCOUNT",CLAIMS:"claims",CONSUMER_UTID:"9188040d-6c67-4c5b-b112-36a304b66dad",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_RESPONSE_TYPE:"code",CODE_GRANT_TYPE:"authorization_code",RT_GRANT_TYPE:"refresh_token",FRAGMENT_RESPONSE_MODE:"fragment",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",AUTHORIZATION_PENDING:"authorization_pending",NOT_DEFINED:"not_defined",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",REGIONAL_AUTH_NON_MSI_QUERY_STRING:"allowestsrnonmsi=true",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],TOKEN_RESPONSE_TYPE:"token",ID_TOKEN_RESPONSE_TYPE:"id_token",SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},n=[o.OPENID_SCOPE,o.PROFILE_SCOPE,o.OFFLINE_ACCESS_SCOPE],p=[...n,o.EMAIL_SCOPE],d="Retry-After",s="X-AnchorMailbox",l="x-ms-request-id",c={COMMON:"common",ORGANIZATIONS:"organizations",CONSUMERS:"consumers"},m="client_id",u="response_type",h="token_type",f="req_cnf",v="return_spa_code",g="access_token",y={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",CREATE:"create",NO_SESSION:"no_session"},w={PLAIN:"plain",S256:"S256"},_={QUERY:"query",FRAGMENT:"fragment"},T={..._,FORM_POST:"form_post"},E="Generic",S="-",C=".",b={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},A="appmetadata",R="1",I="authority-metadata",N="config",k="cache",O="network",D="hardcoded_values",P={SCHEMA_VERSION:5,MAX_CUR_HEADER_BYTES:80,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},M={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},x="throttling",V="2",U="3",L="4",F={unexpectedError:{code:"unexpected_error",desc:"Unexpected error in authentication."},postRequestFailed:{code:"post_request_failed",desc:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."}};class q extends Error{constructor(e,t,a){super(t?`${e}: ${t}`:e),Object.setPrototypeOf(this,q.prototype),this.errorCode=e||o.EMPTY_STRING,this.errorMessage=t||o.EMPTY_STRING,this.subError=a||o.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}static createUnexpectedError(e){return new q(F.unexpectedError.code,`${F.unexpectedError.desc}: ${e}`)}static createPostRequestFailed(e){return new q(F.postRequestFailed.code,`${F.postRequestFailed.desc}: ${e}`)}}const $={clientInfoDecodingError:{code:"client_info_decoding_error",desc:"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause."},clientInfoEmptyError:{code:"client_info_empty_error",desc:"The client info was empty. Please review the trace to determine the root cause."},tokenParsingError:{code:"token_parsing_error",desc:"Token cannot be parsed. Please review stack trace to determine root cause."},nullOrEmptyToken:{code:"null_or_empty_token",desc:"The token is null or empty. Please review the trace to determine the root cause."},endpointResolutionError:{code:"endpoints_resolution_error",desc:"Error: could not resolve endpoints. Please check network and try again."},networkError:{code:"network_error",desc:"Network request failed. Please check network trace to determine root cause."},unableToGetOpenidConfigError:{code:"openid_config_error",desc:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints."},hashNotDeserialized:{code:"hash_not_deserialized",desc:"The hash parameters could not be deserialized. Please review the trace to determine the root cause."},blankGuidGenerated:{code:"blank_guid_generated",desc:"The guid generated was blank. Please review the trace to determine the root cause."},invalidStateError:{code:"invalid_state",desc:"State was not the expected format. Please check the logs to determine whether the request was sent using ProtocolUtils.setRequestState()."},stateMismatchError:{code:"state_mismatch",desc:"State mismatch error. Please check your network. Continued requests may cause cache overflow."},stateNotFoundError:{code:"state_not_found",desc:"State not found"},nonceMismatchError:{code:"nonce_mismatch",desc:"Nonce mismatch error. This may be caused by a race condition in concurrent requests."},nonceNotFoundError:{code:"nonce_not_found",desc:"nonce not found"},authTimeNotFoundError:{code:"auth_time_not_found",desc:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information."},maxAgeTranspiredError:{code:"max_age_transpired",desc:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication."},noTokensFoundError:{code:"no_tokens_found",desc:"No tokens were found for the given scopes, and no authorization code was passed to acquireToken. You must retrieve an authorization code before making a call to acquireToken()."},multipleMatchingTokens:{code:"multiple_matching_tokens",desc:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account."},multipleMatchingAccounts:{code:"multiple_matching_accounts",desc:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account"},multipleMatchingAppMetadata:{code:"multiple_matching_appMetadata",desc:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata"},tokenRequestCannotBeMade:{code:"request_cannot_be_made",desc:"Token request cannot be made without authorization code or refresh token."},appendEmptyScopeError:{code:"cannot_append_empty_scope",desc:"Cannot append null or empty scope to ScopeSet. Please check the stack trace for more info."},removeEmptyScopeError:{code:"cannot_remove_empty_scope",desc:"Cannot remove null or empty scope from ScopeSet. Please check the stack trace for more info."},appendScopeSetError:{code:"cannot_append_scopeset",desc:"Cannot append ScopeSet due to error."},emptyInputScopeSetError:{code:"empty_input_scopeset",desc:"Empty input ScopeSet cannot be processed."},DeviceCodePollingCancelled:{code:"device_code_polling_cancelled",desc:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true."},DeviceCodeExpired:{code:"device_code_expired",desc:"Device code is expired."},DeviceCodeUnknownError:{code:"device_code_unknown_error",desc:"Device code stopped polling for unknown reasons."},NoAccountInSilentRequest:{code:"no_account_in_silent_request",desc:"Please pass an account object, silent flow is not supported without account information"},invalidCacheRecord:{code:"invalid_cache_record",desc:"Cache record object was null or undefined."},invalidCacheEnvironment:{code:"invalid_cache_environment",desc:"Invalid environment when attempting to create cache entry"},noAccountFound:{code:"no_account_found",desc:"No account found in cache for given key."},CachePluginError:{code:"no cache plugin set on CacheManager",desc:"ICachePlugin needs to be set before using readFromStorage or writeFromStorage"},noCryptoObj:{code:"no_crypto_object",desc:"No crypto object detected. This is required for the following operation: "},invalidCacheType:{code:"invalid_cache_type",desc:"Invalid cache type"},unexpectedAccountType:{code:"unexpected_account_type",desc:"Unexpected account type."},unexpectedCredentialType:{code:"unexpected_credential_type",desc:"Unexpected credential type."},invalidAssertion:{code:"invalid_assertion",desc:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515"},invalidClientCredential:{code:"invalid_client_credential",desc:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential"},tokenRefreshRequired:{code:"token_refresh_required",desc:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired."},userTimeoutReached:{code:"user_timeout_reached",desc:"User defined timeout for device code polling reached"},tokenClaimsRequired:{code:"token_claims_cnf_required_for_signedjwt",desc:"Cannot generate a POP jwt if the token_claims are not populated"},noAuthorizationCodeFromServer:{code:"authorization_code_missing_from_server_response",desc:"Server response does not contain an authorization code to proceed"},noAzureRegionDetected:{code:"no_azure_region_detected",desc:"No azure region was detected and no fallback was made available"},accessTokenEntityNullError:{code:"access_token_entity_null",desc:"Access token entity is null, please check logs and cache to ensure a valid access token is present."},bindingKeyNotRemovedError:{code:"binding_key_not_removed",desc:"Could not remove the credential's binding key from storage."},logoutNotSupported:{code:"end_session_endpoint_not_supported",desc:"Provided authority does not support logout."},keyIdMissing:{code:"key_id_missing",desc:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key."},noNetworkConnectivity:{code:"no_network_connectivity",desc:"No network connectivity. Check your internet connection."},userCanceledError:{code:"user_canceled",desc:"User canceled the flow."},missingTenantIdError:{code:"missing_tenant_id_error",desc:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow."}};class H extends q{constructor(e,t){super(e,t),this.name="ClientAuthError",Object.setPrototypeOf(this,H.prototype)}static createClientInfoDecodingError(e){return new H($.clientInfoDecodingError.code,`${$.clientInfoDecodingError.desc} Failed with error: ${e}`)}static createClientInfoEmptyError(){return new H($.clientInfoEmptyError.code,`${$.clientInfoEmptyError.desc}`)}static createTokenParsingError(e){return new H($.tokenParsingError.code,`${$.tokenParsingError.desc} Failed with error: ${e}`)}static createTokenNullOrEmptyError(e){return new H($.nullOrEmptyToken.code,`${$.nullOrEmptyToken.desc} Raw Token Value: ${e}`)}static createEndpointDiscoveryIncompleteError(e){return new H($.endpointResolutionError.code,`${$.endpointResolutionError.desc} Detail: ${e}`)}static createNetworkError(e,t){return new H($.networkError.code,`${$.networkError.desc} | Fetch client threw: ${t} | Attempted to reach: ${e.split("?")[0]}`)}static createUnableToGetOpenidConfigError(e){return new H($.unableToGetOpenidConfigError.code,`${$.unableToGetOpenidConfigError.desc} Attempted to retrieve endpoints from: ${e}`)}static createHashNotDeserializedError(e){return new H($.hashNotDeserialized.code,`${$.hashNotDeserialized.desc} Given Object: ${e}`)}static createInvalidStateError(e,t){return new H($.invalidStateError.code,`${$.invalidStateError.desc} Invalid State: ${e}, Root Err: ${t}`)}static createStateMismatchError(){return new H($.stateMismatchError.code,$.stateMismatchError.desc)}static createStateNotFoundError(e){return new H($.stateNotFoundError.code,`${$.stateNotFoundError.desc}:  ${e}`)}static createNonceMismatchError(){return new H($.nonceMismatchError.code,$.nonceMismatchError.desc)}static createAuthTimeNotFoundError(){return new H($.authTimeNotFoundError.code,$.authTimeNotFoundError.desc)}static createMaxAgeTranspiredError(){return new H($.maxAgeTranspiredError.code,$.maxAgeTranspiredError.desc)}static createNonceNotFoundError(e){return new H($.nonceNotFoundError.code,`${$.nonceNotFoundError.desc}:  ${e}`)}static createMultipleMatchingTokensInCacheError(){return new H($.multipleMatchingTokens.code,`${$.multipleMatchingTokens.desc}.`)}static createMultipleMatchingAccountsInCacheError(){return new H($.multipleMatchingAccounts.code,$.multipleMatchingAccounts.desc)}static createMultipleMatchingAppMetadataInCacheError(){return new H($.multipleMatchingAppMetadata.code,$.multipleMatchingAppMetadata.desc)}static createTokenRequestCannotBeMadeError(){return new H($.tokenRequestCannotBeMade.code,$.tokenRequestCannotBeMade.desc)}static createAppendEmptyScopeToSetError(e){return new H($.appendEmptyScopeError.code,`${$.appendEmptyScopeError.desc} Given Scope: ${e}`)}static createRemoveEmptyScopeFromSetError(e){return new H($.removeEmptyScopeError.code,`${$.removeEmptyScopeError.desc} Given Scope: ${e}`)}static createAppendScopeSetError(e){return new H($.appendScopeSetError.code,`${$.appendScopeSetError.desc} Detail Error: ${e}`)}static createEmptyInputScopeSetError(){return new H($.emptyInputScopeSetError.code,`${$.emptyInputScopeSetError.desc}`)}static createDeviceCodeCancelledError(){return new H($.DeviceCodePollingCancelled.code,`${$.DeviceCodePollingCancelled.desc}`)}static createDeviceCodeExpiredError(){return new H($.DeviceCodeExpired.code,`${$.DeviceCodeExpired.desc}`)}static createDeviceCodeUnknownError(){return new H($.DeviceCodeUnknownError.code,`${$.DeviceCodeUnknownError.desc}`)}static createNoAccountInSilentRequestError(){return new H($.NoAccountInSilentRequest.code,`${$.NoAccountInSilentRequest.desc}`)}static createNullOrUndefinedCacheRecord(){return new H($.invalidCacheRecord.code,$.invalidCacheRecord.desc)}static createInvalidCacheEnvironmentError(){return new H($.invalidCacheEnvironment.code,$.invalidCacheEnvironment.desc)}static createNoAccountFoundError(){return new H($.noAccountFound.code,$.noAccountFound.desc)}static createCachePluginError(){return new H($.CachePluginError.code,`${$.CachePluginError.desc}`)}static createNoCryptoObjectError(e){return new H($.noCryptoObj.code,`${$.noCryptoObj.desc}${e}`)}static createInvalidCacheTypeError(){return new H($.invalidCacheType.code,`${$.invalidCacheType.desc}`)}static createUnexpectedAccountTypeError(){return new H($.unexpectedAccountType.code,`${$.unexpectedAccountType.desc}`)}static createUnexpectedCredentialTypeError(){return new H($.unexpectedCredentialType.code,`${$.unexpectedCredentialType.desc}`)}static createInvalidAssertionError(){return new H($.invalidAssertion.code,`${$.invalidAssertion.desc}`)}static createInvalidCredentialError(){return new H($.invalidClientCredential.code,`${$.invalidClientCredential.desc}`)}static createRefreshRequiredError(){return new H($.tokenRefreshRequired.code,$.tokenRefreshRequired.desc)}static createUserTimeoutReachedError(){return new H($.userTimeoutReached.code,$.userTimeoutReached.desc)}static createTokenClaimsRequiredError(){return new H($.tokenClaimsRequired.code,$.tokenClaimsRequired.desc)}static createNoAuthCodeInServerResponseError(){return new H($.noAuthorizationCodeFromServer.code,$.noAuthorizationCodeFromServer.desc)}static createBindingKeyNotRemovedError(){return new H($.bindingKeyNotRemovedError.code,$.bindingKeyNotRemovedError.desc)}static createLogoutNotSupportedError(){return new H($.logoutNotSupported.code,$.logoutNotSupported.desc)}static createKeyIdMissingError(){return new H($.keyIdMissing.code,$.keyIdMissing.desc)}static createNoNetworkConnectivityError(){return new H($.noNetworkConnectivity.code,$.noNetworkConnectivity.desc)}static createUserCanceledError(){return new H($.userCanceledError.code,$.userCanceledError.desc)}static createMissingTenantIdError(){return new q($.missingTenantIdError.code,$.missingTenantIdError.desc)}}function j(e,t){if(!e)throw H.createClientInfoEmptyError();try{const a=t.base64Decode(e);return JSON.parse(a)}catch(e){throw H.createClientInfoDecodingError(e.message)}}function B(e){if(!e)throw H.createClientInfoDecodingError("Home account ID was empty.");const t=e.split(C,2);return{uid:t[0],utid:t.length<2?o.EMPTY_STRING:t[1]}}const z={AAD:"AAD",OIDC:"OIDC"};class G{generateAccountId(){return[this.homeAccountId,this.environment].join(S).toLowerCase()}generateAccountKey(){return G.generateAccountCacheKey({homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId})}getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,name:this.name,idTokenClaims:this.idTokenClaims,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType}}static generateAccountCacheKey(e){return[e.homeAccountId,e.environment||o.EMPTY_STRING,e.tenantId||o.EMPTY_STRING].join(S).toLowerCase()}static createAccount(e,t){const a=new G;1===t.authorityType?a.authorityType="ADFS":t.protocolMode===z.AAD?a.authorityType="MSSTS":a.authorityType=E,a.clientInfo=e.clientInfo,a.homeAccountId=e.homeAccountId,a.nativeAccountId=e.nativeAccountId;const r=e.environment||t&&t.getPreferredCache();if(!r)throw H.createInvalidCacheEnvironmentError();a.environment=r,a.realm=e.idTokenClaims.tid||o.EMPTY_STRING,a.idTokenClaims=e.idTokenClaims,a.localAccountId=e.idTokenClaims.oid||e.idTokenClaims.sub||o.EMPTY_STRING;const i=e.idTokenClaims.preferred_username||e.idTokenClaims.upn,n=e.idTokenClaims.emails?e.idTokenClaims.emails[0]:null;return a.username=i||n||o.EMPTY_STRING,a.name=e.idTokenClaims.name,a.cloudGraphHostName=e.cloudGraphHostName,a.msGraphHost=e.msGraphHost,a}static createFromAccountInfo(e,t,a){const r=new G;return r.authorityType=e.authorityType||E,r.homeAccountId=e.homeAccountId,r.localAccountId=e.localAccountId,r.nativeAccountId=e.nativeAccountId,r.realm=e.tenantId,r.environment=e.environment,r.username=e.username,r.name=e.name,r.idTokenClaims=e.idTokenClaims,r.cloudGraphHostName=t,r.msGraphHost=a,r}static generateHomeAccountId(e,t,a,r,i){const n=i?.sub?i.sub:o.EMPTY_STRING;if(1===t||2===t)return n;if(e)try{const t=j(e,r);if(t.uid&&t.utid)return`${t.uid}${C}${t.utid}`}catch(e){}return a.verbose("No client info in response"),n}static isAccountEntity(e){return!!e&&e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType")}static accountInfoIsEqual(e,t,a){if(!e||!t)return!1;let r=!0;if(a){const a=e.idTokenClaims||{},i=t.idTokenClaims||{};r=a.iat===i.iat&&a.nonce===i.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&r}}const K={redirectUriNotSet:{code:"redirect_uri_empty",desc:"A redirect URI is required for all calls, and none has been set."},postLogoutUriNotSet:{code:"post_logout_uri_empty",desc:"A post logout redirect has not been set."},claimsRequestParsingError:{code:"claims_request_parsing_error",desc:"Could not parse the given claims request object."},authorityUriInsecure:{code:"authority_uri_insecure",desc:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options"},urlParseError:{code:"url_parse_error",desc:"URL could not be parsed into appropriate segments."},urlEmptyError:{code:"empty_url_error",desc:"URL was empty or null."},emptyScopesError:{code:"empty_input_scopes_error",desc:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token."},nonArrayScopesError:{code:"nonarray_input_scopes_error",desc:"Scopes cannot be passed as non-array."},clientIdSingleScopeError:{code:"clientid_input_scopes_error",desc:"Client ID can only be provided as a single scope."},invalidPrompt:{code:"invalid_prompt_value",desc:"Supported prompt values are 'login', 'select_account', 'consent', 'create', 'none' and 'no_session'.  Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest"},invalidClaimsRequest:{code:"invalid_claims",desc:"Given claims parameter must be a stringified JSON object."},tokenRequestEmptyError:{code:"token_request_empty",desc:"Token request was empty and not found in cache."},logoutRequestEmptyError:{code:"logout_request_empty",desc:"The logout request was null or undefined."},invalidCodeChallengeMethod:{code:"invalid_code_challenge_method",desc:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".'},invalidCodeChallengeParams:{code:"pkce_params_missing",desc:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request"},invalidCloudDiscoveryMetadata:{code:"invalid_cloud_discovery_metadata",desc:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields"},invalidAuthorityMetadata:{code:"invalid_authority_metadata",desc:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields."},untrustedAuthority:{code:"untrusted_authority",desc:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter."},invalidAzureCloudInstance:{code:"invalid_azure_cloud_instance",desc:"Invalid AzureCloudInstance provided. Please refer MSAL JS docs: aks.ms/msaljs/azure_cloud_instance for valid values"},missingSshJwk:{code:"missing_ssh_jwk",desc:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme."},missingSshKid:{code:"missing_ssh_kid",desc:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme."},missingNonceAuthenticationHeader:{code:"missing_nonce_authentication_header",desc:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce."},invalidAuthenticationHeader:{code:"invalid_authentication_header",desc:"Invalid authentication header provided"},cannotSetOIDCOptions:{code:"cannot_set_OIDCOptions",desc:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority."},cannotAllowNativeBroker:{code:"cannot_allow_native_broker",desc:"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode."},authorityMismatch:{code:"authority_mismatch",desc:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority."}};class Q extends H{constructor(e,t){super(e,t),this.name="ClientConfigurationError",Object.setPrototypeOf(this,Q.prototype)}static createRedirectUriEmptyError(){return new Q(K.redirectUriNotSet.code,K.redirectUriNotSet.desc)}static createPostLogoutRedirectUriEmptyError(){return new Q(K.postLogoutUriNotSet.code,K.postLogoutUriNotSet.desc)}static createClaimsRequestParsingError(e){return new Q(K.claimsRequestParsingError.code,`${K.claimsRequestParsingError.desc} Given value: ${e}`)}static createInsecureAuthorityUriError(e){return new Q(K.authorityUriInsecure.code,`${K.authorityUriInsecure.desc} Given URI: ${e}`)}static createUrlParseError(e){return new Q(K.urlParseError.code,`${K.urlParseError.desc} Given Error: ${e}`)}static createUrlEmptyError(){return new Q(K.urlEmptyError.code,K.urlEmptyError.desc)}static createEmptyScopesArrayError(){return new Q(K.emptyScopesError.code,`${K.emptyScopesError.desc}`)}static createClientIdSingleScopeError(e){return new Q(K.clientIdSingleScopeError.code,`${K.clientIdSingleScopeError.desc} Given Scopes: ${e}`)}static createInvalidPromptError(e){return new Q(K.invalidPrompt.code,`${K.invalidPrompt.desc} Given value: ${e}`)}static createInvalidClaimsRequestError(){return new Q(K.invalidClaimsRequest.code,K.invalidClaimsRequest.desc)}static createEmptyLogoutRequestError(){return new Q(K.logoutRequestEmptyError.code,K.logoutRequestEmptyError.desc)}static createEmptyTokenRequestError(){return new Q(K.tokenRequestEmptyError.code,K.tokenRequestEmptyError.desc)}static createInvalidCodeChallengeMethodError(){return new Q(K.invalidCodeChallengeMethod.code,K.invalidCodeChallengeMethod.desc)}static createInvalidCodeChallengeParamsError(){return new Q(K.invalidCodeChallengeParams.code,K.invalidCodeChallengeParams.desc)}static createInvalidCloudDiscoveryMetadataError(){return new Q(K.invalidCloudDiscoveryMetadata.code,K.invalidCloudDiscoveryMetadata.desc)}static createInvalidAuthorityMetadataError(){return new Q(K.invalidAuthorityMetadata.code,K.invalidAuthorityMetadata.desc)}static createUntrustedAuthorityError(){return new Q(K.untrustedAuthority.code,K.untrustedAuthority.desc)}static createInvalidAzureCloudInstanceError(){return new Q(K.invalidAzureCloudInstance.code,K.invalidAzureCloudInstance.desc)}static createMissingSshJwkError(){return new Q(K.missingSshJwk.code,K.missingSshJwk.desc)}static createMissingSshKidError(){return new Q(K.missingSshKid.code,K.missingSshKid.desc)}static createMissingNonceAuthenticationHeadersError(){return new Q(K.missingNonceAuthenticationHeader.code,K.missingNonceAuthenticationHeader.desc)}static createInvalidAuthenticationHeaderError(e,t){return new Q(K.invalidAuthenticationHeader.code,`${K.invalidAuthenticationHeader.desc}. Invalid header: ${e}. Details: ${t}`)}static createCannotSetOIDCOptionsError(){return new Q(K.cannotSetOIDCOptions.code,K.cannotSetOIDCOptions.desc)}static createCannotAllowNativeBrokerError(){return new Q(K.cannotAllowNativeBroker.code,K.cannotAllowNativeBroker.desc)}static createAuthorityMismatchError(){return new Q(K.authorityMismatch.code,K.authorityMismatch.desc)}}class Y{static isEmptyObj(e){if(e)try{const t=JSON.parse(e);return 0===Object.keys(t).length}catch(e){}return!0}static startsWith(e,t){return 0===e.indexOf(t)}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){const t={},a=e.split("&"),r=e=>decodeURIComponent(e.replace(/\+/g," "));return a.forEach((e=>{if(e.trim()){const[a,i]=e.split(/=(.+)/g,2);a&&i&&(t[r(a)]=r(i))}})),t}static trimArrayEntries(e){return e.map((e=>e.trim()))}static removeEmptyStringsFromArray(e){return e.filter((e=>!!e))}static jsonParseHelper(e){try{return JSON.parse(e)}catch(e){return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}class W{constructor(e){const t=e?Y.trimArrayEntries([...e]):[],a=t?Y.removeEmptyStringsFromArray(t):[];this.validateInputScopes(a),this.scopes=new Set,a.forEach((e=>this.scopes.add(e)))}static fromString(e){const t=(e||o.EMPTY_STRING).split(" ");return new W(t)}static createSearchScopes(e){const t=new W(e);return t.containsOnlyOIDCScopes()?t.removeScope(o.OFFLINE_ACCESS_SCOPE):t.removeOIDCScopes(),t}validateInputScopes(e){if(!e||e.length<1)throw Q.createEmptyScopesArrayError()}containsScope(e){const t=this.printScopesLowerCase().split(" "),a=new W(t);return!!e&&a.scopes.has(e.toLowerCase())}containsScopeSet(e){return!(!e||e.scopes.size<=0)&&this.scopes.size>=e.scopes.size&&e.asArray().every((e=>this.containsScope(e)))}containsOnlyOIDCScopes(){let e=0;return p.forEach((t=>{this.containsScope(t)&&(e+=1)})),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach((e=>this.appendScope(e)))}catch(e){throw H.createAppendScopeSetError(e)}}removeScope(e){if(!e)throw H.createRemoveEmptyScopeFromSetError(e);this.scopes.delete(e.trim())}removeOIDCScopes(){p.forEach((e=>{this.scopes.delete(e)}))}unionScopeSets(e){if(!e)throw H.createEmptyInputScopeSetError();const t=new Set;return e.scopes.forEach((e=>t.add(e.toLowerCase()))),this.scopes.forEach((e=>t.add(e.toLowerCase()))),t}intersectingScopeSets(e){if(!e)throw H.createEmptyInputScopeSetError();e.containsOnlyOIDCScopes()||e.removeOIDCScopes();const t=this.unionScopeSets(e),a=e.getScopeCount(),r=this.getScopeCount();return t.size<r+a}getScopeCount(){return this.scopes.size}asArray(){const e=[];return this.scopes.forEach((t=>e.push(t))),e}printScopes(){return this.scopes?this.asArray().join(" "):o.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}function X(e,t){const a=function(e){if(!e)throw H.createTokenNullOrEmptyError(e);const t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(e);if(!t||t.length<4)throw H.createTokenParsingError(`Given token is malformed: ${JSON.stringify(e)}`);return t[2]}(e);try{const e=t(a);return JSON.parse(e)}catch(e){throw H.createTokenParsingError(e)}}function J(e,t){if(0===t||Date.now()-3e5>e+t)throw H.createMaxAgeTranspiredError()}const Z="@azure/msal-common",ee="14.0.3";class te{constructor(e,t,a){this.clientId=e,this.cryptoImpl=t,this.commonLogger=a.clone(Z,ee)}getAllAccounts(){const e=this.getAccountKeys();if(e.length<1)return[];const t=e.reduce(((e,t)=>{const a=this.getAccount(t);return a?(e.push(a),e):e}),[]);return t.length<1?[]:t.map((e=>this.getAccountInfoFromEntity(e)))}getAccountInfoFilteredBy(e){const t=this.getAccountsFilteredBy(e);return t.length>0?this.getAccountInfoFromEntity(t[0]):null}getAccountInfoFromEntity(e){const t=e.getAccountInfo(),a=this.getIdToken(t);return a&&(t.idToken=a.secret,t.idTokenClaims=X(a.secret,this.cryptoImpl.base64Decode)),t}async saveCacheRecord(e,t){if(!e)throw H.createNullOrUndefinedCacheRecord();e.account&&this.setAccount(e.account),e.idToken&&!1!==t?.idToken&&this.setIdTokenCredential(e.idToken),e.accessToken&&!1!==t?.accessToken&&await this.saveAccessToken(e.accessToken),e.refreshToken&&!1!==t?.refreshToken&&this.setRefreshTokenCredential(e.refreshToken),e.appMetadata&&this.setAppMetadata(e.appMetadata)}async saveAccessToken(e){const t={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},a=this.getTokenKeys(),r=W.fromString(e.target),i=[];a.accessToken.forEach((e=>{if(!this.accessTokenKeyMatchesFilter(e,t,!1))return;const a=this.getAccessTokenCredential(e);a&&this.credentialMatchesFilter(a,t)&&W.fromString(a.target).intersectingScopeSets(r)&&i.push(this.removeAccessToken(e))})),await Promise.all(i),this.setAccessTokenCredential(e)}getAccountsFilteredBy(e){const t=this.getAccountKeys(),a=[];return t.forEach((t=>{if(!this.isAccountKey(t,e.homeAccountId,e.realm))return;const r=this.getAccount(t);r&&(e.homeAccountId&&!this.matchHomeAccountId(r,e.homeAccountId)||e.localAccountId&&!this.matchLocalAccountId(r,e.localAccountId)||e.username&&!this.matchUsername(r,e.username)||e.environment&&!this.matchEnvironment(r,e.environment)||e.realm&&!this.matchRealm(r,e.realm)||e.nativeAccountId&&!this.matchNativeAccountId(r,e.nativeAccountId)||a.push(r))})),a}isAccountKey(e,t,a){return!(e.split(S).length<3||t&&!e.toLowerCase().includes(t.toLowerCase())||a&&!e.toLowerCase().includes(a.toLowerCase()))}isCredentialKey(e){if(e.split(S).length<6)return!1;const t=e.toLowerCase();if(-1===t.indexOf(b.ID_TOKEN.toLowerCase())&&-1===t.indexOf(b.ACCESS_TOKEN.toLowerCase())&&-1===t.indexOf(b.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())&&-1===t.indexOf(b.REFRESH_TOKEN.toLowerCase()))return!1;if(t.indexOf(b.REFRESH_TOKEN.toLowerCase())>-1){const e=`${b.REFRESH_TOKEN}${S}${this.clientId}${S}`,a=`${b.REFRESH_TOKEN}${S}${R}${S}`;if(-1===t.indexOf(e.toLowerCase())&&-1===t.indexOf(a.toLowerCase()))return!1}else if(-1===t.indexOf(this.clientId.toLowerCase()))return!1;return!0}credentialMatchesFilter(e,t){if(t.clientId&&!this.matchClientId(e,t.clientId))return!1;if(t.userAssertionHash&&!this.matchUserAssertionHash(e,t.userAssertionHash))return!1;if("string"==typeof t.homeAccountId&&!this.matchHomeAccountId(e,t.homeAccountId))return!1;if(t.environment&&!this.matchEnvironment(e,t.environment))return!1;if(t.realm&&!this.matchRealm(e,t.realm))return!1;if(t.credentialType&&!this.matchCredentialType(e,t.credentialType))return!1;if(t.familyId&&!this.matchFamilyId(e,t.familyId))return!1;if(t.target&&!this.matchTarget(e,t.target))return!1;if((t.requestedClaimsHash||e.requestedClaimsHash)&&e.requestedClaimsHash!==t.requestedClaimsHash)return!1;if(e.credentialType===b.ACCESS_TOKEN_WITH_AUTH_SCHEME){if(t.tokenType&&!this.matchTokenType(e,t.tokenType))return!1;if(t.tokenType===M.SSH&&t.keyId&&!this.matchKeyId(e,t.keyId))return!1}return!0}getAppMetadataFilteredBy(e){return this.getAppMetadataFilteredByInternal(e.environment,e.clientId)}getAppMetadataFilteredByInternal(e,t){const a=this.getKeys(),r={};return a.forEach((a=>{if(!this.isAppMetadata(a))return;const i=this.getAppMetadata(a);i&&(e&&!this.matchEnvironment(i,e)||t&&!this.matchClientId(i,t)||(r[a]=i))})),r}getAuthorityMetadataByAlias(e){const t=this.getAuthorityMetadataKeys();let a=null;return t.forEach((t=>{if(!this.isAuthorityMetadata(t)||-1===t.indexOf(this.clientId))return;const r=this.getAuthorityMetadata(t);r&&-1!==r.aliases.indexOf(e)&&(a=r)})),a}async removeAllAccounts(){const e=this.getAccountKeys(),t=[];e.forEach((e=>{t.push(this.removeAccount(e))})),await Promise.all(t)}async removeAccount(e){const t=this.getAccount(e);t&&(await this.removeAccountContext(t),this.removeItem(e))}async removeAccountContext(e){const t=this.getTokenKeys(),a=e.generateAccountId(),r=[];t.idToken.forEach((e=>{0===e.indexOf(a)&&this.removeIdToken(e)})),t.accessToken.forEach((e=>{0===e.indexOf(a)&&r.push(this.removeAccessToken(e))})),t.refreshToken.forEach((e=>{0===e.indexOf(a)&&this.removeRefreshToken(e)})),await Promise.all(r)}async removeAccessToken(e){const t=this.getAccessTokenCredential(e);if(t){if(t.credentialType.toLowerCase()===b.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()&&t.tokenType===M.POP){const e=t.keyId;if(e)try{await this.cryptoImpl.removeTokenBindingKey(e)}catch(e){throw H.createBindingKeyNotRemovedError()}}return this.removeItem(e)}}removeAppMetadata(){return this.getKeys().forEach((e=>{this.isAppMetadata(e)&&this.removeItem(e)})),!0}readCacheRecord(e,t,a){const r=this.getTokenKeys(),i=this.readAccountFromCache(e),o=this.getIdToken(e,r),n=this.getAccessToken(e,t,r),p=this.getRefreshToken(e,!1,r),d=this.readAppMetadataFromCache(a);return i&&o&&(i.idTokenClaims=X(o.secret,this.cryptoImpl.base64Decode)),{account:i,idToken:o,accessToken:n,refreshToken:p,appMetadata:d}}readAccountFromCache(e){const t=G.generateAccountCacheKey(e);return this.getAccount(t)}getIdToken(e,t){this.commonLogger.trace("CacheManager - getIdToken called");const a={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:b.ID_TOKEN,clientId:this.clientId,realm:e.tenantId},r=this.getIdTokensByFilter(a,t),i=r.length;return i<1?(this.commonLogger.info("CacheManager:getIdToken - No token found"),null):i>1?(this.commonLogger.info("CacheManager:getIdToken - Multiple id tokens found, clearing them"),r.forEach((e=>{this.removeIdToken(e.generateCredentialKey())})),null):(this.commonLogger.info("CacheManager:getIdToken - Returning id token"),r[0])}getIdTokensByFilter(e,t){const a=t&&t.idToken||this.getTokenKeys().idToken,r=[];return a.forEach((t=>{if(!this.idTokenKeyMatchesFilter(t,{clientId:this.clientId,...e}))return;const a=this.getIdTokenCredential(t);a&&this.credentialMatchesFilter(a,e)&&r.push(a)})),r}idTokenKeyMatchesFilter(e,t){const a=e.toLowerCase();return!(t.clientId&&-1===a.indexOf(t.clientId.toLowerCase())||t.homeAccountId&&-1===a.indexOf(t.homeAccountId.toLowerCase()))}removeIdToken(e){this.removeItem(e)}removeRefreshToken(e){this.removeItem(e)}getAccessToken(e,t,a){this.commonLogger.trace("CacheManager - getAccessToken called");const r=W.createSearchScopes(t.scopes),i=t.authenticationScheme||M.BEARER,o=i&&i.toLowerCase()!==M.BEARER.toLowerCase()?b.ACCESS_TOKEN_WITH_AUTH_SCHEME:b.ACCESS_TOKEN,n={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:o,clientId:this.clientId,realm:e.tenantId,target:r,tokenType:i,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},p=a&&a.accessToken||this.getTokenKeys().accessToken,d=[];p.forEach((e=>{if(this.accessTokenKeyMatchesFilter(e,n,!0)){const t=this.getAccessTokenCredential(e);t&&this.credentialMatchesFilter(t,n)&&d.push(t)}}));const s=d.length;return s<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found"),null):s>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them"),d.forEach((e=>{this.removeAccessToken(e.generateCredentialKey())})),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token"),d[0])}accessTokenKeyMatchesFilter(e,t,a){const r=e.toLowerCase();if(t.clientId&&-1===r.indexOf(t.clientId.toLowerCase()))return!1;if(t.homeAccountId&&-1===r.indexOf(t.homeAccountId.toLowerCase()))return!1;if(t.realm&&-1===r.indexOf(t.realm.toLowerCase()))return!1;if(t.requestedClaimsHash&&-1===r.indexOf(t.requestedClaimsHash.toLowerCase()))return!1;if(t.target){const e=t.target.asArray();for(let t=0;t<e.length;t++){if(a&&!r.includes(e[t].toLowerCase()))return!1;if(!a&&r.includes(e[t].toLowerCase()))return!0}}return!0}getAccessTokensByFilter(e){const t=this.getTokenKeys(),a=[];return t.accessToken.forEach((t=>{if(!this.accessTokenKeyMatchesFilter(t,e,!0))return;const r=this.getAccessTokenCredential(t);r&&this.credentialMatchesFilter(r,e)&&a.push(r)})),a}getRefreshToken(e,t,a){this.commonLogger.trace("CacheManager - getRefreshToken called");const r=t?R:void 0,i={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:b.REFRESH_TOKEN,clientId:this.clientId,familyId:r},o=a&&a.refreshToken||this.getTokenKeys().refreshToken,n=[];return o.forEach((e=>{if(this.refreshTokenKeyMatchesFilter(e,i)){const t=this.getRefreshTokenCredential(e);t&&this.credentialMatchesFilter(t,i)&&n.push(t)}})),n.length<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),n[0])}refreshTokenKeyMatchesFilter(e,t){const a=e.toLowerCase();return!(t.familyId&&-1===a.indexOf(t.familyId.toLowerCase())||!t.familyId&&t.clientId&&-1===a.indexOf(t.clientId.toLowerCase())||t.homeAccountId&&-1===a.indexOf(t.homeAccountId.toLowerCase()))}readAppMetadataFromCache(e){const t={environment:e,clientId:this.clientId},a=this.getAppMetadataFilteredBy(t),r=Object.keys(a).map((e=>a[e])),i=r.length;if(i<1)return null;if(i>1)throw H.createMultipleMatchingAppMetadataInCacheError();return r[0]}isAppMetadataFOCI(e){const t=this.readAppMetadataFromCache(e);return!(!t||t.familyId!==R)}matchHomeAccountId(e,t){return!("string"!=typeof e.homeAccountId||t!==e.homeAccountId)}matchLocalAccountId(e,t){return!("string"!=typeof e.localAccountId||t!==e.localAccountId)}matchUsername(e,t){return!("string"!=typeof e.username||t.toLowerCase()!==e.username.toLowerCase())}matchUserAssertionHash(e,t){return!(!e.userAssertionHash||t!==e.userAssertionHash)}matchEnvironment(e,t){const a=this.getAuthorityMetadataByAlias(t);return!!(a&&a.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!(!e.clientId||t!==e.clientId)}matchFamilyId(e,t){return!(!e.familyId||t!==e.familyId)}matchRealm(e,t){return!(!e.realm||t!==e.realm)}matchNativeAccountId(e,t){return!(!e.nativeAccountId||t!==e.nativeAccountId)}matchTarget(e,t){return!(e.credentialType!==b.ACCESS_TOKEN&&e.credentialType!==b.ACCESS_TOKEN_WITH_AUTH_SCHEME||!e.target)&&W.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!(!e.tokenType||e.tokenType!==t)}matchKeyId(e,t){return!(!e.keyId||e.keyId!==t)}isAppMetadata(e){return-1!==e.indexOf(A)}isAuthorityMetadata(e){return-1!==e.indexOf(I)}generateAuthorityMetadataCacheKey(e){return`${I}-${this.clientId}-${e}`}static toObject(e,t){for(const a in t)e[a]=t[a];return e}}class ae extends te{setAccount(){throw q.createUnexpectedError("Storage interface - setAccount() has not been implemented for the cacheStorage interface.")}getAccount(){throw q.createUnexpectedError("Storage interface - getAccount() has not been implemented for the cacheStorage interface.")}setIdTokenCredential(){throw q.createUnexpectedError("Storage interface - setIdTokenCredential() has not been implemented for the cacheStorage interface.")}getIdTokenCredential(){throw q.createUnexpectedError("Storage interface - getIdTokenCredential() has not been implemented for the cacheStorage interface.")}setAccessTokenCredential(){throw q.createUnexpectedError("Storage interface - setAccessTokenCredential() has not been implemented for the cacheStorage interface.")}getAccessTokenCredential(){throw q.createUnexpectedError("Storage interface - getAccessTokenCredential() has not been implemented for the cacheStorage interface.")}setRefreshTokenCredential(){throw q.createUnexpectedError("Storage interface - setRefreshTokenCredential() has not been implemented for the cacheStorage interface.")}getRefreshTokenCredential(){throw q.createUnexpectedError("Storage interface - getRefreshTokenCredential() has not been implemented for the cacheStorage interface.")}setAppMetadata(){throw q.createUnexpectedError("Storage interface - setAppMetadata() has not been implemented for the cacheStorage interface.")}getAppMetadata(){throw q.createUnexpectedError("Storage interface - getAppMetadata() has not been implemented for the cacheStorage interface.")}setServerTelemetry(){throw q.createUnexpectedError("Storage interface - setServerTelemetry() has not been implemented for the cacheStorage interface.")}getServerTelemetry(){throw q.createUnexpectedError("Storage interface - getServerTelemetry() has not been implemented for the cacheStorage interface.")}setAuthorityMetadata(){throw q.createUnexpectedError("Storage interface - setAuthorityMetadata() has not been implemented for the cacheStorage interface.")}getAuthorityMetadata(){throw q.createUnexpectedError("Storage interface - getAuthorityMetadata() has not been implemented for the cacheStorage interface.")}getAuthorityMetadataKeys(){throw q.createUnexpectedError("Storage interface - getAuthorityMetadataKeys() has not been implemented for the cacheStorage interface.")}setThrottlingCache(){throw q.createUnexpectedError("Storage interface - setThrottlingCache() has not been implemented for the cacheStorage interface.")}getThrottlingCache(){throw q.createUnexpectedError("Storage interface - getThrottlingCache() has not been implemented for the cacheStorage interface.")}removeItem(){throw q.createUnexpectedError("Storage interface - removeItem() has not been implemented for the cacheStorage interface.")}containsKey(){throw q.createUnexpectedError("Storage interface - containsKey() has not been implemented for the cacheStorage interface.")}getKeys(){throw q.createUnexpectedError("Storage interface - getKeys() has not been implemented for the cacheStorage interface.")}getAccountKeys(){throw q.createUnexpectedError("Storage interface - getAccountKeys() has not been implemented for the cacheStorage interface.")}getTokenKeys(){throw q.createUnexpectedError("Storage interface - getTokenKeys() has not been implemented for the cacheStorage interface.")}async clear(){throw q.createUnexpectedError("Storage interface - clear() has not been implemented for the cacheStorage interface.")}updateCredentialCacheKey(){throw q.createUnexpectedError("Storage interface - updateCredentialCacheKey() has not been implemented for the cacheStorage interface.")}}class re{generateAccountId(){return re.generateAccountIdForCacheKey(this.homeAccountId,this.environment)}generateCredentialId(){return re.generateCredentialIdForCacheKey(this.credentialType,this.clientId,this.realm,this.familyId)}generateTarget(){return re.generateTargetForCacheKey(this.target)}generateCredentialKey(){return re.generateCredentialCacheKey(this.homeAccountId,this.environment,this.credentialType,this.clientId,this.realm,this.target,this.familyId,this.tokenType,this.requestedClaimsHash)}generateType(){switch(this.credentialType){case b.ID_TOKEN:return 2003;case b.ACCESS_TOKEN:case b.ACCESS_TOKEN_WITH_AUTH_SCHEME:return 2001;case b.REFRESH_TOKEN:return 2002;default:throw H.createUnexpectedCredentialTypeError()}}static generateCredentialCacheKey(e,t,a,r,i,o,n,p,d){return[this.generateAccountIdForCacheKey(e,t),this.generateCredentialIdForCacheKey(a,r,i,n),this.generateTargetForCacheKey(o),this.generateClaimsHashForCacheKey(d),this.generateSchemeForCacheKey(p)].join(S).toLowerCase()}static generateAccountIdForCacheKey(e,t){return[e,t].join(S).toLowerCase()}static generateCredentialIdForCacheKey(e,t,a,r){return[e,e===b.REFRESH_TOKEN&&r||t,a||o.EMPTY_STRING].join(S).toLowerCase()}static generateTargetForCacheKey(e){return(e||o.EMPTY_STRING).toLowerCase()}static generateClaimsHashForCacheKey(e){return(e||o.EMPTY_STRING).toLowerCase()}static generateSchemeForCacheKey(e){return e&&e.toLowerCase()!==M.BEARER.toLowerCase()?e.toLowerCase():o.EMPTY_STRING}}class ie extends re{static createIdTokenEntity(e,t,a,r,i){const o=new ie;return o.credentialType=b.ID_TOKEN,o.homeAccountId=e,o.environment=t,o.clientId=r,o.secret=a,o.realm=i,o}static isIdTokenEntity(e){return!!e&&e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("credentialType")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("secret")&&e.credentialType===b.ID_TOKEN}}class oe{static nowSeconds(){return Math.round((new Date).getTime()/1e3)}static isTokenExpired(e,t){const a=Number(e)||0;return oe.nowSeconds()+t>a}static wasClockTurnedBack(e){return Number(e)>oe.nowSeconds()}static delay(e,t){return new Promise((a=>setTimeout((()=>a(t)),e)))}}class ne extends re{static createAccessTokenEntity(e,t,a,r,i,o,n,p,d,s,l,c,m,u,h){const f=new ne;f.homeAccountId=e,f.credentialType=b.ACCESS_TOKEN,f.secret=a;const v=oe.nowSeconds();if(f.cachedAt=v.toString(),f.expiresOn=n.toString(),f.extendedExpiresOn=p.toString(),s&&(f.refreshOn=s.toString()),f.environment=t,f.clientId=r,f.realm=i,f.target=o,f.userAssertionHash=c,f.tokenType=l||M.BEARER,u&&(f.requestedClaims=u,f.requestedClaimsHash=h),f.tokenType?.toLowerCase()!==M.BEARER.toLowerCase())switch(f.credentialType=b.ACCESS_TOKEN_WITH_AUTH_SCHEME,f.tokenType){case M.POP:const e=X(a,d.base64Decode);if(!e?.cnf?.kid)throw H.createTokenClaimsRequiredError();f.keyId=e.cnf.kid;break;case M.SSH:f.keyId=m}return f}static isAccessTokenEntity(e){return!!e&&e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("credentialType")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("secret")&&e.hasOwnProperty("target")&&(e.credentialType===b.ACCESS_TOKEN||e.credentialType===b.ACCESS_TOKEN_WITH_AUTH_SCHEME)}}class pe extends re{static createRefreshTokenEntity(e,t,a,r,i,o){const n=new pe;return n.clientId=r,n.credentialType=b.REFRESH_TOKEN,n.environment=t,n.homeAccountId=e,n.secret=a,n.userAssertionHash=o,i&&(n.familyId=i),n}static isRefreshTokenEntity(e){return!!e&&e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("credentialType")&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("secret")&&e.credentialType===b.REFRESH_TOKEN}}class de{generateAppMetadataKey(){return de.generateAppMetadataCacheKey(this.environment,this.clientId)}static generateAppMetadataCacheKey(e,t){return[A,e,t].join(S).toLowerCase()}static createAppMetadataEntity(e,t,a){const r=new de;return r.clientId=e,r.environment=t,a&&(r.familyId=a),r}static isAppMetadataEntity(e,t){return!!t&&0===e.indexOf(A)&&t.hasOwnProperty("clientId")&&t.hasOwnProperty("environment")}}class se{static deserializeJSONBlob(e){return e?JSON.parse(e):{}}static deserializeAccounts(e){const t={};return e&&Object.keys(e).map((function(a){const r=e[a],i={homeAccountId:r.home_account_id,environment:r.environment,realm:r.realm,localAccountId:r.local_account_id,username:r.username,authorityType:r.authority_type,name:r.name,clientInfo:r.client_info,lastModificationTime:r.last_modification_time,lastModificationApp:r.last_modification_app},o=new G;te.toObject(o,i),t[a]=o})),t}static deserializeIdTokens(e){const t={};return e&&Object.keys(e).map((function(a){const r=e[a],i={homeAccountId:r.home_account_id,environment:r.environment,credentialType:r.credential_type,clientId:r.client_id,secret:r.secret,realm:r.realm},o=new ie;te.toObject(o,i),t[a]=o})),t}static deserializeAccessTokens(e){const t={};return e&&Object.keys(e).map((function(a){const r=e[a],i={homeAccountId:r.home_account_id,environment:r.environment,credentialType:r.credential_type,clientId:r.client_id,secret:r.secret,realm:r.realm,target:r.target,cachedAt:r.cached_at,expiresOn:r.expires_on,extendedExpiresOn:r.extended_expires_on,refreshOn:r.refresh_on,keyId:r.key_id,tokenType:r.token_type,requestedClaims:r.requestedClaims,requestedClaimsHash:r.requestedClaimsHash,userAssertionHash:r.userAssertionHash},o=new ne;te.toObject(o,i),t[a]=o})),t}static deserializeRefreshTokens(e){const t={};return e&&Object.keys(e).map((function(a){const r=e[a],i={homeAccountId:r.home_account_id,environment:r.environment,credentialType:r.credential_type,clientId:r.client_id,secret:r.secret,familyId:r.family_id,target:r.target,realm:r.realm},o=new pe;te.toObject(o,i),t[a]=o})),t}static deserializeAppMetadata(e){const t={};return e&&Object.keys(e).map((function(a){const r=e[a],i={clientId:r.client_id,environment:r.environment,familyId:r.family_id},o=new de;te.toObject(o,i),t[a]=o})),t}static deserializeAllCache(e){return{accounts:e.Account?this.deserializeAccounts(e.Account):{},idTokens:e.IdToken?this.deserializeIdTokens(e.IdToken):{},accessTokens:e.AccessToken?this.deserializeAccessTokens(e.AccessToken):{},refreshTokens:e.RefreshToken?this.deserializeRefreshTokens(e.RefreshToken):{},appMetadata:e.AppMetadata?this.deserializeAppMetadata(e.AppMetadata):{}}}}const le="post",ce="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~",me="urn:ietf:params:oauth:client-assertion-type:jwt-bearer",ue="authorization_pending",he="http://",fe="localhost";class ve extends q{constructor(e,t,a){super(e,t,a),this.name="ServerError",Object.setPrototypeOf(this,ve.prototype)}}var ge;!function(e){e[e.Error=0]="Error",e[e.Warning=1]="Warning",e[e.Info=2]="Info",e[e.Verbose=3]="Verbose",e[e.Trace=4]="Trace"}(ge||(ge={}));class ye{constructor(e,t,a){this.level=ge.Info;const r=e||ye.createDefaultLoggerOptions();this.localCallback=r.loggerCallback||(()=>{}),this.piiLoggingEnabled=r.piiLoggingEnabled||!1,this.level="number"==typeof r.logLevel?r.logLevel:ge.Info,this.correlationId=r.correlationId||o.EMPTY_STRING,this.packageName=t||o.EMPTY_STRING,this.packageVersion=a||o.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:ge.Info}}clone(e,t,a){return new ye({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:a||this.correlationId},e,t)}logMessage(e,t){if(t.logLevel>this.level||!this.piiLoggingEnabled&&t.containsPii)return;const a=`[${(new Date).toUTCString()}] : [${t.correlationId||this.correlationId||""}] : ${this.packageName}@${this.packageVersion} : ${ge[t.logLevel]} - ${e}`;this.executeCallback(t.logLevel,a,t.containsPii||!1)}executeCallback(e,t,a){this.localCallback&&this.localCallback(e,t,a)}error(e,t){this.logMessage(e,{logLevel:ge.Error,containsPii:!1,correlationId:t||o.EMPTY_STRING})}errorPii(e,t){this.logMessage(e,{logLevel:ge.Error,containsPii:!0,correlationId:t||o.EMPTY_STRING})}warning(e,t){this.logMessage(e,{logLevel:ge.Warning,containsPii:!1,correlationId:t||o.EMPTY_STRING})}warningPii(e,t){this.logMessage(e,{logLevel:ge.Warning,containsPii:!0,correlationId:t||o.EMPTY_STRING})}info(e,t){this.logMessage(e,{logLevel:ge.Info,containsPii:!1,correlationId:t||o.EMPTY_STRING})}infoPii(e,t){this.logMessage(e,{logLevel:ge.Info,containsPii:!0,correlationId:t||o.EMPTY_STRING})}verbose(e,t){this.logMessage(e,{logLevel:ge.Verbose,containsPii:!1,correlationId:t||o.EMPTY_STRING})}verbosePii(e,t){this.logMessage(e,{logLevel:ge.Verbose,containsPii:!0,correlationId:t||o.EMPTY_STRING})}trace(e,t){this.logMessage(e,{logLevel:ge.Trace,containsPii:!1,correlationId:t||o.EMPTY_STRING})}tracePii(e,t){this.logMessage(e,{logLevel:ge.Trace,containsPii:!0,correlationId:t||o.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}const we={createNewGuid:()=>{throw q.createUnexpectedError("Crypto interface - createNewGuid() has not been implemented")},base64Decode:()=>{throw q.createUnexpectedError("Crypto interface - base64Decode() has not been implemented")},base64Encode:()=>{throw q.createUnexpectedError("Crypto interface - base64Encode() has not been implemented")},async generatePkceCodes(){throw q.createUnexpectedError("Crypto interface - generatePkceCodes() has not been implemented")},async getPublicKeyThumbprint(){throw q.createUnexpectedError("Crypto interface - getPublicKeyThumbprint() has not been implemented")},async removeTokenBindingKey(){throw q.createUnexpectedError("Crypto interface - removeTokenBindingKey() has not been implemented")},async clearKeystore(){throw q.createUnexpectedError("Crypto interface - clearKeystore() has not been implemented")},async signJwt(){throw q.createUnexpectedError("Crypto interface - signJwt() has not been implemented")},async hashString(){throw q.createUnexpectedError("Crypto interface - hashString() has not been implemented")}},_e={None:"none",AzurePublic:"https://login.microsoftonline.com",AzurePpe:"https://login.windows-ppe.net",AzureChina:"https://login.chinacloudapi.cn",AzureGermany:"https://login.microsoftonline.de",AzureUsGovernment:"https://login.microsoftonline.us"},Te={tokenRenewalOffsetSeconds:300,preventCorsPreflight:!1},Ee={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:ge.Info,correlationId:o.EMPTY_STRING},Se={claimsBasedCachingEnabled:!1},Ce={async sendGetRequestAsync(){throw q.createUnexpectedError("Network interface - sendGetRequestAsync() has not been implemented")},async sendPostRequestAsync(){throw q.createUnexpectedError("Network interface - sendPostRequestAsync() has not been implemented")}},be={sku:o.SKU,version:ee,cpu:o.EMPTY_STRING,os:o.EMPTY_STRING},Ae={clientSecret:o.EMPTY_STRING,clientAssertion:void 0},Re={azureCloudInstance:_e.None,tenant:`${o.DEFAULT_COMMON_TENANT}`},Ie={application:{appName:"",appVersion:""}};function Ne(e){return e.authOptions.authority.options.protocolMode===z.OIDC}class ke{static generateThrottlingStorageKey(e){return`${x}.${JSON.stringify(e)}`}static preProcess(e,t){const a=ke.generateThrottlingStorageKey(t),r=e.getThrottlingCache(a);if(r){if(r.throttleTime<Date.now())return void e.removeItem(a);throw new ve(r.errorCodes?.join(" ")||o.EMPTY_STRING,r.errorMessage,r.subError)}}static postProcess(e,t,a){if(ke.checkResponseStatus(a)||ke.checkResponseForRetryAfter(a)){const r={throttleTime:ke.calculateThrottleTime(parseInt(a.headers[d])),error:a.body.error,errorCodes:a.body.error_codes,errorMessage:a.body.error_description,subError:a.body.suberror};e.setThrottlingCache(ke.generateThrottlingStorageKey(t),r)}}static checkResponseStatus(e){return 429===e.status||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return!!e.headers&&e.headers.hasOwnProperty(d)&&(e.status<200||e.status>=300)}static calculateThrottleTime(e){const t=e<=0?0:e,a=Date.now()/1e3;return Math.floor(1e3*Math.min(a+(t||60),a+3600))}static removeThrottle(e,t,a,r){const i={clientId:t,authority:a.authority,scopes:a.scopes,homeAccountIdentifier:r,claims:a.claims,authenticationScheme:a.authenticationScheme,resourceRequestMethod:a.resourceRequestMethod,resourceRequestUri:a.resourceRequestUri,shrClaims:a.shrClaims,sshKid:a.sshKid},o=this.generateThrottlingStorageKey(i);e.removeItem(o)}}class Oe{constructor(e,t){this.networkClient=e,this.cacheManager=t}async sendPostRequest(e,t,a){let r;ke.preProcess(this.cacheManager,e);try{r=await this.networkClient.sendPostRequestAsync(t,a)}catch(e){throw e instanceof q?e:H.createNetworkError(t,e)}return ke.postProcess(this.cacheManager,e,r),r}}const De="home_account_id",Pe="UPN";class Me{static validateRedirectUri(e){if(!e)throw Q.createRedirectUriEmptyError()}static validatePrompt(e){const t=[];for(const e in y)t.push(y[e]);if(t.indexOf(e)<0)throw Q.createInvalidPromptError(e)}static validateClaims(e){try{JSON.parse(e)}catch(e){throw Q.createInvalidClaimsRequestError()}}static validateCodeChallengeParams(e,t){if(!e||!t)throw Q.createInvalidCodeChallengeParamsError();this.validateCodeChallengeMethod(t)}static validateCodeChallengeMethod(e){if([w.PLAIN,w.S256].indexOf(e)<0)throw Q.createInvalidCodeChallengeMethodError()}static sanitizeEQParams(e,t){return e?(t.forEach(((t,a)=>{e[a]&&delete e[a]})),Object.fromEntries(Object.entries(e).filter((e=>""!==e[1])))):{}}}class xe{constructor(){this.parameters=new Map}addResponseTypeCode(){this.parameters.set(u,encodeURIComponent(o.CODE_RESPONSE_TYPE))}addResponseTypeForTokenAndIdToken(){this.parameters.set(u,encodeURIComponent(`${o.TOKEN_RESPONSE_TYPE} ${o.ID_TOKEN_RESPONSE_TYPE}`))}addResponseMode(e){this.parameters.set("response_mode",encodeURIComponent(e||T.QUERY))}addNativeBroker(){this.parameters.set("nativebroker",encodeURIComponent("1"))}addScopes(e,t=!0,a=n){!t||a.includes("openid")||e.includes("openid")||a.push("openid");const r=t?[...e||[],...a]:e||[],i=new W(r);this.parameters.set("scope",encodeURIComponent(i.printScopes()))}addClientId(e){this.parameters.set(m,encodeURIComponent(e))}addRedirectUri(e){Me.validateRedirectUri(e),this.parameters.set("redirect_uri",encodeURIComponent(e))}addPostLogoutRedirectUri(e){Me.validateRedirectUri(e),this.parameters.set("post_logout_redirect_uri",encodeURIComponent(e))}addIdTokenHint(e){this.parameters.set("id_token_hint",encodeURIComponent(e))}addDomainHint(e){this.parameters.set("domain_hint",encodeURIComponent(e))}addLoginHint(e){this.parameters.set("login_hint",encodeURIComponent(e))}addCcsUpn(e){this.parameters.set(s,encodeURIComponent(`UPN:${e}`))}addCcsOid(e){this.parameters.set(s,encodeURIComponent(`Oid:${e.uid}@${e.utid}`))}addSid(e){this.parameters.set("sid",encodeURIComponent(e))}addClaims(e,t){const a=this.addClientCapabilitiesToClaims(e,t);Me.validateClaims(a),this.parameters.set("claims",encodeURIComponent(a))}addCorrelationId(e){this.parameters.set("client-request-id",encodeURIComponent(e))}addLibraryInfo(e){this.parameters.set("x-client-SKU",e.sku),this.parameters.set("x-client-VER",e.version),e.os&&this.parameters.set("x-client-OS",e.os),e.cpu&&this.parameters.set("x-client-CPU",e.cpu)}addApplicationTelemetry(e){e?.appName&&this.parameters.set("x-app-name",e.appName),e?.appVersion&&this.parameters.set("x-app-ver",e.appVersion)}addPrompt(e){Me.validatePrompt(e),this.parameters.set("prompt",encodeURIComponent(e))}addState(e){e&&this.parameters.set("state",encodeURIComponent(e))}addNonce(e){this.parameters.set("nonce",encodeURIComponent(e))}addCodeChallengeParams(e,t){if(Me.validateCodeChallengeParams(e,t),!e||!t)throw Q.createInvalidCodeChallengeParamsError();this.parameters.set("code_challenge",encodeURIComponent(e)),this.parameters.set("code_challenge_method",encodeURIComponent(t))}addAuthorizationCode(e){this.parameters.set("code",encodeURIComponent(e))}addDeviceCode(e){this.parameters.set("device_code",encodeURIComponent(e))}addRefreshToken(e){this.parameters.set("refresh_token",encodeURIComponent(e))}addCodeVerifier(e){this.parameters.set("code_verifier",encodeURIComponent(e))}addClientSecret(e){this.parameters.set("client_secret",encodeURIComponent(e))}addClientAssertion(e){e&&this.parameters.set("client_assertion",encodeURIComponent(e))}addClientAssertionType(e){e&&this.parameters.set("client_assertion_type",encodeURIComponent(e))}addOboAssertion(e){this.parameters.set("assertion",encodeURIComponent(e))}addRequestTokenUse(e){this.parameters.set("requested_token_use",encodeURIComponent(e))}addGrantType(e){this.parameters.set("grant_type",encodeURIComponent(e))}addClientInfo(){this.parameters.set("client_info","1")}addExtraQueryParameters(e){const t=Me.sanitizeEQParams(e,this.parameters);Object.keys(t).forEach((t=>{this.parameters.set(t,e[t])}))}addClientCapabilitiesToClaims(e,t){let a;if(e)try{a=JSON.parse(e)}catch(e){throw Q.createInvalidClaimsRequestError()}else a={};return t&&t.length>0&&(a.hasOwnProperty(g)||(a[g]={}),a[g].xms_cc={values:t}),JSON.stringify(a)}addUsername(e){this.parameters.set("username",encodeURIComponent(e))}addPassword(e){this.parameters.set("password",encodeURIComponent(e))}addPopToken(e){e&&(this.parameters.set(h,M.POP),this.parameters.set(f,encodeURIComponent(e)))}addSshJwk(e){e&&(this.parameters.set(h,M.SSH),this.parameters.set(f,encodeURIComponent(e)))}addServerTelemetry(e){this.parameters.set("x-client-current-telemetry",e.generateCurrentRequestHeaderValue()),this.parameters.set("x-client-last-telemetry",e.generateLastRequestHeaderValue())}addThrottling(){this.parameters.set("x-ms-lib-capability","retry-after, h429")}addLogoutHint(e){this.parameters.set("logout_hint",encodeURIComponent(e))}createQueryString(){const e=new Array;return this.parameters.forEach(((t,a)=>{e.push(`${a}=${t}`)})),e.join("&")}}const Ve="baseClientCreateTokenRequestHeaders",Ue="refreshTokenClientExecuteTokenRequest",Le="refreshTokenClientAcquireToken",Fe="refreshTokenClientAcquireTokenWithCachedRefreshToken",qe="refreshTokenClientCreateTokenRequestBody",$e="authClientExecuteTokenRequest",He="authClientCreateTokenRequestBody",je="authClientCreateQueryString",Be="popTokenGenerateCnf",ze="popTokenGenerateKid",Ge="handleServerTokenResponse",Ke="authorityResolveEndpointsAsync",Qe="authorityGetCloudDiscoveryMetadataFromNetwork",Ye="authorityUpdateCloudDiscoveryMetadata",We="authorityGetEndpointMetadataFromNetwork",Xe="authorityUpdateEndpointMetadata",Je="authorityUpdateMetadataWithRegionalInformation",Ze="regionDiscoveryDetectRegion",et="regionDiscoveryGetRegionFromIMDS",tt="regionDiscoveryGetCurrentVersion";new Set(["accessTokenSize","durationMs","idTokenSize","matsSilentStatus","matsHttpStatus","refreshTokenSize","queuedTimeMs","startTimeMs","status"]);class at{constructor(e,t){this.config=function({authOptions:e,systemOptions:t,loggerOptions:a,cacheOptions:r,storageInterface:i,networkInterface:o,cryptoInterface:n,clientCredentials:p,libraryInfo:d,telemetry:s,serverTelemetryManager:l,persistencePlugin:c,serializableCache:m}){const u={...Ee,...a};return{authOptions:(h=e,{clientCapabilities:[],azureCloudOptions:Re,skipAuthorityMetadataCache:!1,...h}),systemOptions:{...Te,...t},loggerOptions:u,cacheOptions:{...Se,...r},storageInterface:i||new ae(e.clientId,we,new ye(u)),networkInterface:o||Ce,cryptoInterface:n||we,clientCredentials:p||Ae,libraryInfo:{...be,...d},telemetry:{...Ie,...s},serverTelemetryManager:l||null,persistencePlugin:c||null,serializableCache:m||null};var h}(e),this.logger=new ye(this.config.loggerOptions,Z,ee),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.networkManager=new Oe(this.networkClient,this.cacheManager),this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(e){const t={};if(t["Content-Type"]=o.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&e)switch(e.type){case De:try{const a=B(e.credential);t[s]=`Oid:${a.uid}@${a.utid}`}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case Pe:t[s]=`UPN: ${e.credential}`}return t}async executePostToTokenEndpoint(e,t,a,r,i){this.performanceClient?.addQueueMeasurement(Ve,i);const o=await this.networkManager.sendPostRequest(r,e,{body:t,headers:a});return this.performanceClient?.addFields({refreshTokenSize:o.body.refresh_token?.length||0,httpVerToken:o.headers?.["x-ms-httpver"]||""},i),this.config.serverTelemetryManager&&o.status<500&&429!==o.status&&this.config.serverTelemetryManager.clearTelemetryCache(),o}updateAuthority(e){if(!e.discoveryComplete())throw H.createEndpointDiscoveryIncompleteError("Updated authority has not completed endpoint discovery.");this.authority=e}createTokenQueryParameters(e){const t=new xe;return e.tokenQueryParameters&&t.addExtraQueryParameters(e.tokenQueryParameters),t.createQueryString()}}const rt=["interaction_required","consent_required","login_required"],it=["message_only","additional_action","basic_action","user_password_expired","consent_required"],ot={noTokensFoundError:{code:"no_tokens_found",desc:"No refresh token found in the cache. Please sign-in."},native_account_unavailable:{code:"native_account_unavailable",desc:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API."}};class nt extends q{constructor(e,t,a,r,i,n,p){super(e,t,a),Object.setPrototypeOf(this,nt.prototype),this.timestamp=r||o.EMPTY_STRING,this.traceId=i||o.EMPTY_STRING,this.correlationId=n||o.EMPTY_STRING,this.claims=p||o.EMPTY_STRING,this.name="InteractionRequiredAuthError"}static isInteractionRequiredError(e,t,a){const r=!!e&&rt.indexOf(e)>-1,i=!!a&&it.indexOf(a)>-1,o=!!t&&rt.some((e=>t.indexOf(e)>-1));return r||o||i}static createNoTokensFoundError(){return new nt(ot.noTokensFoundError.code,ot.noTokensFoundError.desc)}static createNativeAccountUnavailableError(){return new nt(ot.native_account_unavailable.code,ot.native_account_unavailable.desc)}}class pt{constructor(e,t,a,r,i){this.account=e||null,this.idToken=t||null,this.accessToken=a||null,this.refreshToken=r||null,this.appMetadata=i||null}}class dt{static setRequestState(e,t,a){const r=dt.generateLibraryState(e,a);return t?`${r}${o.RESOURCE_DELIM}${t}`:r}static generateLibraryState(e,t){if(!e)throw H.createNoCryptoObjectError("generateLibraryState");const a={id:e.createNewGuid()};t&&(a.meta=t);const r=JSON.stringify(a);return e.base64Encode(r)}static parseRequestState(e,t){if(!e)throw H.createNoCryptoObjectError("parseRequestState");if(!t)throw H.createInvalidStateError(t,"Null, undefined or empty state");try{const a=t.split(o.RESOURCE_DELIM),r=a[0],i=a.length>1?a.slice(1).join(o.RESOURCE_DELIM):o.EMPTY_STRING,n=e.base64Decode(r),p=JSON.parse(n);return{userRequestState:i||o.EMPTY_STRING,libraryState:p}}catch(e){throw H.createInvalidStateError(t,e)}}}class st{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw Q.createUrlEmptyError();this.getHash()||(this._urlString=st.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return Y.endsWith(t,"?")?t=t.slice(0,-1):Y.endsWith(t,"?/")&&(t=t.slice(0,-2)),Y.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch(e){throw Q.createUrlParseError(e)}if(!e.HostNameAndPort||!e.PathSegments)throw Q.createUrlParseError(`Given url string: ${this.urlString}`);if(!e.Protocol||"https:"!==e.Protocol.toLowerCase())throw Q.createInsecureAuthorityUriError(this.urlString)}static appendQueryString(e,t){return t?e.indexOf("?")<0?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return st.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){const t=this.getUrlComponents(),a=t.PathSegments;return!e||0===a.length||a[0]!==c.COMMON&&a[0]!==c.ORGANIZATIONS||(a[0]=e),st.constructAuthorityUriFromObject(t)}getHash(){return st.parseHash(this.urlString)}getUrlComponents(){const e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw Q.createUrlParseError(`Given url string: ${this.urlString}`);const a={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]};let r=a.AbsolutePath.split("/");return r=r.filter((e=>e&&e.length>0)),a.PathSegments=r,a.QueryString&&a.QueryString.endsWith("/")&&(a.QueryString=a.QueryString.substring(0,a.QueryString.length-1)),a}static getDomainFromUrl(e){const t=RegExp("^([^:/?#]+://)?([^/?#]*)"),a=e.match(t);if(!a)throw Q.createUrlParseError(`Given url string: ${e}`);return a[2]}static getAbsoluteUrl(e,t){if(e[0]===o.FORWARD_SLASH){const a=new st(t).getUrlComponents();return a.Protocol+"//"+a.HostNameAndPort+e}return e}static parseHash(e){const t=e.indexOf("#"),a=e.indexOf("#/");return a>-1?e.substring(a+2):t>-1?e.substring(t+1):o.EMPTY_STRING}static parseQueryString(e){const t=e.indexOf("?"),a=e.indexOf("/?");return a>-1?e.substring(a+2):t>-1?e.substring(t+1):o.EMPTY_STRING}static parseQueryServerResponse(e){const t=e.indexOf("?code"),a=e.indexOf("/?code"),r=e.indexOf("#");return a>-1&&r>-1?e.substring(a+2,r):a>-1?e.substring(a+2):t>-1&&r>-1?e.substring(t+1,r):t>-1?e.substring(t+1):o.EMPTY_STRING}static constructAuthorityUriFromObject(e){return new st(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static getDeserializedHash(e){if(!e)return{};const t=st.parseHash(e),a=Y.queryStringToObject(t||e);if(!a)throw H.createHashNotDeserializedError(JSON.stringify(a));return a}static getDeserializedQueryString(e){if(!e)return{};const t=st.parseQueryString(e),a=Y.queryStringToObject(t||e);if(!a)throw H.createHashNotDeserializedError(JSON.stringify(a));return a}static getDeserializedCodeResponse(e,t){const a=new st(t);let r;return r=e===_.QUERY?st.getDeserializedQueryString(t):st.getDeserializedHash(a.getHash()),r}static hashContainsKnownProperties(e){if(!e||e.indexOf("=")<0)return!1;const t=st.getDeserializedHash(e);return!!(t.code||t.error_description||t.error||t.state)}}class lt{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e){this.performanceClient?.addQueueMeasurement(Be,e.correlationId),this.performanceClient?.setPreQueueTime(ze,e.correlationId);const t=await this.generateKid(e),a=this.cryptoUtils.base64Encode(JSON.stringify(t));return{kid:t.kid,reqCnfString:a,reqCnfHash:await this.cryptoUtils.hashString(a)}}async generateKid(e){return this.performanceClient?.addQueueMeasurement(ze,e.correlationId),{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:"sw"}}async signPopToken(e,t,a){return this.signPayload(e,t,a)}async signPayload(e,t,a,r){const{resourceRequestMethod:i,resourceRequestUri:o,shrClaims:n,shrNonce:p}=a,d=o?new st(o):void 0,s=d?.getUrlComponents();return await this.cryptoUtils.signJwt({at:e,ts:oe.nowSeconds(),m:i?.toUpperCase(),u:s?.HostNameAndPort,nonce:p||this.cryptoUtils.createNewGuid(),p:s?.AbsolutePath,q:s?.QueryString?[[],s.QueryString]:void 0,client_claims:n||void 0,...r},t,a.correlationId)}}class ct{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}class mt{constructor(e,t,a,r,i,o,n){this.clientId=e,this.cacheStorage=t,this.cryptoObj=a,this.logger=r,this.serializableCache=i,this.persistencePlugin=o,this.performanceClient=n}validateServerAuthorizationCodeResponse(e,t,a){if(!e.state||!t)throw e.state?H.createStateNotFoundError("Cached State"):H.createStateNotFoundError("Server State");let r,i;try{r=decodeURIComponent(e.state)}catch(t){throw H.createInvalidStateError(e.state,"Server response hash URI could not be decoded")}try{i=decodeURIComponent(t)}catch(t){throw H.createInvalidStateError(e.state,"Cached state URI could not be decoded")}if(r!==i)throw H.createStateMismatchError();if(e.error||e.error_description||e.suberror){if(nt.isInteractionRequiredError(e.error,e.error_description,e.suberror))throw new nt(e.error||o.EMPTY_STRING,e.error_description,e.suberror,e.timestamp||o.EMPTY_STRING,e.trace_id||o.EMPTY_STRING,e.correlation_id||o.EMPTY_STRING,e.claims||o.EMPTY_STRING);throw new ve(e.error||o.EMPTY_STRING,e.error_description,e.suberror)}e.client_info&&j(e.client_info,a)}validateTokenResponse(e,t){if(e.error||e.error_description||e.suberror){const a=`${e.error_codes} - [${e.timestamp}]: ${e.error_description} - Correlation ID: ${e.correlation_id} - Trace ID: ${e.trace_id}`,r=new ve(e.error,a,e.suberror);if(t&&e.status&&e.status>=500&&e.status<=599)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\n${r}`);if(t&&e.status&&e.status>=400&&e.status<=499)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\n${r}`);if(nt.isInteractionRequiredError(e.error,e.error_description,e.suberror))throw new nt(e.error,e.error_description,e.suberror,e.timestamp||o.EMPTY_STRING,e.trace_id||o.EMPTY_STRING,e.correlation_id||o.EMPTY_STRING,e.claims||o.EMPTY_STRING);throw r}}async handleServerTokenResponse(e,t,a,r,i,n,p,d,s){let l,c;if(this.performanceClient?.addQueueMeasurement(Ge,e.correlation_id),e.id_token){if(l=X(e.id_token||o.EMPTY_STRING,this.cryptoObj.base64Decode),i&&i.nonce&&l.nonce!==i.nonce)throw H.createNonceMismatchError();if(r.maxAge||0===r.maxAge){const e=l.auth_time;if(!e)throw H.createAuthTimeNotFoundError();J(e,r.maxAge)}}this.homeAccountIdentifier=G.generateHomeAccountId(e.client_info||o.EMPTY_STRING,t.authorityType,this.logger,this.cryptoObj,l),i&&i.state&&(c=dt.parseRequestState(this.cryptoObj,i.state)),e.key_id=e.key_id||r.sshKid||void 0;const m=this.generateCacheRecord(e,t,a,r,l,n,i);let u;try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),u=new ct(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(u)),p&&!d&&m.account){const e=m.account.generateAccountKey();if(!this.cacheStorage.getAccount(e))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),mt.generateAuthenticationResult(this.cryptoObj,t,m,!1,r,l,c,void 0,s)}await this.cacheStorage.saveCacheRecord(m,r.storeInCache)}finally{this.persistencePlugin&&this.serializableCache&&u&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(u))}return mt.generateAuthenticationResult(this.cryptoObj,t,m,!1,r,l,c,e,s)}generateCacheRecord(e,t,a,r,i,n,p){const d=t.getPreferredCache();if(!d)throw H.createInvalidCacheEnvironmentError();let s,l;e.id_token&&i&&(s=ie.createIdTokenEntity(this.homeAccountIdentifier,d,e.id_token,this.clientId,i.tid||""),l=G.createAccount({homeAccountId:this.homeAccountIdentifier,idTokenClaims:i,clientInfo:e.client_info,cloudGraphHostName:p?.cloud_graph_host_name,msGraphHost:p?.msgraph_host},t));let c=null;if(e.access_token){const p=e.scope?W.fromString(e.scope):new W(r.scopes||[]),s=("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0,l=("string"==typeof e.ext_expires_in?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,m=("string"==typeof e.refresh_in?parseInt(e.refresh_in,10):e.refresh_in)||void 0,u=a+s,h=u+l,f=m&&m>0?a+m:void 0;c=ne.createAccessTokenEntity(this.homeAccountIdentifier,d,e.access_token||o.EMPTY_STRING,this.clientId,i?.tid||t.tenant,p.printScopes(),u,h,this.cryptoObj,f,e.token_type,n,e.key_id,r.claims,r.requestedClaimsHash)}let m=null;e.refresh_token&&(m=pe.createRefreshTokenEntity(this.homeAccountIdentifier,d,e.refresh_token||o.EMPTY_STRING,this.clientId,e.foci,n));let u=null;return e.foci&&(u=de.createAppMetadataEntity(this.clientId,d,e.foci)),new pt(l,s,c,m,u)}static async generateAuthenticationResult(e,t,a,r,i,n,p,d,s){let l,c,m=o.EMPTY_STRING,u=[],h=null,f=o.EMPTY_STRING;if(a.accessToken){if(a.accessToken.tokenType===M.POP){const t=new lt(e),{secret:r,keyId:o}=a.accessToken;if(!o)throw H.createKeyIdMissingError();m=await t.signPopToken(r,o,i)}else m=a.accessToken.secret;u=W.fromString(a.accessToken.target).asArray(),h=new Date(1e3*Number(a.accessToken.expiresOn)),l=new Date(1e3*Number(a.accessToken.extendedExpiresOn)),a.accessToken.refreshOn&&(c=new Date(1e3*Number(a.accessToken.refreshOn)))}a.appMetadata&&(f=a.appMetadata.familyId===R?R:"");const v=n?.oid||n?.sub||"",g=n?.tid||"";return d?.spa_accountid&&a.account&&(a.account.nativeAccountId=d?.spa_accountid),{authority:t.canonicalAuthority,uniqueId:v,tenantId:g,scopes:u,account:a.account?a.account.getAccountInfo():null,idToken:a?.idToken?.secret||"",idTokenClaims:n||{},accessToken:m,fromCache:r,expiresOn:h,extExpiresOn:l,refreshOn:c,correlationId:i.correlationId,requestId:s||o.EMPTY_STRING,familyId:f,tokenType:a.accessToken?.tokenType||o.EMPTY_STRING,state:p?p.userRequestState:o.EMPTY_STRING,cloudGraphHostName:a.account?.cloudGraphHostName||o.EMPTY_STRING,msGraphHost:a.account?.msGraphHost||o.EMPTY_STRING,code:d?.spa_code,fromNativeBroker:!1}}}const ut=(e,t,a,r,i)=>(...o)=>{a.trace(`Executing function ${t}`);const n=r?.startMeasurement(t,i);return r?.setPreQueueTime(t,i),e(...o).then((e=>(a.trace(`Returning result from ${t}`),n?.end({success:!0}),e))).catch((e=>{a.trace(`Error occurred in ${t}`);try{a.trace(JSON.stringify(e))}catch(e){a.trace("Unable to print error message.")}throw n?.end({success:!1}),e}))};class ht extends at{constructor(e,t){super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=this.config.authOptions.authority.options.OIDCOptions?.defaultScopes}async getAuthCodeUrl(e){this.performanceClient?.addQueueMeasurement("getAuthCodeUrl",e.correlationId);const t=await ut(this.createAuthCodeUrlQueryString.bind(this),je,this.logger,this.performanceClient,e.correlationId)(e);return st.appendQueryString(this.authority.authorizationEndpoint,t)}async acquireToken(e,t){if(this.performanceClient?.addQueueMeasurement("authClientAcquireToken",e.correlationId),!e.code)throw H.createTokenRequestCannotBeMadeError();const a=oe.nowSeconds(),r=await ut(this.executeTokenRequest.bind(this),$e,this.logger,this.performanceClient,e.correlationId)(this.authority,e),i=r.headers?.[l],o=new mt(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return o.validateTokenResponse(r.body),ut(o.handleServerTokenResponse.bind(o),Ge,this.logger,this.performanceClient,e.correlationId)(r.body,this.authority,a,e,t,void 0,void 0,void 0,i)}handleFragmentResponse(e,t){const a=new mt(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,null,null),r=st.getDeserializedCodeResponse(this.config.authOptions.authority.options.OIDCOptions?.serverResponseType,e);if(a.validateServerAuthorizationCodeResponse(r,t,this.cryptoUtils),!r.code)throw H.createNoAuthCodeInServerResponseError();return{...r,code:r.code}}getLogoutUri(e){if(!e)throw Q.createEmptyLogoutRequestError();const t=this.createLogoutUrlQueryString(e);return st.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement($e,t.correlationId);const a=this.createTokenQueryParameters(t),r=st.appendQueryString(e.tokenEndpoint,a),i=await ut(this.createTokenRequestBody.bind(this),He,this.logger,this.performanceClient,t.correlationId)(t);let o;if(t.clientInfo)try{const e=j(t.clientInfo,this.cryptoUtils);o={credential:`${e.uid}${C}${e.utid}`,type:De}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}const n=this.createTokenRequestHeaders(o||t.ccsCredential),p={clientId:this.config.authOptions.clientId,authority:e.canonicalAuthority,scopes:t.scopes,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid};return ut(this.executePostToTokenEndpoint.bind(this),"baseClientExecutePostToTokenEndpoint",this.logger,this.performanceClient,t.correlationId)(r,i,n,p,t.correlationId)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(He,e.correlationId);const t=new xe;if(t.addClientId(e.tokenBodyParameters?.[m]||this.config.authOptions.clientId),this.includeRedirectUri?t.addRedirectUri(e.redirectUri):Me.validateRedirectUri(e.redirectUri),t.addScopes(e.scopes,!0,this.oidcDefaultScopes),t.addAuthorizationCode(e.code),t.addLibraryInfo(this.config.libraryInfo),t.addApplicationTelemetry(this.config.telemetry.application),t.addThrottling(),this.serverTelemetryManager&&!Ne(this.config)&&t.addServerTelemetry(this.serverTelemetryManager),e.codeVerifier&&t.addCodeVerifier(e.codeVerifier),this.config.clientCredentials.clientSecret&&t.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const e=this.config.clientCredentials.clientAssertion;t.addClientAssertion(e.assertion),t.addClientAssertionType(e.assertionType)}if(t.addGrantType("authorization_code"),t.addClientInfo(),e.authenticationScheme===M.POP){const a=new lt(this.cryptoUtils,this.performanceClient);this.performanceClient?.setPreQueueTime(Be,e.correlationId);const r=await a.generateCnf(e);t.addPopToken(r.reqCnfString)}else if(e.authenticationScheme===M.SSH){if(!e.sshJwk)throw Q.createMissingSshJwkError();t.addSshJwk(e.sshJwk)}const a=e.correlationId||this.config.cryptoInterface.createNewGuid();let r;if(t.addCorrelationId(a),(!Y.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.clientInfo)try{const t=j(e.clientInfo,this.cryptoUtils);r={credential:`${t.uid}${C}${t.utid}`,type:De}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}else r=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&r)switch(r.type){case De:try{const e=B(r.credential);t.addCcsOid(e)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case Pe:t.addCcsUpn(r.credential)}return e.tokenBodyParameters&&t.addExtraQueryParameters(e.tokenBodyParameters),!e.enableSpaAuthorizationCode||e.tokenBodyParameters&&e.tokenBodyParameters[v]||t.addExtraQueryParameters({[v]:"1"}),t.createQueryString()}async createAuthCodeUrlQueryString(e){this.performanceClient?.addQueueMeasurement(je,e.correlationId);const t=new xe;t.addClientId(e.extraQueryParameters?.[m]||this.config.authOptions.clientId);const a=[...e.scopes||[],...e.extraScopesToConsent||[]];t.addScopes(a,!0,this.oidcDefaultScopes),t.addRedirectUri(e.redirectUri);const r=e.correlationId||this.config.cryptoInterface.createNewGuid();if(t.addCorrelationId(r),t.addResponseMode(e.responseMode),t.addResponseTypeCode(),t.addLibraryInfo(this.config.libraryInfo),Ne(this.config)||t.addApplicationTelemetry(this.config.telemetry.application),t.addClientInfo(),e.codeChallenge&&e.codeChallengeMethod&&t.addCodeChallengeParams(e.codeChallenge,e.codeChallengeMethod),e.prompt&&t.addPrompt(e.prompt),e.domainHint&&t.addDomainHint(e.domainHint),e.prompt!==y.SELECT_ACCOUNT)if(e.sid&&e.prompt===y.NONE)this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),t.addSid(e.sid);else if(e.account){const a=this.extractAccountSid(e.account),r=this.extractLoginHint(e.account);if(r){this.logger.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),t.addLoginHint(r);try{const a=B(e.account.homeAccountId);t.addCcsOid(a)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(a&&e.prompt===y.NONE){this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),t.addSid(a);try{const a=B(e.account.homeAccountId);t.addCcsOid(a)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e.loginHint)this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint);else if(e.account.username){this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),t.addLoginHint(e.account.username);try{const a=B(e.account.homeAccountId);t.addCcsOid(a)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else e.loginHint&&(this.logger.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint));else this.logger.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");if(e.nonce&&t.addNonce(e.nonce),e.state&&t.addState(e.state),(e.claims||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters),e.nativeBroker&&(t.addNativeBroker(),e.authenticationScheme===M.POP)){const a=new lt(this.cryptoUtils),r=await a.generateCnf(e);t.addPopToken(r.reqCnfHash)}return t.createQueryString()}createLogoutUrlQueryString(e){const t=new xe;return e.postLogoutRedirectUri&&t.addPostLogoutRedirectUri(e.postLogoutRedirectUri),e.correlationId&&t.addCorrelationId(e.correlationId),e.idTokenHint&&t.addIdTokenHint(e.idTokenHint),e.state&&t.addState(e.state),e.logoutHint&&t.addLogoutHint(e.logoutHint),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters),t.createQueryString()}extractAccountSid(e){return e.idTokenClaims?.sid||null}extractLoginHint(e){return e.idTokenClaims?.login_hint||null}}class ft extends at{constructor(e,t){super(e,t)}async acquireToken(e){this.performanceClient?.addQueueMeasurement(Le,e.correlationId);const t=this.performanceClient?.startMeasurement(Le,e.correlationId);this.logger.verbose("RefreshTokenClientAcquireToken called",e.correlationId);const a=oe.nowSeconds();this.performanceClient?.setPreQueueTime(Ue,e.correlationId);const r=await this.executeTokenRequest(e,this.authority),i=r.headers?.[l],o=new mt(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return o.validateTokenResponse(r.body),this.performanceClient?.setPreQueueTime(Ge,e.correlationId),o.handleServerTokenResponse(r.body,this.authority,a,e,void 0,void 0,!0,e.forceCache,i).then((e=>(t?.end({success:!0}),e))).catch((a=>{throw this.logger.verbose("Error in fetching refresh token",e.correlationId),t?.end({errorCode:a.errorCode,subErrorCode:a.subError,success:!1}),a}))}async acquireTokenByRefreshToken(e){if(!e)throw Q.createEmptyTokenRequestError();if(this.performanceClient?.addQueueMeasurement("refreshTokenClientAcquireTokenByRefreshToken",e.correlationId),!e.account)throw H.createNoAccountInSilentRequestError();if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return this.performanceClient?.setPreQueueTime(Fe,e.correlationId),this.acquireTokenWithCachedRefreshToken(e,!0)}catch(t){const a=t instanceof nt&&t.errorCode===ot.noTokensFoundError.code,r=t instanceof ve&&"invalid_grant"===t.errorCode&&"client_mismatch"===t.subError;if(a||r)return this.performanceClient?.setPreQueueTime(Fe,e.correlationId),this.acquireTokenWithCachedRefreshToken(e,!1);throw t}return this.performanceClient?.setPreQueueTime(Fe,e.correlationId),this.acquireTokenWithCachedRefreshToken(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){this.performanceClient?.addQueueMeasurement(Fe,e.correlationId);const a=this.performanceClient?.startMeasurement(Fe,e.correlationId);this.logger.verbose("RefreshTokenClientAcquireTokenWithCachedRefreshToken called",e.correlationId);const r=this.cacheManager.getRefreshToken(e.account,t);if(!r)throw a?.discard(),nt.createNoTokensFoundError();a?.end({success:!0});const i={...e,refreshToken:r.secret,authenticationScheme:e.authenticationScheme||M.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:De}};return this.performanceClient?.setPreQueueTime(Le,e.correlationId),this.acquireToken(i)}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(Ue,e.correlationId);const a=this.performanceClient?.startMeasurement(Ue,e.correlationId);this.performanceClient?.setPreQueueTime(qe,e.correlationId);const r=this.createTokenQueryParameters(e),i=st.appendQueryString(t.tokenEndpoint,r),o=await this.createTokenRequestBody(e),n=this.createTokenRequestHeaders(e.ccsCredential),p={clientId:this.config.authOptions.clientId,authority:t.canonicalAuthority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid};return this.executePostToTokenEndpoint(i,o,n,p,e.correlationId).then((e=>(a?.end({success:!0}),e))).catch((e=>{throw a?.end({success:!1}),e}))}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(qe,e.correlationId);const t=e.correlationId,a=this.performanceClient?.startMeasurement(Ve,t),r=new xe;if(r.addClientId(this.config.authOptions.clientId),r.addScopes(e.scopes,!0,this.config.authOptions.authority.options.OIDCOptions?.defaultScopes),r.addGrantType("refresh_token"),r.addClientInfo(),r.addLibraryInfo(this.config.libraryInfo),r.addApplicationTelemetry(this.config.telemetry.application),r.addThrottling(),this.serverTelemetryManager&&!Ne(this.config)&&r.addServerTelemetry(this.serverTelemetryManager),r.addCorrelationId(t),r.addRefreshToken(e.refreshToken),this.config.clientCredentials.clientSecret&&r.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const e=this.config.clientCredentials.clientAssertion;r.addClientAssertion(e.assertion),r.addClientAssertionType(e.assertionType)}if(e.authenticationScheme===M.POP){const t=new lt(this.cryptoUtils,this.performanceClient);this.performanceClient?.setPreQueueTime(Be,e.correlationId);const a=await t.generateCnf(e);r.addPopToken(a.reqCnfString)}else if(e.authenticationScheme===M.SSH){if(!e.sshJwk)throw a?.end({success:!1}),Q.createMissingSshJwkError();r.addSshJwk(e.sshJwk)}if((!Y.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&r.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case De:try{const t=B(e.ccsCredential.credential);r.addCcsOid(t)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case Pe:r.addCcsUpn(e.ccsCredential.credential)}return a?.end({success:!0}),r.createQueryString()}}class vt extends at{constructor(e,t){super(e,t)}async acquireToken(e){try{return await this.acquireCachedToken(e)}catch(t){if(t instanceof H&&t.errorCode===$.tokenRefreshRequired.code)return new ft(this.config,this.performanceClient).acquireTokenByRefreshToken(e);throw t}}async acquireCachedToken(e){if(!e)throw Q.createEmptyTokenRequestError();if(e.forceRefresh)throw this.serverTelemetryManager?.setCacheOutcome("1"),this.logger.info("SilentFlowClient:acquireCachedToken - Skipping cache because forceRefresh is true."),H.createRefreshRequiredError();if(!this.config.cacheOptions.claimsBasedCachingEnabled&&!Y.isEmptyObj(e.claims))throw this.logger.info("SilentFlowClient:acquireCachedToken - Skipping cache because claims-based caching is disabled and claims were requested."),H.createRefreshRequiredError();if(!e.account)throw H.createNoAccountInSilentRequestError();const t=e.authority||this.authority.getPreferredCache(),a=this.cacheManager.readCacheRecord(e.account,e,t);if(!a.accessToken)throw this.serverTelemetryManager?.setCacheOutcome(V),this.logger.info("SilentFlowClient:acquireCachedToken - No access token found in cache for the given properties."),H.createRefreshRequiredError();if(oe.wasClockTurnedBack(a.accessToken.cachedAt)||oe.isTokenExpired(a.accessToken.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.serverTelemetryManager?.setCacheOutcome(U),this.logger.info(`SilentFlowClient:acquireCachedToken - Cached access token is expired or will expire within ${this.config.systemOptions.tokenRenewalOffsetSeconds} seconds.`),H.createRefreshRequiredError();if(a.accessToken.refreshOn&&oe.isTokenExpired(a.accessToken.refreshOn,0))throw this.serverTelemetryManager?.setCacheOutcome(L),this.logger.info("SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'."),H.createRefreshRequiredError();return this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),await this.generateResultFromCacheRecord(a,e)}async generateResultFromCacheRecord(e,t){let a;if(e.idToken&&(a=X(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||0===t.maxAge){const e=a?.auth_time;if(!e)throw H.createAuthTimeNotFoundError();J(e,t.maxAge)}return await mt.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,a)}}class gt{constructor(){this.failedRequests=[],this.errors=[],this.cacheHits=0}static isServerTelemetryEntity(e,t){const a=0===e.indexOf(P.CACHE_KEY);let r=!0;return t&&(r=t.hasOwnProperty("failedRequests")&&t.hasOwnProperty("errors")&&t.hasOwnProperty("cacheHits")),a&&r}}class yt{constructor(e,t){this.cacheOutcome="0",this.cacheManager=t,this.apiId=e.apiId,this.correlationId=e.correlationId,this.wrapperSKU=e.wrapperSKU||o.EMPTY_STRING,this.wrapperVer=e.wrapperVer||o.EMPTY_STRING,this.telemetryCacheKey=P.CACHE_KEY+S+e.clientId}generateCurrentRequestHeaderValue(){const e=`${this.apiId}${P.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer].join(P.VALUE_SEPARATOR),a=[e,this.getRegionDiscoveryFields()].join(P.VALUE_SEPARATOR);return[P.SCHEMA_VERSION,a,t].join(P.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){const e=this.getLastRequests(),t=yt.maxErrorsToSend(e),a=e.failedRequests.slice(0,2*t).join(P.VALUE_SEPARATOR),r=e.errors.slice(0,t).join(P.VALUE_SEPARATOR),i=e.errors.length,o=[i,t<i?P.OVERFLOW_TRUE:P.OVERFLOW_FALSE].join(P.VALUE_SEPARATOR);return[P.SCHEMA_VERSION,e.cacheHits,a,r,o].join(P.CATEGORY_SEPARATOR)}cacheFailedRequest(e){const t=this.getLastRequests();t.errors.length>=P.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof q?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(P.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}incrementCacheHits(){const e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e),e.cacheHits}getLastRequests(){const e=new gt;return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||e}clearTelemetryCache(){const e=this.getLastRequests(),t=yt.maxErrorsToSend(e);if(t===e.errors.length)this.cacheManager.removeItem(this.telemetryCacheKey);else{const a=new gt;a.failedRequests=e.failedRequests.slice(2*t),a.errors=e.errors.slice(t),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,a)}}static maxErrorsToSend(e){let t,a=0,r=0;const i=e.errors.length;for(t=0;t<i;t++){const i=e.failedRequests[2*t]||o.EMPTY_STRING,n=e.failedRequests[2*t+1]||o.EMPTY_STRING,p=e.errors[t]||o.EMPTY_STRING;if(r+=i.toString().length+n.toString().length+p.length+3,!(r<P.MAX_LAST_HEADER_BYTES))break;a+=1}return a}getRegionDiscoveryFields(){const e=[];return e.push(this.regionUsed||o.EMPTY_STRING),e.push(this.regionSource||o.EMPTY_STRING),e.push(this.regionOutcome||o.EMPTY_STRING),e.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}}const wt={"https://login.microsoftonline.com/common/":{token_endpoint:"https://login.microsoftonline.com/common/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.microsoftonline.com/common/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://graph.microsoft.com/oidc/userinfo",authorization_endpoint:"https://login.microsoftonline.com/common/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.microsoftonline.com/common/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.microsoftonline.com/common/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.microsoftonline.com/common/kerberos",tenant_region_scope:null,cloud_instance_name:"microsoftonline.com",cloud_graph_host_name:"graph.windows.net",msgraph_host:"graph.microsoft.com",rbac_url:"https://pas.windows.net"},"https://login.chinacloudapi.cn/common/":{token_endpoint:"https://login.chinacloudapi.cn/common/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.chinacloudapi.cn/common/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo",authorization_endpoint:"https://login.chinacloudapi.cn/common/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.chinacloudapi.cn/common/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.chinacloudapi.cn/common/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.chinacloudapi.cn/common/kerberos",tenant_region_scope:null,cloud_instance_name:"partner.microsoftonline.cn",cloud_graph_host_name:"graph.chinacloudapi.cn",msgraph_host:"microsoftgraph.chinacloudapi.cn",rbac_url:"https://pas.chinacloudapi.cn"},"https://login.microsoftonline.us/common/":{token_endpoint:"https://login.microsoftonline.us/common/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.microsoftonline.us/common/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://graph.microsoft.com/oidc/userinfo",authorization_endpoint:"https://login.microsoftonline.us/common/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.microsoftonline.us/common/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.microsoftonline.us/common/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.microsoftonline.us/common/kerberos",tenant_region_scope:null,cloud_instance_name:"microsoftonline.us",cloud_graph_host_name:"graph.windows.net",msgraph_host:"graph.microsoft.com",rbac_url:"https://pasff.usgovcloudapi.net"},"https://login.microsoftonline.com/consumers/":{token_endpoint:"https://login.microsoftonline.com/consumers/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.microsoftonline.com/consumers/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.microsoftonline.com/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://graph.microsoft.com/oidc/userinfo",authorization_endpoint:"https://login.microsoftonline.com/consumers/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.microsoftonline.com/consumers/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.microsoftonline.com/consumers/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.microsoftonline.com/consumers/kerberos",tenant_region_scope:null,cloud_instance_name:"microsoftonline.com",cloud_graph_host_name:"graph.windows.net",msgraph_host:"graph.microsoft.com",rbac_url:"https://pas.windows.net"},"https://login.chinacloudapi.cn/consumers/":{token_endpoint:"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.chinacloudapi.cn/consumers/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.partner.microsoftonline.cn/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo",authorization_endpoint:"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.chinacloudapi.cn/consumers/kerberos",tenant_region_scope:null,cloud_instance_name:"partner.microsoftonline.cn",cloud_graph_host_name:"graph.chinacloudapi.cn",msgraph_host:"microsoftgraph.chinacloudapi.cn",rbac_url:"https://pas.chinacloudapi.cn"},"https://login.microsoftonline.us/consumers/":{token_endpoint:"https://login.microsoftonline.us/consumers/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.microsoftonline.us/consumers/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.microsoftonline.us/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://graph.microsoft.com/oidc/userinfo",authorization_endpoint:"https://login.microsoftonline.us/consumers/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.microsoftonline.us/consumers/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.microsoftonline.us/consumers/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.microsoftonline.us/consumers/kerberos",tenant_region_scope:null,cloud_instance_name:"microsoftonline.us",cloud_graph_host_name:"graph.windows.net",msgraph_host:"graph.microsoft.com",rbac_url:"https://pasff.usgovcloudapi.net"},"https://login.microsoftonline.com/organizations/":{token_endpoint:"https://login.microsoftonline.com/organizations/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.microsoftonline.com/organizations/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://graph.microsoft.com/oidc/userinfo",authorization_endpoint:"https://login.microsoftonline.com/organizations/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.microsoftonline.com/organizations/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.microsoftonline.com/organizations/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.microsoftonline.com/organizations/kerberos",tenant_region_scope:null,cloud_instance_name:"microsoftonline.com",cloud_graph_host_name:"graph.windows.net",msgraph_host:"graph.microsoft.com",rbac_url:"https://pas.windows.net"},"https://login.chinacloudapi.cn/organizations/":{token_endpoint:"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.chinacloudapi.cn/organizations/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo",authorization_endpoint:"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.chinacloudapi.cn/organizations/kerberos",tenant_region_scope:null,cloud_instance_name:"partner.microsoftonline.cn",cloud_graph_host_name:"graph.chinacloudapi.cn",msgraph_host:"microsoftgraph.chinacloudapi.cn",rbac_url:"https://pas.chinacloudapi.cn"},"https://login.microsoftonline.us/organizations/":{token_endpoint:"https://login.microsoftonline.us/organizations/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.microsoftonline.us/organizations/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://graph.microsoft.com/oidc/userinfo",authorization_endpoint:"https://login.microsoftonline.us/organizations/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.microsoftonline.us/organizations/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.microsoftonline.us/organizations/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.microsoftonline.us/organizations/kerberos",tenant_region_scope:null,cloud_instance_name:"microsoftonline.us",cloud_graph_host_name:"graph.windows.net",msgraph_host:"graph.microsoft.com",rbac_url:"https://pasff.usgovcloudapi.net"}},_t={"https://login.microsoftonline.com/common/":{tenant_discovery_endpoint:"https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},"https://login.chinacloudapi.cn/common/":{tenant_discovery_endpoint:"https://login.chinacloudapi.cn/common/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},"https://login.microsoftonline.us/common/":{tenant_discovery_endpoint:"https://login.microsoftonline.us/common/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},"https://login.microsoftonline.com/consumers/":{tenant_discovery_endpoint:"https://login.microsoftonline.com/consumers/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},"https://login.chinacloudapi.cn/consumers/":{tenant_discovery_endpoint:"https://login.chinacloudapi.cn/consumers/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},"https://login.microsoftonline.us/consumers/":{tenant_discovery_endpoint:"https://login.microsoftonline.us/consumers/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},"https://login.microsoftonline.com/organizations/":{tenant_discovery_endpoint:"https://login.microsoftonline.com/organizations/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},"https://login.chinacloudapi.cn/organizations/":{tenant_discovery_endpoint:"https://login.chinacloudapi.cn/organizations/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},"https://login.microsoftonline.us/organizations/":{tenant_discovery_endpoint:"https://login.microsoftonline.us/organizations/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]}},Tt=new Set;for(const e in _t)for(const t of _t[e].metadata)for(const e of t.aliases)Tt.add(e);class Et{constructor(){this.expiresAt=oe.nowSeconds()+86400}updateCloudDiscoveryMetadata(e,t){this.aliases=e.aliases,this.preferred_cache=e.preferred_cache,this.preferred_network=e.preferred_network,this.aliasesFromNetwork=t}updateEndpointMetadata(e,t){this.authorization_endpoint=e.authorization_endpoint,this.token_endpoint=e.token_endpoint,this.end_session_endpoint=e.end_session_endpoint,this.issuer=e.issuer,this.endpointsFromNetwork=t,this.jwks_uri=e.jwks_uri}updateCanonicalAuthority(e){this.canonical_authority=e}resetExpiresAt(){this.expiresAt=oe.nowSeconds()+86400}isExpired(){return this.expiresAt<=oe.nowSeconds()}static isAuthorityMetadataEntity(e,t){return!!t&&0===e.indexOf(I)&&t.hasOwnProperty("aliases")&&t.hasOwnProperty("preferred_cache")&&t.hasOwnProperty("preferred_network")&&t.hasOwnProperty("canonical_authority")&&t.hasOwnProperty("authorization_endpoint")&&t.hasOwnProperty("token_endpoint")&&t.hasOwnProperty("issuer")&&t.hasOwnProperty("aliasesFromNetwork")&&t.hasOwnProperty("endpointsFromNetwork")&&t.hasOwnProperty("expiresAt")&&t.hasOwnProperty("jwks_uri")}}class St{constructor(e,t,a){this.networkInterface=e,this.performanceClient=t,this.correlationId=a}async detectRegion(e,t){this.performanceClient?.addQueueMeasurement(Ze,this.correlationId);let a=e;if(a)t.region_source="3";else{const e=St.IMDS_OPTIONS;try{this.performanceClient?.setPreQueueTime(et,this.correlationId);const r=await this.getRegionFromIMDS(o.IMDS_VERSION,e);if(200===r.status&&(a=r.body,t.region_source="4"),400===r.status){this.performanceClient?.setPreQueueTime(tt,this.correlationId);const r=await this.getCurrentVersion(e);if(!r)return t.region_source="1",null;this.performanceClient?.setPreQueueTime(et,this.correlationId);const i=await this.getRegionFromIMDS(r,e);200===i.status&&(a=i.body,t.region_source="4")}}catch(e){return t.region_source="1",null}}return a||(t.region_source="1"),a||null}async getRegionFromIMDS(e,t){return this.performanceClient?.addQueueMeasurement(et,this.correlationId),this.networkInterface.sendGetRequestAsync(`${o.IMDS_ENDPOINT}?api-version=${e}&format=text`,t,o.IMDS_TIMEOUT)}async getCurrentVersion(e){this.performanceClient?.addQueueMeasurement(tt,this.correlationId);try{const t=await this.networkInterface.sendGetRequestAsync(`${o.IMDS_ENDPOINT}?format=json`,e);return 400===t.status&&t.body&&t.body["newest-versions"]&&t.body["newest-versions"].length>0?t.body["newest-versions"][0]:null}catch(e){return null}}}St.IMDS_OPTIONS={headers:{Metadata:"true"}};class Ct{constructor(e,t,a,r,i,o,n){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=a,this.authorityOptions=r,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=i,this.performanceClient=o,this.correlationId=n,this.regionDiscovery=new St(t,this.performanceClient,this.correlationId)}getAuthorityType(e){if(e.HostNameAndPort.endsWith(o.CIAM_AUTH_URL))return 3;const t=e.PathSegments;if(t.length)switch(t[0].toLowerCase()){case o.ADFS:return 1;case o.DSTS:return 2}return 0}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new st(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw H.createEndpointDiscoveryIncompleteError("Discovery incomplete.")}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw H.createEndpointDiscoveryIncompleteError("Discovery incomplete.")}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw H.createEndpointDiscoveryIncompleteError("Discovery incomplete.")}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw H.createLogoutNotSupportedError();return this.replacePath(this.metadata.end_session_endpoint)}throw H.createEndpointDiscoveryIncompleteError("Discovery incomplete.")}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw H.createEndpointDiscoveryIncompleteError("Discovery incomplete.")}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw H.createEndpointDiscoveryIncompleteError("Discovery incomplete.")}canReplaceTenant(e){return 1===e.PathSegments.length&&!Ct.reservedTenantDomains.has(e.PathSegments[0])&&0===this.getAuthorityType(e)&&this.protocolMode===z.AAD}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e;const a=new st(this.metadata.canonical_authority).getUrlComponents(),r=a.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach(((e,i)=>{let o=r[i];if(0===i&&this.canReplaceTenant(a)){const e=new st(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];o!==e&&(this.logger.verbose(`Replacing tenant domain name ${o} with id ${e}`),o=e)}e!==o&&(t=t.replace(`/${o}/`,`/${e}/`))})),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){const e=this.hostnameAndPort;return 1===this.authorityType||this.protocolMode!==z.AAD&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){this.performanceClient?.addQueueMeasurement(Ke,this.correlationId);let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);e||(e=new Et,e.updateCanonicalAuthority(this.canonicalAuthority)),this.performanceClient?.setPreQueueTime(Ye,this.correlationId);const t=await this.updateCloudDiscoveryMetadata(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network),this.performanceClient?.setPreQueueTime(Xe,this.correlationId);const a=await this.updateEndpointMetadata(e);t!==k&&a!==k&&(e.resetExpiresAt(),e.updateCanonicalAuthority(this.canonicalAuthority));const r=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(r,e),this.metadata=e}async updateEndpointMetadata(e){this.performanceClient?.addQueueMeasurement(Xe,this.correlationId),this.logger.verbose("Attempting to get endpoint metadata from authority configuration");let t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),e.updateEndpointMetadata(t,!1),N;if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{let t=this.getEndpointMetadataFromHardcodedValues();if(t)return this.logger.verbose("Found endpoint metadata from hardcoded values."),this.authorityOptions.azureRegionConfiguration?.azureRegion&&(this.performanceClient?.setPreQueueTime(Je,this.correlationId),this.logger.verbose("Found azure region configuration. Updating endpoints with regional information."),t=await this.updateMetadataWithRegionalInformation(t)),e.updateEndpointMetadata(t,!1),D;this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}const a=e.isExpired();if(this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!a)return this.logger.verbose("Found endpoint metadata in the cache."),k;if(a&&this.logger.verbose("The metadata entity is expired."),this.logger.verbose("Did not find cached endpoint metadata... Attempting to get endpoint metadata from the network."),this.performanceClient?.setPreQueueTime(We,this.correlationId),t=await this.getEndpointMetadataFromNetwork(),t)return this.logger.verbose("Endpoint metadata was successfully returned from getEndpointMetadataFromNetwork()"),this.authorityOptions.azureRegionConfiguration?.azureRegion&&(this.performanceClient?.setPreQueueTime(Je,this.correlationId),this.logger.verbose("Found azure region configuration. Updating endpoints with regional information."),t=await this.updateMetadataWithRegionalInformation(t)),e.updateEndpointMetadata(t,!0),O;throw this.logger.error("Did not find endpoint metadata from network... Metadata could not be obtained from config, cache, network or hardcoded values. Throwing Untrusted Authority Error."),H.createUnableToGetOpenidConfigError(this.defaultOpenIdConfigurationEndpoint)}isAuthoritySameType(e){return new st(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch(e){throw Q.createInvalidAuthorityMetadataError()}return null}async getEndpointMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(We,this.correlationId);const e=this.performanceClient?.startMeasurement(We,this.correlationId),t={},a=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${a}`);try{const r=await this.networkInterface.sendGetRequestAsync(a,t),i=function(e){return e.hasOwnProperty("authorization_endpoint")&&e.hasOwnProperty("token_endpoint")&&e.hasOwnProperty("issuer")&&e.hasOwnProperty("jwks_uri")}(r.body);return i?(e?.end({success:!0}),r.body):(e?.end({success:!1,errorCode:"invalid_response"}),this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null)}catch(t){return e?.end({success:!1,errorCode:"request_failure"}),this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${t}`),null}}getEndpointMetadataFromHardcodedValues(){return this.canonicalAuthority in wt?wt[this.canonicalAuthority]:null}async updateMetadataWithRegionalInformation(e){this.performanceClient?.addQueueMeasurement(Je,this.correlationId);const t=this.authorityOptions.azureRegionConfiguration?.azureRegion;if(t){if(t!==o.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome="2",this.regionDiscoveryMetadata.region_used=t,Ct.replaceWithRegionalInformation(e,t);this.performanceClient?.setPreQueueTime(Ze,this.correlationId);const a=await this.regionDiscovery.detectRegion(this.authorityOptions.azureRegionConfiguration?.environmentRegion,this.regionDiscoveryMetadata);if(a)return this.regionDiscoveryMetadata.region_outcome="4",this.regionDiscoveryMetadata.region_used=a,Ct.replaceWithRegionalInformation(e,a);this.regionDiscoveryMetadata.region_outcome="5"}return e}async updateCloudDiscoveryMetadata(e){this.performanceClient?.addQueueMeasurement(Ye,this.correlationId),this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||o.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||o.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${e.canonical_authority||o.NOT_APPLICABLE}`);let t=this.getCloudDiscoveryMetadataFromConfig();if(t)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),e.updateCloudDiscoveryMetadata(t,!1),N;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{const t=this.getCloudDiscoveryMetadataFromHardcodedValues();if(t)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),e.updateCloudDiscoveryMetadata(t,!1),D;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}const a=e.isExpired();if(this.isAuthoritySameType(e)&&e.aliasesFromNetwork&&!a)return this.logger.verbose("Found cloud discovery metadata in the cache."),k;if(a&&this.logger.verbose("The metadata entity is expired."),this.logger.verbose("Did not find cloud discovery metadata in the cache... Attempting to get cloud discovery metadata from the network."),this.performanceClient?.setPreQueueTime(Qe,this.correlationId),t=await this.getCloudDiscoveryMetadataFromNetwork(),t)return this.logger.verbose("cloud discovery metadata was successfully returned from getCloudDiscoveryMetadataFromNetwork()"),e.updateCloudDiscoveryMetadata(t,!0),O;throw this.logger.error("Did not find cloud discovery metadata from network... Metadata could not be obtained from config, cache, network or hardcoded values. Throwing Untrusted Authority Error."),Q.createUntrustedAuthorityError()}getCloudDiscoveryMetadataFromConfig(){if(3===this.authorityType)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),Ct.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");const e=JSON.parse(this.authorityOptions.cloudDiscoveryMetadata),t=Ct.getCloudDiscoveryMetadataFromNetworkResponse(e.metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),t)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),t;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch(e){throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),Q.createInvalidCloudDiscoveryMetadataError()}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),Ct.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(Qe,this.correlationId);const e=`${o.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,t={};let a=null;try{const r=await this.networkInterface.sendGetRequestAsync(e,t);let i,n;if(function(e){return e.hasOwnProperty("tenant_discovery_endpoint")&&e.hasOwnProperty("metadata")}(r.body))i=r.body,n=i.metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${i.tenant_discovery_endpoint}`);else{if(!function(e){return e.hasOwnProperty("error")&&e.hasOwnProperty("error_description")}(r.body))return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${r.status}`),i=r.body,i.error===o.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${i.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${i.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),n=[]}this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),a=Ct.getCloudDiscoveryMetadataFromNetworkResponse(n,this.hostnameAndPort)}catch(e){if(e instanceof q)this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.\nError: ${e.errorCode}\nError Description: ${e.errorMessage}`);else{const t=e;this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\nError: ${t.name}\nError Description: ${t.message}`)}return null}return a||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),a=Ct.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),a}getCloudDiscoveryMetadataFromHardcodedValues(){if(this.canonicalAuthority in _t){const e=_t[this.canonicalAuthority];return Ct.getCloudDiscoveryMetadataFromNetworkResponse(e.metadata,this.hostnameAndPort)}return null}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter((e=>st.getDomainFromUrl(e).toLowerCase()===this.hostnameAndPort)).length>0}static generateAuthority(e,t){let a;if(t&&t.azureCloudInstance!==_e.None){const e=t.tenant?t.tenant:o.DEFAULT_COMMON_TENANT;a=`${t.azureCloudInstance}/${e}/`}return a||e}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}static getCloudDiscoveryMetadataFromNetworkResponse(e,t){for(let a=0;a<e.length;a++){const r=e[a];if(r.aliases.indexOf(t)>-1)return r}return null}getPreferredCache(){if(this.discoveryComplete())return this.metadata.preferred_cache;throw H.createEndpointDiscoveryIncompleteError("Discovery incomplete.")}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return Tt.has(e)}static isPublicCloudAuthority(e){return o.KNOWN_PUBLIC_CLOUDS.indexOf(e)>=0}static buildRegionalAuthorityString(e,t,a){const r=new st(e);r.validateAsUri();const i=r.getUrlComponents();let n=`${t}.${i.HostNameAndPort}`;this.isPublicCloudAuthority(i.HostNameAndPort)&&(n=`${t}.${o.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);const p=st.constructAuthorityUriFromObject({...r.getUrlComponents(),HostNameAndPort:n}).urlString;return a?`${p}?${a}`:p}static replaceWithRegionalInformation(e,t){const a={...e};return a.authorization_endpoint=Ct.buildRegionalAuthorityString(a.authorization_endpoint,t),a.token_endpoint=Ct.buildRegionalAuthorityString(a.token_endpoint,t,o.REGIONAL_AUTH_NON_MSI_QUERY_STRING),a.end_session_endpoint&&(a.end_session_endpoint=Ct.buildRegionalAuthorityString(a.end_session_endpoint,t)),a}static transformCIAMAuthority(e){let t=e.endsWith(o.FORWARD_SLASH)?e:`${e}${o.FORWARD_SLASH}`;const a=new st(e).getUrlComponents();return 0===a.PathSegments.length&&a.HostNameAndPort.endsWith(o.CIAM_AUTH_URL)&&(t=`${t}${a.HostNameAndPort.split(".")[0]}${o.AAD_TENANT_DOMAIN_SUFFIX}`),t}}Ct.reservedTenantDomains=new Set(["{tenant}","{tenantid}",c.COMMON,c.CONSUMERS,c.ORGANIZATIONS]);class bt{static async createDiscoveredInstance(e,t,a,r,i,o,n){o?.addQueueMeasurement("authorityFactoryCreateDiscoveredInstance",n);const p=Ct.transformCIAMAuthority(e),d=bt.createInstance(p,t,a,r,i,o,n);try{return o?.setPreQueueTime(Ke,n),await d.resolveEndpointsAsync(),d}catch(e){throw H.createEndpointDiscoveryIncompleteError(e)}}static createInstance(e,t,a,r,i,o,n){if(!e)throw Q.createUrlEmptyError();return new Ct(e,t,a,r,i,o,n)}}class At{static getNetworkResponse(e,t,a){return{headers:e,body:t,status:a}}static urlToHttpOptions(e){const t={protocol:e.protocol,hostname:e.hostname&&e.hostname.startsWith("[")?e.hostname.slice(1,-1):e.hostname,hash:e.hash,search:e.search,pathname:e.pathname,path:`${e.pathname||""}${e.search||""}`,href:e.href};return""!==e.port&&(t.port=Number(e.port)),(e.username||e.password)&&(t.auth=`${decodeURIComponent(e.username)}:${decodeURIComponent(e.password)}`),t}}var Rt=a(3685),It=a(5687);class Nt{constructor(e,t){this.proxyUrl=e||"",this.customAgentOptions=t||{}}async sendGetRequestAsync(e,t){return this.proxyUrl?kt(e,this.proxyUrl,"get",t,this.customAgentOptions):Ot(e,"get",t,this.customAgentOptions)}async sendPostRequestAsync(e,t,a){return this.proxyUrl?kt(e,this.proxyUrl,le,t,this.customAgentOptions,a):Ot(e,le,t,this.customAgentOptions,a)}}const kt=(e,t,a,r,i,o)=>{const n=new URL(e),p=new URL(t),d=r?.headers||{},s={host:p.hostname,port:p.port,method:"CONNECT",path:n.hostname,headers:d};o&&(s.timeout=o),i&&Object.keys(i).length&&(s.agent=new Rt.Agent(i));let l="";if(a===le){const e=r?.body||"";l=`Content-Type: application/x-www-form-urlencoded\r\nContent-Length: ${e.length}\r\n\r\n${e}`}const c=`${a.toUpperCase()} ${n.href} HTTP/1.1\r\nHost: ${n.host}\r\nConnection: close\r\n`+l+"\r\n";return new Promise(((e,t)=>{const a=Rt.request(s);s.timeout&&a.on("timeout",(()=>{a.destroy(),t(new Error("Request time out"))})),a.end(),a.on("connect",((r,i)=>{const o=r?.statusCode||500;(o<200||o>299)&&(a.destroy(),i.destroy(),t(new Error(`Error connecting to proxy. Http status code: ${r.statusCode}. Http status message: ${r?.statusMessage||"Unknown"}`))),s.timeout&&(i.setTimeout(s.timeout),i.on("timeout",(()=>{a.destroy(),i.destroy(),t(new Error("Request time out"))}))),i.write(c);const n=[];i.on("data",(e=>{n.push(e)})),i.on("end",(()=>{const t=Buffer.concat([...n]).toString().split("\r\n"),r=parseInt(t[0].split(" ")[1]),i=t[0].split(" ").slice(2).join(" "),o=t[t.length-1],p=t.slice(1,t.length-2),d=new Map;p.forEach((e=>{const t=e.split(new RegExp(/:\s(.*)/s)),a=t[0];let r=t[1];try{const e=JSON.parse(r);e&&"object"==typeof e&&(r=e)}catch(e){}d.set(a,r)}));const s=Object.fromEntries(d),l=At.getNetworkResponse(s,Dt(r,i,s,o),r);(r<200||r>299)&&l.body.error!==ue&&a.destroy(),e(l)})),i.on("error",(e=>{a.destroy(),i.destroy(),t(new Error(e.toString()))}))})),a.on("error",(e=>{a.destroy(),t(new Error(e.toString()))}))}))},Ot=(e,t,a,r,i)=>{const o=t===le,n=a?.body||"",p=new URL(e),d={method:t,headers:a?.headers||{},...At.urlToHttpOptions(p)};return i&&(d.timeout=i),r&&Object.keys(r).length&&(d.agent=new It.Agent(r)),o&&(d.headers={...d.headers,"Content-Length":n.length}),new Promise(((e,t)=>{const a=It.request(d);i&&a.on("timeout",(()=>{a.destroy(),t(new Error("Request time out"))})),o&&a.write(n),a.end(),a.on("response",(t=>{const r=t.headers,i=t.statusCode,o=t.statusMessage,n=[];t.on("data",(e=>{n.push(e)})),t.on("end",(()=>{const t=Buffer.concat([...n]).toString(),p=r,d=At.getNetworkResponse(p,Dt(i,o,p,t),i);(i<200||i>299)&&d.body.error!==ue&&a.destroy(),e(d)}))})),a.on("error",(e=>{a.destroy(),t(new Error(e.toString()))}))}))},Dt=(e,t,a,r)=>{let i;try{i=JSON.parse(r)}catch(r){let o,n;e>=400&&e<=499?(o="client_error",n="A client"):e>=500&&e<=599?(o="server_error",n="A server"):(o="unknown_error",n="An unknown"),i={error:o,error_description:`${n} error occured.\nHttp status code: ${e}\nHttp status message: ${t||"Unknown"}\nHeaders: ${JSON.stringify(a)}`}}return i},Pt={clientId:o.EMPTY_STRING,authority:o.DEFAULT_AUTHORITY,clientSecret:o.EMPTY_STRING,clientAssertion:o.EMPTY_STRING,clientCertificate:{thumbprint:o.EMPTY_STRING,privateKey:o.EMPTY_STRING,x5c:o.EMPTY_STRING},knownAuthorities:[],cloudDiscoveryMetadata:o.EMPTY_STRING,authorityMetadata:o.EMPTY_STRING,clientCapabilities:[],protocolMode:z.AAD,azureCloudOptions:{azureCloudInstance:_e.None,tenant:o.EMPTY_STRING},skipAuthorityMetadataCache:!1},Mt={claimsBasedCachingEnabled:!1},xt={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:ge.Info},Vt={loggerOptions:xt,networkClient:new Nt,proxyUrl:o.EMPTY_STRING,customAgentOptions:{}},Ut={application:{appName:o.EMPTY_STRING,appVersion:o.EMPTY_STRING}};function Lt({auth:e,broker:t,cache:a,system:r,telemetry:i}){const o={...Vt,networkClient:new Nt(r?.proxyUrl,r?.customAgentOptions),loggerOptions:r?.loggerOptions||xt};return{auth:{...Pt,...e},broker:{...t},cache:{...Mt,...a},system:{...o,...r},telemetry:{...Ut,...i}}}var Ft=a(2259);class qt{generateGuid(){return(0,Ft.Z)()}isGuid(e){return/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(e)}}class $t{static base64Encode(e,t){return Buffer.from(e,t).toString("base64")}static base64EncodeUrl(e,t){return $t.base64Encode(e,t).replace(/=/g,o.EMPTY_STRING).replace(/\+/g,"-").replace(/\//g,"_")}static base64Decode(e){return Buffer.from(e,"base64").toString("utf8")}static base64DecodeUrl(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");for(;t.length%4;)t+="=";return $t.base64Decode(t)}}var Ht=a(6113);class jt{sha256(e){return Ht.createHash("sha256").update(e).digest()}}class Bt{constructor(){this.hashUtils=new jt}async generatePkceCodes(){const e=this.generateCodeVerifier();return{verifier:e,challenge:this.generateCodeChallengeFromVerifier(e)}}generateCodeVerifier(){const e=[];for(;e.length<=32;){const t=Ht.randomBytes(1)[0];if(t>=198)continue;const a=t%66;e.push(ce[a])}const t=e.join(o.EMPTY_STRING);return $t.base64EncodeUrl(t)}generateCodeChallengeFromVerifier(e){return $t.base64EncodeUrl(this.hashUtils.sha256(e).toString("base64"),"base64")}}class zt{constructor(){this.pkceGenerator=new Bt,this.guidGenerator=new qt,this.hashUtils=new jt}createNewGuid(){return this.guidGenerator.generateGuid()}base64Encode(e){return $t.base64Encode(e)}base64Decode(e){return $t.base64Decode(e)}generatePkceCodes(){return this.pkceGenerator.generatePkceCodes()}getPublicKeyThumbprint(){throw new Error("Method not implemented.")}removeTokenBindingKey(){throw new Error("Method not implemented.")}clearKeystore(){throw new Error("Method not implemented.")}signJwt(){throw new Error("Method not implemented.")}async hashString(e){return $t.base64EncodeUrl(this.hashUtils.sha256(e).toString("base64"),"base64")}}class Gt{static isThrottlingEntity(e,t){let a=!1;e&&(a=0===e.indexOf(x));let r=!0;return t&&(r=t.hasOwnProperty("throttleTime")),a&&r}}class Kt extends te{constructor(e,t,a){super(t,a,e),this.cache={},this.changeEmitters=[],this.logger=e}registerChangeEmitter(e){this.changeEmitters.push(e)}emitChange(){this.changeEmitters.forEach((e=>e.call(null)))}cacheToInMemoryCache(e){const t={accounts:{},idTokens:{},accessTokens:{},refreshTokens:{},appMetadata:{}};for(const a in e)if(e[a]instanceof G)t.accounts[a]=e[a];else if(e[a]instanceof ie)t.idTokens[a]=e[a];else if(e[a]instanceof ne)t.accessTokens[a]=e[a];else if(e[a]instanceof pe)t.refreshTokens[a]=e[a];else{if(!(e[a]instanceof de))continue;t.appMetadata[a]=e[a]}return t}inMemoryCacheToCache(e){let t=this.getCache();return t={...t,...e.accounts,...e.idTokens,...e.accessTokens,...e.refreshTokens,...e.appMetadata},t}getInMemoryCache(){return this.logger.trace("Getting in-memory cache"),this.cacheToInMemoryCache(this.getCache())}setInMemoryCache(e){this.logger.trace("Setting in-memory cache");const t=this.inMemoryCacheToCache(e);this.setCache(t),this.emitChange()}getCache(){return this.logger.trace("Getting cache key-value store"),this.cache}setCache(e){this.logger.trace("Setting cache key value store"),this.cache=e,this.emitChange()}getItem(e){return this.logger.tracePii(`Item key: ${e}`),this.getCache()[e]}setItem(e,t){this.logger.tracePii(`Item key: ${e}`);const a=this.getCache();a[e]=t,this.setCache(a)}getAccountKeys(){const e=this.getInMemoryCache();return Object.keys(e.accounts)}getTokenKeys(){const e=this.getInMemoryCache();return{idToken:Object.keys(e.idTokens),accessToken:Object.keys(e.accessTokens),refreshToken:Object.keys(e.refreshTokens)}}getAccount(e){const t=this.getItem(e);return G.isAccountEntity(t)?t:null}setAccount(e){const t=e.generateAccountKey();this.setItem(t,e)}getIdTokenCredential(e){const t=this.getItem(e);return ie.isIdTokenEntity(t)?t:null}setIdTokenCredential(e){const t=e.generateCredentialKey();this.setItem(t,e)}getAccessTokenCredential(e){const t=this.getItem(e);return ne.isAccessTokenEntity(t)?t:null}setAccessTokenCredential(e){const t=e.generateCredentialKey();this.setItem(t,e)}getRefreshTokenCredential(e){const t=this.getItem(e);return pe.isRefreshTokenEntity(t)?t:null}setRefreshTokenCredential(e){const t=e.generateCredentialKey();this.setItem(t,e)}getAppMetadata(e){const t=this.getItem(e);return de.isAppMetadataEntity(e,t)?t:null}setAppMetadata(e){const t=e.generateAppMetadataKey();this.setItem(t,e)}getServerTelemetry(e){const t=this.getItem(e);return t&&gt.isServerTelemetryEntity(e,t)?t:null}setServerTelemetry(e,t){this.setItem(e,t)}getAuthorityMetadata(e){const t=this.getItem(e);return t&&Et.isAuthorityMetadataEntity(e,t)?t:null}getAuthorityMetadataKeys(){return this.getKeys().filter((e=>this.isAuthorityMetadata(e)))}setAuthorityMetadata(e,t){this.setItem(e,t)}getThrottlingCache(e){const t=this.getItem(e);return t&&Gt.isThrottlingEntity(e,t)?t:null}setThrottlingCache(e,t){this.setItem(e,t)}removeItem(e){this.logger.tracePii(`Item key: ${e}`);let t=!1;const a=this.getCache();return a[e]&&(delete a[e],t=!0),t&&(this.setCache(a),this.emitChange()),t}containsKey(e){return this.getKeys().includes(e)}getKeys(){this.logger.trace("Retrieving all cache keys");const e=this.getCache();return[...Object.keys(e)]}async clear(){this.logger.trace("Clearing cache entries created by MSAL"),this.getKeys().forEach((e=>{this.removeItem(e)})),this.emitChange()}static generateInMemoryCache(e){return se.deserializeAllCache(se.deserializeJSONBlob(e))}static generateJsonCache(e){return i.serializeAllCache(e)}updateCredentialCacheKey(e,t){const a=t.generateCredentialKey();if(e!==a){const r=this.getItem(e);if(r)return this.removeItem(e),this.setItem(a,r),this.logger.verbose(`Updated an outdated ${t.credentialType} cache key`),a;this.logger.error(`Attempted to update an outdated ${t.credentialType} cache key but no item matching the outdated key was found in storage`)}return e}}const Qt={},Yt={},Wt={},Xt={},Jt={};class Zt{constructor(e,t,a){this.cacheHasChanged=!1,this.storage=e,this.storage.registerChangeEmitter(this.handleChangeEvent.bind(this)),a&&(this.persistence=a),this.logger=t}hasChanged(){return this.cacheHasChanged}serialize(){this.logger.trace("Serializing in-memory cache");let e=i.serializeAllCache(this.storage.getInMemoryCache());return this.cacheSnapshot?(this.logger.trace("Reading cache snapshot from disk"),e=this.mergeState(JSON.parse(this.cacheSnapshot),e)):this.logger.trace("No cache snapshot to merge"),this.cacheHasChanged=!1,JSON.stringify(e)}deserialize(e){if(this.logger.trace("Deserializing JSON to in-memory cache"),this.cacheSnapshot=e,this.cacheSnapshot){this.logger.trace("Reading cache snapshot from disk");const e=se.deserializeAllCache(this.overlayDefaults(JSON.parse(this.cacheSnapshot)));this.storage.setInMemoryCache(e)}else this.logger.trace("No cache snapshot to deserialize")}getKVStore(){return this.storage.getCache()}async getAllAccounts(){let e;this.logger.trace("getAllAccounts called");try{return this.persistence&&(e=new ct(this,!1),await this.persistence.beforeCacheAccess(e)),this.storage.getAllAccounts()}finally{this.persistence&&e&&await this.persistence.afterCacheAccess(e)}}async getAccountByHomeId(e){const t=await this.getAllAccounts();return e&&t&&t.length&&t.filter((t=>t.homeAccountId===e))[0]||null}async getAccountByLocalId(e){const t=await this.getAllAccounts();return e&&t&&t.length&&t.filter((t=>t.localAccountId===e))[0]||null}async removeAccount(e){let t;this.logger.trace("removeAccount called");try{this.persistence&&(t=new ct(this,!0),await this.persistence.beforeCacheAccess(t)),await this.storage.removeAccount(G.generateAccountCacheKey(e))}finally{this.persistence&&t&&await this.persistence.afterCacheAccess(t)}}handleChangeEvent(){this.cacheHasChanged=!0}mergeState(e,t){this.logger.trace("Merging in-memory cache with cache snapshot");const a=this.mergeRemovals(e,t);return this.mergeUpdates(a,t)}mergeUpdates(e,t){return Object.keys(t).forEach((a=>{const r=t[a];if(e.hasOwnProperty(a)){const t=null!==r,i="object"==typeof r,o=!Array.isArray(r),n=void 0!==e[a]&&null!==e[a];t&&i&&o&&n?this.mergeUpdates(e[a],r):e[a]=r}else null!==r&&(e[a]=r)})),e}mergeRemovals(e,t){this.logger.trace("Remove updated entries in cache");const a=e.Account?this.mergeRemovalsDict(e.Account,t.Account):e.Account,r=e.AccessToken?this.mergeRemovalsDict(e.AccessToken,t.AccessToken):e.AccessToken,i=e.RefreshToken?this.mergeRemovalsDict(e.RefreshToken,t.RefreshToken):e.RefreshToken,o=e.IdToken?this.mergeRemovalsDict(e.IdToken,t.IdToken):e.IdToken,n=e.AppMetadata?this.mergeRemovalsDict(e.AppMetadata,t.AppMetadata):e.AppMetadata;return{...e,Account:a,AccessToken:r,RefreshToken:i,IdToken:o,AppMetadata:n}}mergeRemovalsDict(e,t){const a={...e};return Object.keys(e).forEach((e=>{t&&t.hasOwnProperty(e)||delete a[e]})),a}overlayDefaults(e){return this.logger.trace("Overlaying input cache with the default cache"),{Account:{...Qt,...e.Account},IdToken:{...Yt,...e.IdToken},AccessToken:{...Wt,...e.AccessToken},RefreshToken:{...Xt,...e.RefreshToken},AppMetadata:{...Jt,...e.AppMetadata}}}}const ea="2.1.0",ta="invalid_loopback_server_address_type",aa="Loopback server address is not type string. This is unexpected.",ra="unable_to_load_redirectUrl",ia="Loopback server callback was invoked without a url. This is unexpected.",oa="no_auth_code_in_response",na="No auth code found in the server response. Please check your network trace to determine what happened.",pa="no_loopback_server_exists",da="No loopback server exists yet.",sa="loopback_server_already_exists",la="Loopback server already exists. Cannot create another.",ca="loopback_server_timeout",ma="Timed out waiting for auth code listener to be registered.",ua="state_not_found",ha="State not found. Please verify that the request originated from msal.";class fa extends q{constructor(e,t){super(e,t),this.name="NodeAuthError"}static createInvalidLoopbackAddressTypeError(){return new fa(ta,`${aa}`)}static createUnableToLoadRedirectUrlError(){return new fa(ra,`${ia}`)}static createNoAuthCodeInResponseError(){return new fa(oa,`${na}`)}static createNoLoopbackServerExistsError(){return new fa(pa,`${da}`)}static createLoopbackServerAlreadyExistsError(){return new fa(sa,`${la}`)}static createLoopbackServerTimeoutError(){return new fa(ca,`${ma}`)}static createStateNotFoundError(){return new fa(ua,ha)}}class va extends at{constructor(e){super(e)}async acquireToken(e){this.logger.info("in acquireToken call in username-password client");const t=oe.nowSeconds(),a=await this.executeTokenRequest(this.authority,e),r=new mt(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return r.validateTokenResponse(a.body),r.handleServerTokenResponse(a.body,this.authority,t,e)}async executeTokenRequest(e,t){const a=this.createTokenQueryParameters(t),r=st.appendQueryString(e.tokenEndpoint,a),i=this.createTokenRequestBody(t),o=this.createTokenRequestHeaders({credential:t.username,type:Pe}),n={clientId:this.config.authOptions.clientId,authority:e.canonicalAuthority,scopes:t.scopes,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid};return this.executePostToTokenEndpoint(r,i,o,n,t.correlationId)}createTokenRequestBody(e){const t=new xe;t.addClientId(this.config.authOptions.clientId),t.addUsername(e.username),t.addPassword(e.password),t.addScopes(e.scopes),t.addResponseTypeForTokenAndIdToken(),t.addGrantType("password"),t.addClientInfo(),t.addLibraryInfo(this.config.libraryInfo),t.addApplicationTelemetry(this.config.telemetry.application),t.addThrottling(),this.serverTelemetryManager&&t.addServerTelemetry(this.serverTelemetryManager);const a=e.correlationId||this.config.cryptoInterface.createNewGuid();if(t.addCorrelationId(a),this.config.clientCredentials.clientSecret&&t.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const e=this.config.clientCredentials.clientAssertion;t.addClientAssertion(e.assertion),t.addClientAssertionType(e.assertionType)}return(!Y.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.username&&t.addCcsUpn(e.username),t.createQueryString()}}class ga{constructor(e){this.config=Lt(e),this.cryptoProvider=new zt,this.logger=new ye(this.config.system.loggerOptions,"@azure/msal-node",ea),this.storage=new Kt(this.logger,this.config.auth.clientId,this.cryptoProvider),this.tokenCache=new Zt(this.storage,this.logger,this.config.cache.cachePlugin)}async getAuthCodeUrl(e){this.logger.info("getAuthCodeUrl called",e.correlationId);const t={...e,...await this.initializeBaseRequest(e),responseMode:e.responseMode||T.QUERY,authenticationScheme:M.BEARER},a=await this.buildOauthClientConfiguration(t.authority,t.correlationId,void 0,void 0,e.azureCloudOptions),r=new ht(a);return this.logger.verbose("Auth code client created",t.correlationId),r.getAuthCodeUrl(t)}async acquireTokenByCode(e,t){this.logger.info("acquireTokenByCode called"),e.state&&t&&(this.logger.info("acquireTokenByCode - validating state"),this.validateState(e.state,t.state||""),t={...t,state:""});const a={...e,...await this.initializeBaseRequest(e),authenticationScheme:M.BEARER},r=this.initializeServerTelemetryManager(871,a.correlationId);try{const i=await this.buildOauthClientConfiguration(a.authority,a.correlationId,r,void 0,e.azureCloudOptions),o=new ht(i);return this.logger.verbose("Auth code client created",a.correlationId),o.acquireToken(a,t)}catch(e){throw e instanceof q&&e.setCorrelationId(a.correlationId),r.cacheFailedRequest(e),e}}async acquireTokenByRefreshToken(e){this.logger.info("acquireTokenByRefreshToken called",e.correlationId);const t={...e,...await this.initializeBaseRequest(e),authenticationScheme:M.BEARER},a=this.initializeServerTelemetryManager(872,t.correlationId);try{const r=await this.buildOauthClientConfiguration(t.authority,t.correlationId,a,void 0,e.azureCloudOptions),i=new ft(r);return this.logger.verbose("Refresh token client created",t.correlationId),i.acquireToken(t)}catch(e){throw e instanceof q&&e.setCorrelationId(t.correlationId),a.cacheFailedRequest(e),e}}async acquireTokenSilent(e){const t={...e,...await this.initializeBaseRequest(e),forceRefresh:e.forceRefresh||!1},a=this.initializeServerTelemetryManager(62,t.correlationId,t.forceRefresh);try{const r=await this.buildOauthClientConfiguration(t.authority,t.correlationId,a,void 0,e.azureCloudOptions),i=new vt(r);return this.logger.verbose("Silent flow client created",t.correlationId),i.acquireToken(t)}catch(e){throw e instanceof q&&e.setCorrelationId(t.correlationId),a.cacheFailedRequest(e),e}}async acquireTokenByUsernamePassword(e){this.logger.info("acquireTokenByUsernamePassword called",e.correlationId);const t={...e,...await this.initializeBaseRequest(e)},a=this.initializeServerTelemetryManager(371,t.correlationId);try{const r=await this.buildOauthClientConfiguration(t.authority,t.correlationId,a,void 0,e.azureCloudOptions),i=new va(r);return this.logger.verbose("Username password client created",t.correlationId),i.acquireToken(t)}catch(e){throw e instanceof q&&e.setCorrelationId(t.correlationId),a.cacheFailedRequest(e),e}}getTokenCache(){return this.logger.info("getTokenCache called"),this.tokenCache}validateState(e,t){if(!e)throw fa.createStateNotFoundError();if(e!==t)throw H.createStateMismatchError()}getLogger(){return this.logger}setLogger(e){this.logger=e}async buildOauthClientConfiguration(e,t,a,r,i){this.logger.verbose("buildOauthClientConfiguration called",t);const n=i||this.config.auth.azureCloudOptions;this.logger.verbose(`building oauth client configuration with the authority: ${e}`,t);const p=await this.createAuthority(e,r,t,n);return a?.updateRegionDiscoveryMetadata(p.regionDiscoveryMetadata),{authOptions:{clientId:this.config.auth.clientId,authority:p,clientCapabilities:this.config.auth.clientCapabilities},loggerOptions:{logLevel:this.config.system.loggerOptions.logLevel,loggerCallback:this.config.system.loggerOptions.loggerCallback,piiLoggingEnabled:this.config.system.loggerOptions.piiLoggingEnabled,correlationId:t},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.cryptoProvider,networkInterface:this.config.system.networkClient,storageInterface:this.storage,serverTelemetryManager:a,clientCredentials:{clientSecret:this.clientSecret,clientAssertion:this.clientAssertion?this.getClientAssertion(p):void 0},libraryInfo:{sku:"msal.js.node",version:ea,cpu:process.arch||o.EMPTY_STRING,os:process.platform||o.EMPTY_STRING},telemetry:this.config.telemetry,persistencePlugin:this.config.cache.cachePlugin,serializableCache:this.tokenCache}}getClientAssertion(e){return{assertion:this.clientAssertion.getJwt(this.cryptoProvider,this.config.auth.clientId,e.tokenEndpoint),assertionType:me}}async initializeBaseRequest(e){return this.logger.verbose("initializeRequestScopes called",e.correlationId),e.authenticationScheme&&e.authenticationScheme===M.POP&&this.logger.verbose("Authentication Scheme 'pop' is not supported yet, setting Authentication Scheme to 'Bearer' for request",e.correlationId),e.authenticationScheme=M.BEARER,this.config.cache.claimsBasedCachingEnabled&&e.claims&&!Y.isEmptyObj(e.claims)&&(e.requestedClaimsHash=await this.cryptoProvider.hashString(e.claims)),{...e,scopes:[...e&&e.scopes||[],...n],correlationId:e&&e.correlationId||this.cryptoProvider.createNewGuid(),authority:e.authority||this.config.auth.authority}}initializeServerTelemetryManager(e,t,a){const r={clientId:this.config.auth.clientId,correlationId:t,apiId:e,forceRefresh:a||!1};return new yt(r,this.storage)}async createAuthority(e,t,a,r){this.logger.verbose("createAuthority called",a);const i=Ct.generateAuthority(e,r),o={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,azureRegionConfiguration:t,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache};return await bt.createDiscoveredInstance(i,this.config.system.networkClient,this.storage,o,this.logger)}clearCache(){this.storage.clear()}}class ya{async listenForAuthCode(e,t){if(this.server)throw fa.createLoopbackServerAlreadyExistsError();const a=new Promise(((a,r)=>{this.server=Rt.createServer((async(i,n)=>{const p=i.url;if(!p)return n.end(t||"Error occurred loading redirectUrl"),void r(fa.createUnableToLoadRedirectUrlError());if(p===o.FORWARD_SLASH)return void n.end(e||"Auth code was successfully acquired. You can close this window now.");const d=st.getDeserializedQueryString(p);if(d.code){const e=await this.getRedirectUri();n.writeHead(302,{location:e}),n.end()}a(d)})),this.server.listen(0)}));return await new Promise((e=>{let t=0;const a=setInterval((()=>{if(50<t)throw fa.createLoopbackServerTimeoutError();this.server.listening&&(clearInterval(a),e()),t++}),100)})),a}getRedirectUri(){if(!this.server)throw fa.createNoLoopbackServerExistsError();const e=this.server.address();if(!e||"string"==typeof e||!e.port)throw this.closeServer(),fa.createInvalidLoopbackAddressTypeError();const t=e&&e.port;return`${he}${fe}:${t}`}closeServer(){this.server&&this.server.close()}}class wa extends at{constructor(e){super(e)}async acquireToken(e){const t=await this.getDeviceCode(e);e.deviceCodeCallback(t);const a=oe.nowSeconds(),r=await this.acquireTokenWithDeviceCode(e,t),i=new mt(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return i.validateTokenResponse(r),await i.handleServerTokenResponse(r,this.authority,a,e)}async getDeviceCode(e){const t=this.createExtraQueryParameters(e),a=st.appendQueryString(this.authority.deviceCodeEndpoint,t),r=this.createQueryString(e),i=this.createTokenRequestHeaders(),o={clientId:this.config.authOptions.clientId,authority:e.authority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid};return this.executePostRequestToDeviceCodeEndpoint(a,r,i,o)}createExtraQueryParameters(e){const t=new xe;return e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters),t.createQueryString()}async executePostRequestToDeviceCodeEndpoint(e,t,a,r){const{body:{user_code:i,device_code:o,verification_uri:n,expires_in:p,interval:d,message:s}}=await this.networkManager.sendPostRequest(r,e,{body:t,headers:a});return{userCode:i,deviceCode:o,verificationUri:n,expiresIn:p,interval:d,message:s}}createQueryString(e){const t=new xe;return t.addScopes(e.scopes),t.addClientId(this.config.authOptions.clientId),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters),(e.claims||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),t.createQueryString()}continuePolling(e,t,a){if(a)throw this.logger.error("Token request cancelled by setting DeviceCodeRequest.cancel = true"),H.createDeviceCodeCancelledError();if(t&&t<e&&oe.nowSeconds()>t)throw this.logger.error(`User defined timeout for device code polling reached. The timeout was set for ${t}`),H.createUserTimeoutReachedError();if(oe.nowSeconds()>e)throw t&&this.logger.verbose(`User specified timeout ignored as the device code has expired before the timeout elapsed. The user specified timeout was set for ${t}`),this.logger.error(`Device code expired. Expiration time of device code was ${e}`),H.createDeviceCodeExpiredError();return!0}async acquireTokenWithDeviceCode(e,t){const a=this.createTokenQueryParameters(e),r=st.appendQueryString(this.authority.tokenEndpoint,a),i=this.createTokenRequestBody(e,t),n=this.createTokenRequestHeaders(),p=e.timeout?oe.nowSeconds()+e.timeout:void 0,d=oe.nowSeconds()+t.expiresIn,s=1e3*t.interval;for(;this.continuePolling(d,p,e.cancel);){const t={clientId:this.config.authOptions.clientId,authority:e.authority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid},a=await this.executePostToTokenEndpoint(r,i,n,t,e.correlationId);if(!a.body||!a.body.error)return this.logger.verbose("Authorization completed successfully. Polling stopped."),a.body;if(a.body.error!==o.AUTHORIZATION_PENDING)throw this.logger.info("Unexpected error in polling from the server"),ve.createPostRequestFailed(a.body.error);this.logger.info("Authorization pending. Continue polling."),await oe.delay(s)}throw this.logger.error("Polling stopped for unknown reasons."),H.createDeviceCodeUnknownError()}createTokenRequestBody(e,t){const a=new xe;a.addScopes(e.scopes),a.addClientId(this.config.authOptions.clientId),a.addGrantType("device_code"),a.addDeviceCode(t.deviceCode);const r=e.correlationId||this.config.cryptoInterface.createNewGuid();return a.addCorrelationId(r),a.addClientInfo(),a.addLibraryInfo(this.config.libraryInfo),a.addApplicationTelemetry(this.config.telemetry.application),a.addThrottling(),this.serverTelemetryManager&&a.addServerTelemetry(this.serverTelemetryManager),(!Y.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&a.addClaims(e.claims,this.config.authOptions.clientCapabilities),a.createQueryString()}}class _a extends ga{constructor(e){super(e),this.config.broker.nativeBrokerPlugin&&(this.config.broker.nativeBrokerPlugin.isBrokerAvailable?(this.nativeBrokerPlugin=this.config.broker.nativeBrokerPlugin,this.nativeBrokerPlugin.setLogger(this.config.system.loggerOptions)):this.logger.warning("NativeBroker implementation was provided but the broker is unavailable."))}async acquireTokenByDeviceCode(e){this.logger.info("acquireTokenByDeviceCode called",e.correlationId);const t=Object.assign(e,await this.initializeBaseRequest(e)),a=this.initializeServerTelemetryManager(671,t.correlationId);try{const r=await this.buildOauthClientConfiguration(t.authority,t.correlationId,a,void 0,e.azureCloudOptions),i=new wa(r);return this.logger.verbose("Device code client created",t.correlationId),i.acquireToken(t)}catch(e){throw e instanceof q&&e.setCorrelationId(t.correlationId),a.cacheFailedRequest(e),e}}async acquireTokenInteractive(e){const t=e.correlationId||this.cryptoProvider.createNewGuid();this.logger.trace("acquireTokenInteractive called",t);const{openBrowser:a,successTemplate:r,errorTemplate:i,windowHandle:p,loopbackClient:d,...s}=e;if(this.nativeBrokerPlugin){const a={...s,clientId:this.config.auth.clientId,scopes:e.scopes||n,redirectUri:`${he}${fe}`,authority:e.authority||this.config.auth.authority,correlationId:t,extraParameters:{...s.extraQueryParameters,...s.tokenQueryParameters},accountId:s.account?.nativeAccountId};return this.nativeBrokerPlugin.acquireTokenInteractive(a,p)}const{verifier:l,challenge:c}=await this.cryptoProvider.generatePkceCodes(),m=d||new ya;let u;try{u=m.listenForAuthCode(r,i);const p=m.getRedirectUri(),d={...s,correlationId:t,scopes:e.scopes||n,redirectUri:p,responseMode:T.QUERY,codeChallenge:c,codeChallengeMethod:w.S256},h=await this.getAuthCodeUrl(d);await a(h);const f=await u.finally((()=>{m.closeServer()}));if(f.error)throw new ve(f.error,f.error_description,f.suberror);if(!f.code)throw fa.createNoAuthCodeInResponseError();const v=f.client_info,g={code:f.code,codeVerifier:l,clientInfo:v||o.EMPTY_STRING,...d};return this.acquireTokenByCode(g)}catch(e){throw m.closeServer(),e}}async acquireTokenSilent(e){const t=e.correlationId||this.cryptoProvider.createNewGuid();if(this.logger.trace("acquireTokenSilent called",t),this.nativeBrokerPlugin){const a={...e,clientId:this.config.auth.clientId,scopes:e.scopes||n,redirectUri:`${he}${fe}`,authority:e.authority||this.config.auth.authority,correlationId:t,extraParameters:e.tokenQueryParameters,accountId:e.account.nativeAccountId,forceRefresh:e.forceRefresh||!1};return this.nativeBrokerPlugin.acquireTokenSilent(a)}return super.acquireTokenSilent(e)}async signOut(e){if(this.nativeBrokerPlugin&&e.account.nativeAccountId){const t={clientId:this.config.auth.clientId,accountId:e.account.nativeAccountId,correlationId:e.correlationId||this.cryptoProvider.createNewGuid()};await this.nativeBrokerPlugin.signOut(t)}await this.getTokenCache().removeAccount(e.account)}async getAllAccounts(){if(this.nativeBrokerPlugin){const e=this.cryptoProvider.createNewGuid();return this.nativeBrokerPlugin.getAllAccounts(this.config.auth.clientId,e)}return this.getTokenCache().getAllAccounts()}}var Ta=a(9704);class Ea{static fromAssertion(e){const t=new Ea;return t.jwt=e,t}static fromCertificate(e,t,a){const r=new Ea;return r.privateKey=t,r.thumbprint=e,a&&(r.publicCertificate=this.parseCertificate(a)),r}getJwt(e,t,a){if(this.privateKey&&this.thumbprint)return this.jwt&&!this.isExpired()&&t===this.issuer&&a===this.jwtAudience?this.jwt:this.createJwt(e,t,a);if(this.jwt)return this.jwt;throw H.createInvalidAssertionError()}createJwt(e,t,a){this.issuer=t,this.jwtAudience=a;const r=oe.nowSeconds();this.expirationTime=r+600;const i={alg:"RS256",x5t:$t.base64EncodeUrl(this.thumbprint,"hex")};this.publicCertificate&&Object.assign(i,{x5c:this.publicCertificate});const o={aud:this.jwtAudience,exp:this.expirationTime,iss:this.issuer,sub:this.issuer,nbf:r,jti:e.createNewGuid()};return this.jwt=Ta.sign(o,this.privateKey,{header:i}),this.jwt}isExpired(){return this.expirationTime<oe.nowSeconds()}static parseCertificate(e){const t=/-----BEGIN CERTIFICATE-----\r*\n(.+?)\r*\n-----END CERTIFICATE-----/gs,a=[];let r;for(;null!==(r=t.exec(e));)a.push(r[1].replace(/\r*\n/g,o.EMPTY_STRING));return a}}class Sa extends at{constructor(e,t){super(e),this.appTokenProvider=t}async acquireToken(e){if(this.scopeSet=new W(e.scopes||[]),e.skipCache)return await this.executeTokenRequest(e,this.authority);const t=await this.getCachedAuthenticationResult(e);if(t){if(this.lastCacheOutcome===L){this.logger.info("ClientCredentialClient:getCachedAuthenticationResult - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed.");const t=!0;await this.executeTokenRequest(e,this.authority,t)}return this.lastCacheOutcome="0",t}return await this.executeTokenRequest(e,this.authority)}async getCachedAuthenticationResult(e){let t;this.config.serializableCache&&this.config.persistencePlugin&&(t=new ct(this.config.serializableCache,!1),await this.config.persistencePlugin.beforeCacheAccess(t));const a=this.readAccessTokenFromCache();return this.config.serializableCache&&this.config.persistencePlugin&&t&&await this.config.persistencePlugin.afterCacheAccess(t),a?oe.isTokenExpired(a.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds)?(this.lastCacheOutcome=U,this.serverTelemetryManager?.setCacheOutcome(U),null):(a.refreshOn&&oe.isTokenExpired(a.refreshOn.toString(),0)&&(this.lastCacheOutcome=L,this.serverTelemetryManager?.setCacheOutcome(L)),await mt.generateAuthenticationResult(this.cryptoUtils,this.authority,{account:null,idToken:null,accessToken:a,refreshToken:null,appMetadata:null},!0,e)):(this.lastCacheOutcome=V,this.serverTelemetryManager?.setCacheOutcome(V),null)}readAccessTokenFromCache(){const e={homeAccountId:o.EMPTY_STRING,environment:this.authority.canonicalAuthorityUrlComponents.HostNameAndPort,credentialType:b.ACCESS_TOKEN,clientId:this.config.authOptions.clientId,realm:this.authority.tenant,target:W.createSearchScopes(this.scopeSet.asArray())},t=this.cacheManager.getAccessTokensByFilter(e);if(t.length<1)return null;if(t.length>1)throw H.createMultipleMatchingTokensInCacheError();return t[0]}async executeTokenRequest(e,t,a){let r,i;if(this.appTokenProvider){this.logger.info("Using appTokenProvider extensibility.");const t={correlationId:e.correlationId,tenantId:this.config.authOptions.authority.tenant,scopes:e.scopes,claims:e.claims};i=oe.nowSeconds();const a=await this.appTokenProvider(t);r={access_token:a.accessToken,expires_in:a.expiresInSeconds,refresh_in:a.refreshInSeconds,token_type:M.BEARER}}else{const a=this.createTokenQueryParameters(e),o=st.appendQueryString(t.tokenEndpoint,a),n=this.createTokenRequestBody(e),p=this.createTokenRequestHeaders(),d={clientId:this.config.authOptions.clientId,authority:e.authority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid};i=oe.nowSeconds();const s=await this.executePostToTokenEndpoint(o,n,p,d,e.correlationId);r=s.body,r.status=s.status}const o=new mt(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return o.validateTokenResponse(r,a),await o.handleServerTokenResponse(r,this.authority,i,e)}createTokenRequestBody(e){const t=new xe;t.addClientId(this.config.authOptions.clientId),t.addScopes(e.scopes,!1),t.addGrantType("client_credentials"),t.addLibraryInfo(this.config.libraryInfo),t.addApplicationTelemetry(this.config.telemetry.application),t.addThrottling(),this.serverTelemetryManager&&t.addServerTelemetry(this.serverTelemetryManager);const a=e.correlationId||this.config.cryptoInterface.createNewGuid();t.addCorrelationId(a),this.config.clientCredentials.clientSecret&&t.addClientSecret(this.config.clientCredentials.clientSecret);const r=e.clientAssertion||this.config.clientCredentials.clientAssertion;return r&&(t.addClientAssertion(r.assertion),t.addClientAssertionType(r.assertionType)),(!Y.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),t.createQueryString()}}class Ca extends at{constructor(e){super(e)}async acquireToken(e){if(this.scopeSet=new W(e.scopes||[]),this.userAssertionHash=await this.cryptoUtils.hashString(e.oboAssertion),e.skipCache)return await this.executeTokenRequest(e,this.authority,this.userAssertionHash);try{return await this.getCachedAuthenticationResult(e)}catch(t){return await this.executeTokenRequest(e,this.authority,this.userAssertionHash)}}async getCachedAuthenticationResult(e){const t=this.readAccessTokenFromCacheForOBO(this.config.authOptions.clientId,e);if(!t)throw this.serverTelemetryManager?.setCacheOutcome(V),this.logger.info("SilentFlowClient:acquireCachedToken - No access token found in cache for the given properties."),H.createRefreshRequiredError();if(oe.isTokenExpired(t.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.serverTelemetryManager?.setCacheOutcome(U),this.logger.info(`OnbehalfofFlow:getCachedAuthenticationResult - Cached access token is expired or will expire within ${this.config.systemOptions.tokenRenewalOffsetSeconds} seconds.`),H.createRefreshRequiredError();const a=this.readIdTokenFromCacheForOBO(t.homeAccountId);let r,i=null;if(a){r=X(a.secret,$t.base64Decode);const e=r.oid||r.sub,t={homeAccountId:a.homeAccountId,environment:a.environment,tenantId:a.realm,username:o.EMPTY_STRING,localAccountId:e||o.EMPTY_STRING};i=this.cacheManager.readAccountFromCache(t)}return this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),await mt.generateAuthenticationResult(this.cryptoUtils,this.authority,{account:i,accessToken:t,idToken:a,refreshToken:null,appMetadata:null},!0,e,r)}readIdTokenFromCacheForOBO(e){const t={homeAccountId:e,environment:this.authority.canonicalAuthorityUrlComponents.HostNameAndPort,credentialType:b.ID_TOKEN,clientId:this.config.authOptions.clientId,realm:this.authority.tenant},a=this.cacheManager.getIdTokensByFilter(t);return a.length<1?null:a[0]}readAccessTokenFromCacheForOBO(e,t){const a=t.authenticationScheme||M.BEARER,r={credentialType:a&&a.toLowerCase()!==M.BEARER.toLowerCase()?b.ACCESS_TOKEN_WITH_AUTH_SCHEME:b.ACCESS_TOKEN,clientId:e,target:W.createSearchScopes(this.scopeSet.asArray()),tokenType:a,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash,userAssertionHash:this.userAssertionHash},i=this.cacheManager.getAccessTokensByFilter(r),o=i.length;if(o<1)return null;if(o>1)throw H.createMultipleMatchingTokensInCacheError();return i[0]}async executeTokenRequest(e,t,a){const r=this.createTokenQueryParameters(e),i=st.appendQueryString(t.tokenEndpoint,r),o=this.createTokenRequestBody(e),n=this.createTokenRequestHeaders(),p={clientId:this.config.authOptions.clientId,authority:e.authority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid},d=oe.nowSeconds(),s=await this.executePostToTokenEndpoint(i,o,n,p,e.correlationId),l=new mt(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return l.validateTokenResponse(s.body),await l.handleServerTokenResponse(s.body,this.authority,d,e,void 0,a)}createTokenRequestBody(e){const t=new xe;t.addClientId(this.config.authOptions.clientId),t.addScopes(e.scopes),t.addGrantType("urn:ietf:params:oauth:grant-type:jwt-bearer"),t.addClientInfo(),t.addLibraryInfo(this.config.libraryInfo),t.addApplicationTelemetry(this.config.telemetry.application),t.addThrottling(),this.serverTelemetryManager&&t.addServerTelemetry(this.serverTelemetryManager);const a=e.correlationId||this.config.cryptoInterface.createNewGuid();if(t.addCorrelationId(a),t.addRequestTokenUse("on_behalf_of"),t.addOboAssertion(e.oboAssertion),this.config.clientCredentials.clientSecret&&t.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const e=this.config.clientCredentials.clientAssertion;t.addClientAssertion(e.assertion),t.addClientAssertionType(e.assertionType)}return(e.claims||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),t.createQueryString()}}class ba extends ga{constructor(e){super(e),this.setClientCredential(this.config),this.appTokenProvider=void 0}SetAppTokenProvider(e){this.appTokenProvider=e}async acquireTokenByClientCredential(e){let t;this.logger.info("acquireTokenByClientCredential called",e.correlationId),e.clientAssertion&&(t={assertion:e.clientAssertion,assertionType:me});const a=await this.initializeBaseRequest(e),r={...a,scopes:a.scopes.filter((e=>!n.includes(e)))},i={...e,...r,clientAssertion:t},o=new st(i.authority).getUrlComponents().PathSegments[0];if(Object.values(c).includes(o))throw H.createMissingTenantIdError();const p={azureRegion:i.azureRegion,environmentRegion:process.env.REGION_NAME},d=this.initializeServerTelemetryManager(771,i.correlationId,i.skipCache);try{const t=await this.buildOauthClientConfiguration(i.authority,i.correlationId,d,p,e.azureCloudOptions),a=new Sa(t,this.appTokenProvider);return this.logger.verbose("Client credential client created",i.correlationId),a.acquireToken(i)}catch(e){throw e instanceof q&&e.setCorrelationId(i.correlationId),d.cacheFailedRequest(e),e}}async acquireTokenOnBehalfOf(e){this.logger.info("acquireTokenOnBehalfOf called",e.correlationId);const t={...e,...await this.initializeBaseRequest(e)};try{const a=await this.buildOauthClientConfiguration(t.authority,t.correlationId,void 0,void 0,e.azureCloudOptions),r=new Ca(a);return this.logger.verbose("On behalf of client created",t.correlationId),r.acquireToken(t)}catch(e){throw e instanceof q&&e.setCorrelationId(t.correlationId),e}}setClientCredential(e){const t=!!e.auth.clientSecret,a=!!e.auth.clientAssertion,r=e.auth.clientCertificate||{thumbprint:o.EMPTY_STRING,privateKey:o.EMPTY_STRING},i=!!r.thumbprint||!!r.privateKey;if(!this.appTokenProvider){if(t&&a||a&&i||t&&i)throw H.createInvalidCredentialError();if(e.auth.clientSecret)this.clientSecret=e.auth.clientSecret;else if(e.auth.clientAssertion)this.clientAssertion=Ea.fromAssertion(e.auth.clientAssertion);else{if(!i)throw H.createInvalidCredentialError();this.clientAssertion=Ea.fromCertificate(r.thumbprint,r.privateKey,e.auth.clientCertificate?.x5c)}}}}class Aa{constructor(e,t){this.client=e,this.partitionManager=t}async beforeCacheAccess(e){const t=await this.partitionManager.getKey(),a=await this.client.get(t);e.tokenCache.deserialize(a)}async afterCacheAccess(e){if(e.cacheHasChanged){const t=e.tokenCache.getKVStore(),a=Object.values(t).filter((e=>G.isAccountEntity(e)));if(a.length>0){const t=a[0],r=await this.partitionManager.extractKey(t);await this.client.set(r,e.tokenCache.serialize())}}}}},1853:(e,t,a)=>{"use strict";a.r(t),a.d(t,{AbortError:()=>K,FetchError:()=>u,Headers:()=>k,Request:()=>G,Response:()=>L,default:()=>J});var r=a(2781),i=a(3685);const o=require("url");var n=a(7347),p=a(5687);const d=require("zlib"),s=r.Readable,l=Symbol("buffer"),c=Symbol("type");class m{constructor(){this[c]="";const e=arguments[0],t=arguments[1],a=[];let r=0;if(e){const t=e,i=Number(t.length);for(let e=0;e<i;e++){const i=t[e];let o;o=i instanceof Buffer?i:ArrayBuffer.isView(i)?Buffer.from(i.buffer,i.byteOffset,i.byteLength):i instanceof ArrayBuffer?Buffer.from(i):i instanceof m?i[l]:Buffer.from("string"==typeof i?i:String(i)),r+=o.length,a.push(o)}}this[l]=Buffer.concat(a);let i=t&&void 0!==t.type&&String(t.type).toLowerCase();i&&!/[^\u0020-\u007E]/.test(i)&&(this[c]=i)}get size(){return this[l].length}get type(){return this[c]}text(){return Promise.resolve(this[l].toString())}arrayBuffer(){const e=this[l],t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(t)}stream(){const e=new s;return e._read=function(){},e.push(this[l]),e.push(null),e}toString(){return"[object Blob]"}slice(){const e=this.size,t=arguments[0],a=arguments[1];let r,i;r=void 0===t?0:t<0?Math.max(e+t,0):Math.min(t,e),i=void 0===a?e:a<0?Math.max(e+a,0):Math.min(a,e);const o=Math.max(i-r,0),n=this[l].slice(r,r+o),p=new m([],{type:arguments[2]});return p[l]=n,p}}function u(e,t,a){Error.call(this,e),this.message=e,this.type=t,a&&(this.code=this.errno=a.code),Error.captureStackTrace(this,this.constructor)}let h;Object.defineProperties(m.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(m.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),u.prototype=Object.create(Error.prototype),u.prototype.constructor=u,u.prototype.name="FetchError";try{h=require("encoding").convert}catch(e){}const f=Symbol("Body internals"),v=r.PassThrough;function g(e){var t=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=a.size;let o=void 0===i?0:i;var n=a.timeout;let p=void 0===n?0:n;null==e?e=null:w(e)?e=Buffer.from(e.toString()):_(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof r||(e=Buffer.from(String(e)))),this[f]={body:e,disturbed:!1,error:null},this.size=o,this.timeout=p,e instanceof r&&e.on("error",(function(e){const a="AbortError"===e.name?e:new u(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[f].error=a}))}function y(){var e=this;if(this[f].disturbed)return g.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[f].disturbed=!0,this[f].error)return g.Promise.reject(this[f].error);let t=this.body;if(null===t)return g.Promise.resolve(Buffer.alloc(0));if(_(t)&&(t=t.stream()),Buffer.isBuffer(t))return g.Promise.resolve(t);if(!(t instanceof r))return g.Promise.resolve(Buffer.alloc(0));let a=[],i=0,o=!1;return new g.Promise((function(r,n){let p;e.timeout&&(p=setTimeout((function(){o=!0,n(new u(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)),t.on("error",(function(t){"AbortError"===t.name?(o=!0,n(t)):n(new u(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))})),t.on("data",(function(t){if(!o&&null!==t){if(e.size&&i+t.length>e.size)return o=!0,void n(new u(`content size at ${e.url} over limit: ${e.size}`,"max-size"));i+=t.length,a.push(t)}})),t.on("end",(function(){if(!o){clearTimeout(p);try{r(Buffer.concat(a,i))}catch(t){n(new u(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}}))}))}function w(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function _(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function T(e){let t,a,i=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return i instanceof r&&"function"!=typeof i.getBoundary&&(t=new v,a=new v,i.pipe(t),i.pipe(a),e[f].body=t,i=a),i}function E(e){return null===e?null:"string"==typeof e?"text/plain;charset=UTF-8":w(e)?"application/x-www-form-urlencoded;charset=UTF-8":_(e)?e.type||null:Buffer.isBuffer(e)||"[object ArrayBuffer]"===Object.prototype.toString.call(e)||ArrayBuffer.isView(e)?null:"function"==typeof e.getBoundary?`multipart/form-data;boundary=${e.getBoundary()}`:e instanceof r?null:"text/plain;charset=UTF-8"}function S(e){const t=e.body;return null===t?0:_(t)?t.size:Buffer.isBuffer(t)?t.length:t&&"function"==typeof t.getLengthSync&&(t._lengthRetrievers&&0==t._lengthRetrievers.length||t.hasKnownLength&&t.hasKnownLength())?t.getLengthSync():null}g.prototype={get body(){return this[f].body},get bodyUsed(){return this[f].disturbed},arrayBuffer(){return y.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return y.call(this).then((function(t){return Object.assign(new m([],{type:e.toLowerCase()}),{[l]:t})}))},json(){var e=this;return y.call(this).then((function(t){try{return JSON.parse(t.toString())}catch(t){return g.Promise.reject(new u(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}}))},text(){return y.call(this).then((function(e){return e.toString()}))},buffer(){return y.call(this)},textConverted(){var e=this;return y.call(this).then((function(t){return function(e,t){if("function"!=typeof h)throw new Error("The package `encoding` must be installed to use the textConverted() function");const a=t.get("content-type");let r,i,o="utf-8";return a&&(r=/charset=([^;]*)/i.exec(a)),i=e.slice(0,1024).toString(),!r&&i&&(r=/<meta.+?charset=(['"])(.+?)\1/i.exec(i)),!r&&i&&(r=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(i),r||(r=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(i),r&&r.pop()),r&&(r=/charset=(.*)/i.exec(r.pop()))),!r&&i&&(r=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(i)),r&&(o=r.pop(),"gb2312"!==o&&"gbk"!==o||(o="gb18030")),h(e,"UTF-8",o).toString()}(t,e.headers)}))}},Object.defineProperties(g.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),g.mixIn=function(e){for(const t of Object.getOwnPropertyNames(g.prototype))if(!(t in e)){const a=Object.getOwnPropertyDescriptor(g.prototype,t);Object.defineProperty(e,t,a)}},g.Promise=global.Promise;const C=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,b=/[^\t\x20-\x7e\x80-\xff]/;function A(e){if(e=`${e}`,C.test(e)||""===e)throw new TypeError(`${e} is not a legal HTTP header name`)}function R(e){if(e=`${e}`,b.test(e))throw new TypeError(`${e} is not a legal HTTP header value`)}function I(e,t){t=t.toLowerCase();for(const a in e)if(a.toLowerCase()===t)return a}const N=Symbol("map");class k{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[N]=Object.create(null),e instanceof k){const t=e.raw(),a=Object.keys(t);for(const e of a)for(const a of t[e])this.append(e,a)}else if(null==e);else{if("object"!=typeof e)throw new TypeError("Provided initializer must be an object");{const t=e[Symbol.iterator];if(null!=t){if("function"!=typeof t)throw new TypeError("Header pairs must be iterable");const a=[];for(const t of e){if("object"!=typeof t||"function"!=typeof t[Symbol.iterator])throw new TypeError("Each header pair must be iterable");a.push(Array.from(t))}for(const e of a){if(2!==e.length)throw new TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(const t of Object.keys(e)){const a=e[t];this.append(t,a)}}}}get(e){A(e=`${e}`);const t=I(this[N],e);return void 0===t?null:this[N][t].join(", ")}forEach(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,a=O(this),r=0;for(;r<a.length;){var i=a[r];const o=i[0],n=i[1];e.call(t,n,o,this),a=O(this),r++}}set(e,t){t=`${t}`,A(e=`${e}`),R(t);const a=I(this[N],e);this[N][void 0!==a?a:e]=[t]}append(e,t){t=`${t}`,A(e=`${e}`),R(t);const a=I(this[N],e);void 0!==a?this[N][a].push(t):this[N][e]=[t]}has(e){return A(e=`${e}`),void 0!==I(this[N],e)}delete(e){A(e=`${e}`);const t=I(this[N],e);void 0!==t&&delete this[N][t]}raw(){return this[N]}keys(){return P(this,"key")}values(){return P(this,"value")}[Symbol.iterator](){return P(this,"key+value")}}function O(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";return Object.keys(e[N]).sort().map("key"===t?function(e){return e.toLowerCase()}:"value"===t?function(t){return e[N][t].join(", ")}:function(t){return[t.toLowerCase(),e[N][t].join(", ")]})}k.prototype.entries=k.prototype[Symbol.iterator],Object.defineProperty(k.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(k.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});const D=Symbol("internal");function P(e,t){const a=Object.create(M);return a[D]={target:e,kind:t,index:0},a}const M=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==M)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[D];const t=e.target,a=e.kind,r=e.index,i=O(t,a);return r>=i.length?{value:void 0,done:!0}:(this[D].index=r+1,{value:i[r],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));function x(e){const t=Object.assign({__proto__:null},e[N]),a=I(e[N],"Host");return void 0!==a&&(t[a]=t[a][0]),t}Object.defineProperty(M,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});const V=Symbol("Response internals"),U=i.STATUS_CODES;class L{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};g.call(this,e,t);const a=t.status||200,r=new k(t.headers);if(null!=e&&!r.has("Content-Type")){const t=E(e);t&&r.append("Content-Type",t)}this[V]={url:t.url,status:a,statusText:t.statusText||U[a],headers:r,counter:t.counter}}get url(){return this[V].url||""}get status(){return this[V].status}get ok(){return this[V].status>=200&&this[V].status<300}get redirected(){return this[V].counter>0}get statusText(){return this[V].statusText}get headers(){return this[V].headers}clone(){return new L(T(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}g.mixIn(L.prototype),Object.defineProperties(L.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(L.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});const F=Symbol("Request internals"),q=o.URL||n.URL,$=o.parse,H=o.format;function j(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new q(e).toString()),$(e)}const B="destroy"in r.Readable.prototype;function z(e){return"object"==typeof e&&"object"==typeof e[F]}class G{constructor(e){let t,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};z(e)?t=j(e.url):(t=e&&e.href?j(e.href):j(`${e}`),e={});let r=a.method||e.method||"GET";if(r=r.toUpperCase(),(null!=a.body||z(e)&&null!==e.body)&&("GET"===r||"HEAD"===r))throw new TypeError("Request with GET/HEAD method cannot have body");let i=null!=a.body?a.body:z(e)&&null!==e.body?T(e):null;g.call(this,i,{timeout:a.timeout||e.timeout||0,size:a.size||e.size||0});const o=new k(a.headers||e.headers||{});if(null!=i&&!o.has("Content-Type")){const e=E(i);e&&o.append("Content-Type",e)}let n=z(e)?e.signal:null;if("signal"in a&&(n=a.signal),null!=n&&!function(e){const t=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!(!t||"AbortSignal"!==t.constructor.name)}(n))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[F]={method:r,redirect:a.redirect||e.redirect||"follow",headers:o,parsedURL:t,signal:n},this.follow=void 0!==a.follow?a.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==a.compress?a.compress:void 0===e.compress||e.compress,this.counter=a.counter||e.counter||0,this.agent=a.agent||e.agent}get method(){return this[F].method}get url(){return H(this[F].parsedURL)}get headers(){return this[F].headers}get redirect(){return this[F].redirect}get signal(){return this[F].signal}clone(){return new G(this)}}function K(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}g.mixIn(G.prototype),Object.defineProperty(G.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(G.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),K.prototype=Object.create(Error.prototype),K.prototype.constructor=K,K.prototype.name="AbortError";const Q=o.URL||n.URL,Y=r.PassThrough;function W(e,t){if(!W.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return g.Promise=W.Promise,new W.Promise((function(a,o){const n=new G(e,t),s=function(e){const t=e[F].parsedURL,a=new k(e[F].headers);if(a.has("Accept")||a.set("Accept","*/*"),!t.protocol||!t.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(t.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof r.Readable&&!B)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let i=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(i="0"),null!=e.body){const t=S(e);"number"==typeof t&&(i=String(t))}i&&a.set("Content-Length",i),a.has("User-Agent")||a.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!a.has("Accept-Encoding")&&a.set("Accept-Encoding","gzip,deflate");let o=e.agent;return"function"==typeof o&&(o=o(t)),Object.assign({},t,{method:e.method,headers:x(a),agent:o})}(n),l=("https:"===s.protocol?p:i).request,c=n.signal;let m=null;const h=function(){let e=new K("The user aborted a request.");o(e),n.body&&n.body instanceof r.Readable&&X(n.body,e),m&&m.body&&m.body.emit("error",e)};if(c&&c.aborted)return void h();const f=function(){h(),y()},v=l(s);let g;function y(){v.abort(),c&&c.removeEventListener("abort",f),clearTimeout(g)}c&&c.addEventListener("abort",f),n.timeout&&v.once("socket",(function(e){g=setTimeout((function(){o(new u(`network timeout at: ${n.url}`,"request-timeout")),y()}),n.timeout)})),v.on("error",(function(e){o(new u(`request to ${n.url} failed, reason: ${e.message}`,"system",e)),m&&m.body&&X(m.body,e),y()})),function(e,t){let a;e.on("socket",(function(e){a=e})),e.on("response",(function(e){const r=e.headers;"chunked"!==r["transfer-encoding"]||r["content-length"]||e.once("close",(function(e){if(a&&a.listenerCount("data")>0&&!e){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",t(e)}}))}))}(v,(function(e){c&&c.aborted||m&&m.body&&X(m.body,e)})),parseInt(process.version.substring(1))<14&&v.on("socket",(function(e){e.addListener("close",(function(t){const a=e.listenerCount("data")>0;if(m&&a&&!t&&(!c||!c.aborted)){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",m.body.emit("error",e)}}))})),v.on("response",(function(e){clearTimeout(g);const t=function(e){const t=new k;for(const a of Object.keys(e))if(!C.test(a))if(Array.isArray(e[a]))for(const r of e[a])b.test(r)||(void 0===t[N][a]?t[N][a]=[r]:t[N][a].push(r));else b.test(e[a])||(t[N][a]=[e[a]]);return t}(e.headers);if(W.isRedirect(e.statusCode)){const i=t.get("Location");let p=null;try{p=null===i?null:new Q(i,n.url).toString()}catch(e){if("manual"!==n.redirect)return o(new u(`uri requested responds with an invalid redirect URL: ${i}`,"invalid-redirect")),void y()}switch(n.redirect){case"error":return o(new u(`uri requested responds with a redirect, redirect mode is set to error: ${n.url}`,"no-redirect")),void y();case"manual":if(null!==p)try{t.set("Location",p)}catch(e){o(e)}break;case"follow":if(null===p)break;if(n.counter>=n.follow)return o(new u(`maximum redirect reached at: ${n.url}`,"max-redirect")),void y();const i={headers:new k(n.headers),follow:n.follow,counter:n.counter+1,agent:n.agent,compress:n.compress,method:n.method,body:n.body,signal:n.signal,timeout:n.timeout,size:n.size};if(!function(e,t){const a=new Q(t).hostname,r=new Q(e).hostname;return a===r||"."===a[a.length-r.length-1]&&a.endsWith(r)}(n.url,p)||(r=n.url,new Q(p).protocol!==new Q(r).protocol))for(const e of["authorization","www-authenticate","cookie","cookie2"])i.headers.delete(e);return 303!==e.statusCode&&n.body&&null===S(n)?(o(new u("Cannot follow redirect with body being a readable stream","unsupported-redirect")),void y()):(303!==e.statusCode&&(301!==e.statusCode&&302!==e.statusCode||"POST"!==n.method)||(i.method="GET",i.body=void 0,i.headers.delete("content-length")),a(W(new G(p,i))),void y())}}var r;e.once("end",(function(){c&&c.removeEventListener("abort",f)}));let i=e.pipe(new Y);const p={url:n.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:n.size,timeout:n.timeout,counter:n.counter},s=t.get("Content-Encoding");if(!n.compress||"HEAD"===n.method||null===s||204===e.statusCode||304===e.statusCode)return m=new L(i,p),void a(m);const l={flush:d.Z_SYNC_FLUSH,finishFlush:d.Z_SYNC_FLUSH};if("gzip"==s||"x-gzip"==s)return i=i.pipe(d.createGunzip(l)),m=new L(i,p),void a(m);if("deflate"==s||"x-deflate"==s){const t=e.pipe(new Y);return t.once("data",(function(e){i=8==(15&e[0])?i.pipe(d.createInflate()):i.pipe(d.createInflateRaw()),m=new L(i,p),a(m)})),void t.on("end",(function(){m||(m=new L(i,p),a(m))}))}if("br"==s&&"function"==typeof d.createBrotliDecompress)return i=i.pipe(d.createBrotliDecompress()),m=new L(i,p),void a(m);m=new L(i,p),a(m)})),function(e,t){const a=t.body;null===a?e.end():_(a)?a.stream().pipe(e):Buffer.isBuffer(a)?(e.write(a),e.end()):a.pipe(e)}(v,n)}))}function X(e,t){e.destroy?e.destroy(t):(e.emit("error",t),e.end())}W.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},W.Promise=global.Promise;const J=W},7582:(e,t,a)=>{"use strict";a.r(t),a.d(t,{__addDisposableResource:()=>M,__assign:()=>o,__asyncDelegator:()=>b,__asyncGenerator:()=>C,__asyncValues:()=>A,__await:()=>S,__awaiter:()=>h,__classPrivateFieldGet:()=>O,__classPrivateFieldIn:()=>P,__classPrivateFieldSet:()=>D,__createBinding:()=>v,__decorate:()=>p,__disposeResources:()=>V,__esDecorate:()=>s,__exportStar:()=>g,__extends:()=>i,__generator:()=>f,__importDefault:()=>k,__importStar:()=>N,__makeTemplateObject:()=>R,__metadata:()=>u,__param:()=>d,__propKey:()=>c,__read:()=>w,__rest:()=>n,__runInitializers:()=>l,__setFunctionName:()=>m,__spread:()=>_,__spreadArray:()=>E,__spreadArrays:()=>T,__values:()=>y,default:()=>U});var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])},r(e,t)};function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function a(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}var o=function(){return o=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var i in t=arguments[a])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},o.apply(this,arguments)};function n(e,t){var a={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(a[r[i]]=e[r[i]])}return a}function p(e,t,a,r){var i,o=arguments.length,n=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,a):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,a,r);else for(var p=e.length-1;p>=0;p--)(i=e[p])&&(n=(o<3?i(n):o>3?i(t,a,n):i(t,a))||n);return o>3&&n&&Object.defineProperty(t,a,n),n}function d(e,t){return function(a,r){t(a,r,e)}}function s(e,t,a,r,i,o){function n(e){if(void 0!==e&&"function"!=typeof e)throw new TypeError("Function expected");return e}for(var p,d=r.kind,s="getter"===d?"get":"setter"===d?"set":"value",l=!t&&e?r.static?e:e.prototype:null,c=t||(l?Object.getOwnPropertyDescriptor(l,r.name):{}),m=!1,u=a.length-1;u>=0;u--){var h={};for(var f in r)h[f]="access"===f?{}:r[f];for(var f in r.access)h.access[f]=r.access[f];h.addInitializer=function(e){if(m)throw new TypeError("Cannot add initializers after decoration has completed");o.push(n(e||null))};var v=(0,a[u])("accessor"===d?{get:c.get,set:c.set}:c[s],h);if("accessor"===d){if(void 0===v)continue;if(null===v||"object"!=typeof v)throw new TypeError("Object expected");(p=n(v.get))&&(c.get=p),(p=n(v.set))&&(c.set=p),(p=n(v.init))&&i.unshift(p)}else(p=n(v))&&("field"===d?i.unshift(p):c[s]=p)}l&&Object.defineProperty(l,r.name,c),m=!0}function l(e,t,a){for(var r=arguments.length>2,i=0;i<t.length;i++)a=r?t[i].call(e,a):t[i].call(e);return r?a:void 0}function c(e){return"symbol"==typeof e?e:"".concat(e)}function m(e,t,a){return"symbol"==typeof t&&(t=t.description?"[".concat(t.description,"]"):""),Object.defineProperty(e,"name",{configurable:!0,value:a?"".concat(a," ",t):t})}function u(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function h(e,t,a,r){return new(a||(a=Promise))((function(i,o){function n(e){try{d(r.next(e))}catch(e){o(e)}}function p(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var t;e.done?i(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(n,p)}d((r=r.apply(e,t||[])).next())}))}function f(e,t){var a,r,i,o,n={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:p(0),throw:p(1),return:p(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function p(p){return function(d){return function(p){if(a)throw new TypeError("Generator is already executing.");for(;o&&(o=0,p[0]&&(n=0)),n;)try{if(a=1,r&&(i=2&p[0]?r.return:p[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,p[1])).done)return i;switch(r=0,i&&(p=[2&p[0],i.value]),p[0]){case 0:case 1:i=p;break;case 4:return n.label++,{value:p[1],done:!1};case 5:n.label++,r=p[1],p=[0];continue;case 7:p=n.ops.pop(),n.trys.pop();continue;default:if(!((i=(i=n.trys).length>0&&i[i.length-1])||6!==p[0]&&2!==p[0])){n=0;continue}if(3===p[0]&&(!i||p[1]>i[0]&&p[1]<i[3])){n.label=p[1];break}if(6===p[0]&&n.label<i[1]){n.label=i[1],i=p;break}if(i&&n.label<i[2]){n.label=i[2],n.ops.push(p);break}i[2]&&n.ops.pop(),n.trys.pop();continue}p=t.call(e,n)}catch(e){p=[6,e],r=0}finally{a=i=0}if(5&p[0])throw p[1];return{value:p[0]?p[1]:void 0,done:!0}}([p,d])}}}var v=Object.create?function(e,t,a,r){void 0===r&&(r=a);var i=Object.getOwnPropertyDescriptor(t,a);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[a]}}),Object.defineProperty(e,r,i)}:function(e,t,a,r){void 0===r&&(r=a),e[r]=t[a]};function g(e,t){for(var a in e)"default"===a||Object.prototype.hasOwnProperty.call(t,a)||v(t,e,a)}function y(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],r=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function w(e,t){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var r,i,o=a.call(e),n=[];try{for(;(void 0===t||t-- >0)&&!(r=o.next()).done;)n.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(a=o.return)&&a.call(o)}finally{if(i)throw i.error}}return n}function _(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(w(arguments[t]));return e}function T(){for(var e=0,t=0,a=arguments.length;t<a;t++)e+=arguments[t].length;var r=Array(e),i=0;for(t=0;t<a;t++)for(var o=arguments[t],n=0,p=o.length;n<p;n++,i++)r[i]=o[n];return r}function E(e,t,a){if(a||2===arguments.length)for(var r,i=0,o=t.length;i<o;i++)!r&&i in t||(r||(r=Array.prototype.slice.call(t,0,i)),r[i]=t[i]);return e.concat(r||Array.prototype.slice.call(t))}function S(e){return this instanceof S?(this.v=e,this):new S(e)}function C(e,t,a){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,i=a.apply(e,t||[]),o=[];return r={},n("next"),n("throw"),n("return"),r[Symbol.asyncIterator]=function(){return this},r;function n(e){i[e]&&(r[e]=function(t){return new Promise((function(a,r){o.push([e,t,a,r])>1||p(e,t)}))})}function p(e,t){try{(a=i[e](t)).value instanceof S?Promise.resolve(a.value.v).then(d,s):l(o[0][2],a)}catch(e){l(o[0][3],e)}var a}function d(e){p("next",e)}function s(e){p("throw",e)}function l(e,t){e(t),o.shift(),o.length&&p(o[0][0],o[0][1])}}function b(e){var t,a;return t={},r("next"),r("throw",(function(e){throw e})),r("return"),t[Symbol.iterator]=function(){return this},t;function r(r,i){t[r]=e[r]?function(t){return(a=!a)?{value:S(e[r](t)),done:!1}:i?i(t):t}:i}}function A(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,a=e[Symbol.asyncIterator];return a?a.call(e):(e=y(e),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(a){t[a]=e[a]&&function(t){return new Promise((function(r,i){!function(e,t,a,r){Promise.resolve(r).then((function(t){e({value:t,done:a})}),t)}(r,i,(t=e[a](t)).done,t.value)}))}}}function R(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}var I=Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t};function N(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)"default"!==a&&Object.prototype.hasOwnProperty.call(e,a)&&v(t,e,a);return I(t,e),t}function k(e){return e&&e.__esModule?e:{default:e}}function O(e,t,a,r){if("a"===a&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!r:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===a?r:"a"===a?r.call(e):r?r.value:t.get(e)}function D(e,t,a,r,i){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!i)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!i:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===r?i.call(e,a):i?i.value=a:t.set(e,a),a}function P(e,t){if(null===t||"object"!=typeof t&&"function"!=typeof t)throw new TypeError("Cannot use 'in' operator on non-object");return"function"==typeof e?t===e:e.has(t)}function M(e,t,a){if(null!=t){if("object"!=typeof t&&"function"!=typeof t)throw new TypeError("Object expected.");var r;if(a){if(!Symbol.asyncDispose)throw new TypeError("Symbol.asyncDispose is not defined.");r=t[Symbol.asyncDispose]}if(void 0===r){if(!Symbol.dispose)throw new TypeError("Symbol.dispose is not defined.");r=t[Symbol.dispose]}if("function"!=typeof r)throw new TypeError("Object not disposable.");e.stack.push({value:t,dispose:r,async:a})}else a&&e.stack.push({async:!0});return t}var x="function"==typeof SuppressedError?SuppressedError:function(e,t,a){var r=new Error(a);return r.name="SuppressedError",r.error=e,r.suppressed=t,r};function V(e){function t(t){e.error=e.hasError?new x(t,e.error,"An error was suppressed during disposal."):t,e.hasError=!0}return function a(){for(;e.stack.length;){var r=e.stack.pop();try{var i=r.dispose&&r.dispose.call(r.value);if(r.async)return Promise.resolve(i).then(a,(function(e){return t(e),a()}))}catch(e){t(e)}}if(e.hasError)throw e.error}()}const U={__extends:i,__assign:o,__rest:n,__decorate:p,__param:d,__metadata:u,__awaiter:h,__generator:f,__createBinding:v,__exportStar:g,__values:y,__read:w,__spread:_,__spreadArrays:T,__spreadArray:E,__await:S,__asyncGenerator:C,__asyncDelegator:b,__asyncValues:A,__makeTemplateObject:R,__importStar:N,__importDefault:k,__classPrivateFieldGet:O,__classPrivateFieldSet:D,__classPrivateFieldIn:P,__addDisposableResource:M,__disposeResources:V}},2020:e=>{"use strict";e.exports=JSON.parse('[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]')},9558:e=>{"use strict";e.exports=JSON.parse('{"tenantId":"ENTER_TENANT_ID","clientId":"ENTER_CLIENT_ID","authority":"https://login.microsoftonline.com"}')}},t={};function a(r){var i=t[r];if(void 0!==i)return i.exports;var o=t[r]={exports:{}};return e[r].call(o.exports,o,o.exports,a),o.exports}a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},a.d=(e,t)=>{for(var r in t)a.o(t,r)&&!a.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a(366)})();